{
	"compiler": {
		"version": "0.8.27+commit.40a35a09"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_priceFeedAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_usdcTokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_bankCapUSD",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "BankCapExceeded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidAmount",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReentrantCall",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "errorData",
						"type": "bytes"
					}
				],
				"name": "WithdrawalFailed",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "string",
						"name": "usdcOrEth",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "string",
						"name": "usdcOrEth",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdrawal",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BANK_CAP_USD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "USDC",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balances",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "eth",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "usdc",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositEth",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "depositUSDC",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getBalances",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "eth",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "usdc",
								"type": "uint256"
							}
						],
						"internalType": "struct KipuBank.Balances",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_ethAmount",
						"type": "uint256"
					}
				],
				"name": "getEthValueInUSD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "priceFeed",
				"outputs": [
					{
						"internalType": "contract AggregatorV3Interface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalEthDeposited",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdrawalEth",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdrawalUSDC",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"WithdrawalFailed(bytes)": [
					{
						"params": {
							"errorData": "The data returned by the failed call."
						}
					}
				]
			},
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_bankCapUSD": "The total deposit cap for ETH, in whole USD (e.g., 10000 for $10,000).",
						"_priceFeedAddress": "The Chainlink ETH/USD price feed address.",
						"_usdcTokenAddress": "The address of the USDC token contract."
					}
				},
				"depositEth()": {
					"details": "Reverts if the amount is zero or if the deposit would exceed the global bank cap.Follows the checks-effects-interactions pattern."
				},
				"getBalances(address)": {
					"params": {
						"_user": "The address of the user."
					},
					"returns": {
						"_0": "The user's balances of ETH and USDC."
					}
				},
				"getEthValueInUSD(uint256)": {
					"params": {
						"_ethAmount": "The amount of ETH in wei (1e18)."
					},
					"returns": {
						"_0": "The value in USD, adjusted to 8 decimals."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"withdrawalEth(uint256)": {
					"details": "Reverts if the amount is zero, exceeds the withdrawal limit, or if the user has insufficient balance.Follows the checks-effects-interactions pattern.",
					"params": {
						"_amount": "The amount to withdraw in wei."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"BankCapExceeded()": [
					{
						"notice": "Error thrown when the total deposits would exceed the bank's global cap."
					}
				],
				"InsufficientBalance()": [
					{
						"notice": "Error thrown when a user tries to withdraw more than their balance."
					}
				],
				"InvalidAmount()": [
					{
						"notice": "Error thrown when the provided amount is invalid (e.g., 0)."
					}
				],
				"ReentrantCall()": [
					{
						"notice": "Error for reentrancy guard, thrown when a reentrant call is detected."
					}
				],
				"WithdrawalFailed(bytes)": [
					{
						"notice": "Error thrown when a withdrawal transfer fails."
					}
				]
			},
			"kind": "user",
			"methods": {
				"BANK_CAP_USD()": {
					"notice": "The global deposit cap for the entire bank."
				},
				"balances(address)": {
					"notice": "Mapping from address to user balance."
				},
				"constructor": {
					"notice": "Initializes the contract."
				},
				"depositEth()": {
					"notice": "Deposits ETH into the user's balance."
				},
				"getBalances(address)": {
					"notice": "Gets the balances of a specific user."
				},
				"getEthValueInUSD(uint256)": {
					"notice": "Converts an amount of ETH (in wei) to its equivalent value in USD."
				},
				"totalEthDeposited()": {
					"notice": "The total amount of ETH currently deposited in the contract."
				},
				"withdrawalEth(uint256)": {
					"notice": "Withdraws ETH from the user's balance."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/KipuBankV2.sol": "KipuBank"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
			"keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
			"license": "MIT",
			"urls": [
				"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
				"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
				"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"src/KipuBankV2.sol": {
			"keccak256": "0xe1775617e35e7c57edbd3f8c15c0b2642c8a261ff715c9ef20ac38f90c654899",
			"license": "MIT",
			"urls": [
				"bzz-raw://2017144a2bdfd85c4b0af4095a299262c935e018f04ee3e54db5565618c0ed28",
				"dweb:/ipfs/QmPwK14ueeaohbRexFAob5LnS7mLCTS3J7Y2dtWiukTwaS"
			]
		}
	},
	"version": 1
}