{
	"id": "a20236de803cbbf5a1aa61661cc89fe6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/KipuBankV21.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title KipuBank\r\n * @author Michel Massaad\r\n * @notice A simple banking contract where users can deposit and withdraw ETH.\r\n * @dev Implements transaction limits, a global deposit cap, custom errors, and follows security best practices.\r\n */\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\ncontract KipuBank is Ownable {\r\n\r\n    // =================================================================================================================\r\n    //                                                   STATE VARIABLES\r\n    // =================================================================================================================\r\n\r\n    // --- Immutable & Constant Variables ---\r\n    /// @notice The per-transaction withdrawal limit.\r\n    uint256 public immutable WITHDRAWAL_LIMIT;\r\n    /// @notice The global deposit cap for the entire bank.\r\n    uint256 public immutable BANK_CAP_USD;\r\n\r\n    AggregatorV3Interface public priceFeed;\r\n    IERC20 public immutable USDC_TOKEN;\r\n\r\n    // --- Storage Variables ---\r\n    /// @notice The total amount of ETH currently deposited in the contract.\r\n    uint256 public totalDeposited;\r\n    /// @notice A counter for the total number of deposits made.\r\n    uint256 public depositCount;\r\n    /// @notice A counter for the total number of withdrawals made.\r\n    uint256 public withdrawalCount;\r\n    /// @notice Reentrancy guard flag.\r\n    bool private locked;\r\n\r\n    // La \"ficha\" que guarda los saldos de cada usuario\r\n    struct Balances {\r\n        uint256 eth;\r\n        uint256 usdc;\r\n    }\r\n    // --- Mappings ---\r\n    /// @notice Mapping from address to user balance.\r\n    // Un mapeo que asocia la direcciÃ³n de cada usuario con su \"ficha\" de saldos.\r\n    mapping (address => Balances) public balances;\r\n\r\n\r\n    // =================================================================================================================\r\n    //                                                       EVENTS\r\n    // =================================================================================================================\r\n\r\n    /// @notice Emitted when a user deposits ETH.\r\n    /// @param user The address of the user who deposited.\r\n    /// @param amount The amount deposited in wei.\r\n    event DepositEth(address indexed user, uint256 amount);\r\n    \r\n    /// @notice Emitted when a user deposits USDC.\r\n    /// @param user The address of the user who deposited.\r\n    /// @param amount The amount deposited in USDC.\r\n    event DepositUSDC(address indexed user, uint256 amount);\r\n\r\n    /// @notice Emitted when a user withdraws ETH.\r\n    /// @param user The address of the user who withdrew.\r\n    /// @param amount The amount withdrawn in wei.\r\n    event WithdrawalEth(address indexed user, uint256 amount);\r\n    \r\n    \r\n    event WithdrawalUSDC(address indexed user, uint256 amount);\r\n\r\n    // =================================================================================================================\r\n    //                                                      ERRORS\r\n    // =================================================================================================================\r\n\r\n    /// @notice Error thrown when the total deposits would exceed the bank's global cap.\r\n    error BankCapExceeded();\r\n    /// @notice Error thrown when a withdrawal amount exceeds the per-transaction limit.\r\n    error WithdrawalLimitExceeded();\r\n    /// @notice Error thrown when a user tries to withdraw more than their balance.\r\n    error InsufficientBalance();\r\n    /// @notice Error thrown when the provided amount is invalid (e.g., 0).\r\n    error InvalidAmount();\r\n    /// @notice Error thrown when a withdrawal transfer fails.\r\n    /// @param errorData The data returned by the failed call.\r\n    error WithdrawalFailed(bytes errorData);\r\n    /// @notice Error for reentrancy guard, thrown when a reentrant call is detected.\r\n    error ReentrantCall();\r\n\r\n    // =================================================================================================================\r\n    //                                                      MODIFIERS\r\n    // =================================================================================================================\r\n\r\n    /// @notice Prevents reentrancy attacks by locking the contract during a function's execution.\r\n    modifier nonReentrant() {\r\n        if (locked) revert ReentrantCall();\r\n        locked = true;\r\n        _;\r\n        locked = false;\r\n    }\r\n\r\n    /// @notice Checks if the provided amount is greater than zero.\r\n    /// @param _amount The amount to check.\r\n    modifier nonZeroAmount(uint256 _amount) {\r\n        if (_amount == 0) revert InvalidAmount();\r\n        _;\r\n    }\r\n\r\n    // =================================================================================================================\r\n    //                                                      CONSTRUCTOR\r\n    // =================================================================================================================\r\n\r\n    /**\r\n    * @notice Initializes the contract.\r\n    * @param _priceFeedAddress The Chainlink ETH/USD price feed address.\r\n    * @param _usdcTokenAddress The address of the USDC token contract.\r\n    * @param _bankCapUSD The total deposit cap for ETH, in whole USD (e.g., 10000 for $10,000).\r\n    */\r\n    constructor(\r\n        address _priceFeedAddress,\r\n        address _usdcTokenAddress,\r\n        uint256 _bankCapUSD\r\n    ) Ownable(msg.sender) {\r\n        priceFeed = AggregatorV3Interface(_priceFeedAddress);\r\n        USDC_TOKEN = IERC20(_usdcTokenAddress);\r\n        // Adjust bank cap to 8 decimals for the oracle\r\n        BANK_CAP_USD = _bankCapUSD * (10**8);\r\n    }\r\n\r\n    // =================================================================================================================\r\n    //                                                 EXTERNAL FUNCTIONS\r\n    // =================================================================================================================\r\n\r\n    /**\r\n     * @notice Deposits ETH into the user's balance.\r\n     * @dev Reverts if the amount is zero or if the deposit would exceed the global bank cap.\r\n     * @dev Follows the checks-effects-interactions pattern.\r\n     */\r\n    function depositEth() external payable nonZeroAmount(msg.value) {\r\n        // --- Checks ---//OJJOOOOO ARREGLAR LO DE BANK_CAP ACA SON ETH PERO NO PUEDO COMPARAR ETH CON USD\r\n        if (totalDeposited + msg.value > BANK_CAP_USD) revert BankCapExceeded();\r\n\r\n        // --- Effects ---\r\n        // Using unchecked as the check above prevents overflow, saving gas.\r\n        unchecked {\r\n            totalDeposited += msg.value;\r\n        }\r\n        balances[msg.sender].eth += msg.value;\r\n        depositCount++;\r\n\r\n        // --- Interactions (none in this function) ---\r\n\r\n        emit DepositEth(msg.sender, msg.value);\r\n    }\r\n\r\n    function depositUSDC(uint256 _amount) external nonZeroAmount(_amount) {\r\n        // --- Checks ---//OJJOOOOO ARREGLAR LO DE BANK_CAP ACA SON ETH PERO NO PUEDO COMPARAR ETH CON USD\r\n        if (totalDeposited + _amount > BANK_CAP_USD) revert BankCapExceeded();\r\n\r\n        // --- Effects ---\r\n        // Using unchecked as the check above prevents overflow, saving gas.\r\n        unchecked {\r\n            totalDeposited += _amount;\r\n        }\r\n        balances[msg.sender].usdc += _amount;\r\n        depositCount++;\r\n\r\n        // --- Interactions (none in this function) ---\r\n        emit DepositUSDC(msg.sender, _amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraws ETH from the user's balance.\r\n     * @param _amount The amount to withdraw in wei.\r\n     * @dev Reverts if the amount is zero, exceeds the withdrawal limit, or if the user has insufficient balance.\r\n     * @dev Follows the checks-effects-interactions pattern.\r\n     */\r\n    function withdrawalEth(uint256 _amount) external nonReentrant nonZeroAmount(_amount) {\r\n        uint256 userBalance = balances[msg.sender].eth; // Read state once to save gas\r\n\r\n        // --- Checks ---\r\n        if (_amount > WITHDRAWAL_LIMIT) revert WithdrawalLimitExceeded();\r\n        if (_amount > userBalance) revert InsufficientBalance();\r\n\r\n        // --- Effects ---\r\n        balances[msg.sender].eth = userBalance - _amount;\r\n        totalDeposited -= _amount;\r\n        withdrawalCount++;\r\n\r\n        // --- Interaction ---\r\n        _transferEth(payable(msg.sender), _amount);\r\n\r\n        emit WithdrawalEth(msg.sender, _amount);\r\n    }\r\n    \r\n    function withdrawalUSDC(uint256 _amount) external nonReentrant nonZeroAmount(_amount) {\r\n        uint256 userBalance = balances[msg.sender].eth; // Read state once to save gas\r\n\r\n        // --- Checks ---\r\n        if (_amount > WITHDRAWAL_LIMIT) revert WithdrawalLimitExceeded();\r\n        if (_amount > userBalance) revert InsufficientBalance();\r\n\r\n        // --- Effects ---\r\n        balances[msg.sender].usdc = userBalance - _amount;\r\n        totalDeposited -= _amount;\r\n        withdrawalCount++;\r\n\r\n        // --- Interaction ---\r\n        _transferUSDC(payable(msg.sender), _amount);\r\n\r\n        emit WithdrawalUSDC(msg.sender, _amount);\r\n    }\r\n    /**\r\n     * @notice Gets the balance of the message sender.\r\n     * @return The balance in wei.\r\n     */\r\n    function getBalanceEth() external view returns (uint256) {\r\n        return balances[msg.sender].eth;\r\n    }\r\n\r\n    // =================================================================================================================\r\n    //                                                 PRIVATE FUNCTIONS\r\n    // =================================================================================================================\r\n\r\n    /**\r\n     * @notice Internal function that performs a safe ETH transfer using the .call method.\r\n     * @param _to The recipient's address.\r\n     * @param _amount The amount to transfer.\r\n     */\r\n    function _transferEth(address payable _to, uint256 _amount) private {\r\n        (bool success, bytes memory errorData) = _to.call{value: _amount}(\"\");\r\n        if (!success) {\r\n            revert WithdrawalFailed(errorData);\r\n        }\r\n    }\r\n\r\n    function _transferUSDC(address payable _to, uint256 _amount) private {\r\n    }\r\n\r\n\r\n}"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212200ed391020d99bc55b2981cfb4ea4a2b8c349066ff95c5bdb81380b16a9782d1164736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200ed391020d99bc55b2981cfb4ea4a2b8c349066ff95c5bdb81380b16a9782d1164736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xD3 SWAP2 MUL 0xD SWAP10 0xBC SSTORE 0xB2 SWAP9 SHR 0xFB 0x4E LOG4 LOG2 0xB8 0xC3 BLOBHASH MOD PUSH16 0xF95C5BDB81380B16A9782D1164736F6C PUSH4 0x4300081B STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200ed391020d99bc55b2981cfb4ea4a2b8c349066ff95c5bdb81380b16a9782d1164736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xD3 SWAP2 MUL 0xD SWAP10 0xBC SSTORE 0xB2 SWAP9 SHR 0xFB 0x4E LOG4 LOG2 0xB8 0xC3 BLOBHASH MOD PUSH16 0xF95C5BDB81380B16A9782D1164736F6C PUSH4 0x4300081B STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ed391020d99bc55b2981cfb4ea4a2b8c349066ff95c5bdb81380b16a9782d1164736f6c634300081b0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/KipuBankV21.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/KipuBankV21.sol": {
				"KipuBank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_priceFeedAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdcTokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_bankCapUSD",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "BankCapExceeded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "errorData",
									"type": "bytes"
								}
							],
							"name": "WithdrawalFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WithdrawalLimitExceeded",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositEth",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositUSDC",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawalEth",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawalUSDC",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BANK_CAP_USD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC_TOKEN",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WITHDRAWAL_LIMIT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "usdc",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositEth",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositUSDC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalanceEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeed",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDeposited",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawalEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawalUSDC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"WithdrawalFailed(bytes)": [
								{
									"params": {
										"errorData": "The data returned by the failed call."
									}
								}
							]
						},
						"events": {
							"DepositEth(address,uint256)": {
								"params": {
									"amount": "The amount deposited in wei.",
									"user": "The address of the user who deposited."
								}
							},
							"DepositUSDC(address,uint256)": {
								"params": {
									"amount": "The amount deposited in USDC.",
									"user": "The address of the user who deposited."
								}
							},
							"WithdrawalEth(address,uint256)": {
								"params": {
									"amount": "The amount withdrawn in wei.",
									"user": "The address of the user who withdrew."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_bankCapUSD": "The total deposit cap for ETH, in whole USD (e.g., 10000 for $10,000).",
									"_priceFeedAddress": "The Chainlink ETH/USD price feed address.",
									"_usdcTokenAddress": "The address of the USDC token contract."
								}
							},
							"depositEth()": {
								"details": "Reverts if the amount is zero or if the deposit would exceed the global bank cap.Follows the checks-effects-interactions pattern."
							},
							"getBalanceEth()": {
								"returns": {
									"_0": "The balance in wei."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawalEth(uint256)": {
								"details": "Reverts if the amount is zero, exceeds the withdrawal limit, or if the user has insufficient balance.Follows the checks-effects-interactions pattern.",
								"params": {
									"_amount": "The amount to withdraw in wei."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/KipuBankV21.sol\":572:10504  contract KipuBank is Ownable {... */\n  mstore(0x40, 0xe0)\n    /* \"src/KipuBankV21.sol\":5622:5987  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/KipuBankV21.sol\":5751:5761  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"src/KipuBankV21.sol\":5808:5825  _priceFeedAddress */\n  dup3\n    /* \"src/KipuBankV21.sol\":5774:5783  priceFeed */\n  0x01\n  0x00\n    /* \"src/KipuBankV21.sol\":5774:5826  priceFeed = AggregatorV3Interface(_priceFeedAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/KipuBankV21.sol\":5857:5874  _usdcTokenAddress */\n  dup2\n    /* \"src/KipuBankV21.sol\":5837:5875  USDC_TOKEN = IERC20(_usdcTokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV21.sol\":5973:5978  10**8 */\n  0x05f5e100\n    /* \"src/KipuBankV21.sol\":5958:5969  _bankCapUSD */\n  dup2\n    /* \"src/KipuBankV21.sol\":5958:5979  _bankCapUSD * (10**8) */\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"src/KipuBankV21.sol\":5943:5979  BANK_CAP_USD = _bankCapUSD * (10**8) */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV21.sol\":5622:5987  constructor(... */\n  pop\n  pop\n  pop\n    /* \"src/KipuBankV21.sol\":572:10504  contract KipuBank is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_37\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_38:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_40\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_24:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_25:\n    /* \"#utility.yul\":1001:1025   */\n  tag_43\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_24\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_44:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_26:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_46\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  0x00\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_49\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1326:1445   */\ntag_48:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_50\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_23\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_51\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_23\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_52\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1992   */\ntag_27:\n    /* \"#utility.yul\":1961:1985   */\n  tag_54\n    /* \"#utility.yul\":1979:1984   */\n  dup2\n    /* \"#utility.yul\":1961:1985   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1956:1959   */\n  dup3\n    /* \"#utility.yul\":1949:1986   */\n  mstore\n    /* \"#utility.yul\":1874:1992   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1998:2220   */\ntag_9:\n    /* \"#utility.yul\":2091:2095   */\n  0x00\n    /* \"#utility.yul\":2129:2131   */\n  0x20\n    /* \"#utility.yul\":2118:2127   */\n  dup3\n    /* \"#utility.yul\":2114:2132   */\n  add\n    /* \"#utility.yul\":2106:2132   */\n  swap1\n  pop\n    /* \"#utility.yul\":2142:2213   */\n  tag_56\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2199:2208   */\n  dup4\n    /* \"#utility.yul\":2195:2212   */\n  add\n    /* \"#utility.yul\":2186:2192   */\n  dup5\n    /* \"#utility.yul\":2142:2213   */\n  tag_27\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1998:2220   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2226:2406   */\ntag_28:\n    /* \"#utility.yul\":2274:2351   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2271:2272   */\n  0x00\n    /* \"#utility.yul\":2264:2352   */\n  mstore\n    /* \"#utility.yul\":2371:2375   */\n  0x11\n    /* \"#utility.yul\":2368:2369   */\n  0x04\n    /* \"#utility.yul\":2361:2376   */\n  mstore\n    /* \"#utility.yul\":2395:2399   */\n  0x24\n    /* \"#utility.yul\":2392:2393   */\n  0x00\n    /* \"#utility.yul\":2385:2400   */\n  revert\n    /* \"#utility.yul\":2412:2822   */\ntag_14:\n    /* \"#utility.yul\":2452:2459   */\n  0x00\n    /* \"#utility.yul\":2475:2495   */\n  tag_59\n    /* \"#utility.yul\":2493:2494   */\n  dup3\n    /* \"#utility.yul\":2475:2495   */\n  tag_24\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2470:2495   */\n  swap2\n  pop\n    /* \"#utility.yul\":2509:2529   */\n  tag_60\n    /* \"#utility.yul\":2527:2528   */\n  dup4\n    /* \"#utility.yul\":2509:2529   */\n  tag_24\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2504:2529   */\n  swap3\n  pop\n    /* \"#utility.yul\":2564:2565   */\n  dup3\n    /* \"#utility.yul\":2561:2562   */\n  dup3\n    /* \"#utility.yul\":2557:2566   */\n  mul\n    /* \"#utility.yul\":2586:2616   */\n  tag_61\n    /* \"#utility.yul\":2604:2615   */\n  dup2\n    /* \"#utility.yul\":2586:2616   */\n  tag_24\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2575:2616   */\n  swap2\n  pop\n    /* \"#utility.yul\":2765:2766   */\n  dup3\n    /* \"#utility.yul\":2756:2763   */\n  dup3\n    /* \"#utility.yul\":2752:2767   */\n  div\n    /* \"#utility.yul\":2749:2750   */\n  dup5\n    /* \"#utility.yul\":2746:2768   */\n  eq\n    /* \"#utility.yul\":2726:2727   */\n  dup4\n    /* \"#utility.yul\":2719:2728   */\n  iszero\n    /* \"#utility.yul\":2699:2782   */\n  or\n    /* \"#utility.yul\":2676:2815   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2795:2813   */\n  tag_63\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2676:2815   */\ntag_62:\n    /* \"#utility.yul\":2460:2822   */\n  pop\n    /* \"#utility.yul\":2412:2822   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/KipuBankV21.sol\":572:10504  contract KipuBank is Ownable {... */\ntag_15:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xe13e22f4ea5bd10300dc6696bca2ca58b89132d8272e230e9104ae9f281888aa\")\n  0x00\n  assignImmutable(\"0xc5fad44e3727a4ce457d020cb0c6daf6b7d8f8d9551f2fa0111b8c9f86d3fe43\")\n  0x00\n  assignImmutable(\"0x49847a2314cecfe9e5127b41702adba4edb0260cff60a0a5f30c53ee5905efea\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/KipuBankV21.sol\":572:10504  contract KipuBank is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893b7e95\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf688bcfb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfa569274\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xff50abdc\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x893b7e95\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9b900405\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9caf34c4\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x71706cbe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x741bef1a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x82ee0d1d\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x1edc8f03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2dfdf0b5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x439370b1\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"src/KipuBankV21.sol\":8117:8760  function withdrawalEth(uint256 _amount) external nonReentrant nonZeroAmount(_amount) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"src/KipuBankV21.sol\":1993:2038  mapping (address => Balances) public balances */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV21.sol\":1489:1516  uint256 public depositCount */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV21.sol\":6545:7172  function depositEth() external payable nonZeroAmount(msg.value) {... */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"src/KipuBankV21.sol\":1592:1622  uint256 public withdrawalCount */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV21.sol\":1187:1225  AggregatorV3Interface public priceFeed */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV21.sol\":1032:1073  uint256 public immutable WITHDRAWAL_LIMIT */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      revert(0x00, 0x00)\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV21.sol\":1141:1178  uint256 public immutable BANK_CAP_USD */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV21.sol\":8772:9419  function withdrawalUSDC(uint256 _amount) external nonReentrant nonZeroAmount(_amount) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"src/KipuBankV21.sol\":9535:9642  function getBalanceEth() external view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      revert(0x00, 0x00)\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"src/KipuBankV21.sol\":7180:7805  function depositUSDC(uint256 _amount) external nonZeroAmount(_amount) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      revert(0x00, 0x00)\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"src/KipuBankV21.sol\":1232:1266  IERC20 public immutable USDC_TOKEN */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      revert(0x00, 0x00)\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV21.sol\":1387:1416  uint256 public totalDeposited */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV21.sol\":8117:8760  function withdrawalEth(uint256 _amount) external nonReentrant nonZeroAmount(_amount) {... */\n    tag_25:\n        /* \"src/KipuBankV21.sol\":4662:4668  locked */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/KipuBankV21.sol\":4658:4692  if (locked) revert ReentrantCall() */\n      iszero\n      tag_91\n      jumpi\n        /* \"src/KipuBankV21.sol\":4677:4692  ReentrantCall() */\n      mload(0x40)\n      0x37ed32e800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":4658:4692  if (locked) revert ReentrantCall() */\n    tag_91:\n        /* \"src/KipuBankV21.sol\":4712:4716  true */\n      0x01\n        /* \"src/KipuBankV21.sol\":4703:4709  locked */\n      0x05\n      0x00\n        /* \"src/KipuBankV21.sol\":4703:4716  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":8193:8200  _amount */\n      dup1\n        /* \"src/KipuBankV21.sol\":4949:4950  0 */\n      0x00\n        /* \"src/KipuBankV21.sol\":4938:4945  _amount */\n      dup2\n        /* \"src/KipuBankV21.sol\":4938:4950  _amount == 0 */\n      sub\n        /* \"src/KipuBankV21.sol\":4934:4974  if (_amount == 0) revert InvalidAmount() */\n      tag_93\n      jumpi\n        /* \"src/KipuBankV21.sol\":4959:4974  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":4934:4974  if (_amount == 0) revert InvalidAmount() */\n    tag_93:\n        /* \"src/KipuBankV21.sol\":8213:8232  uint256 userBalance */\n      0x00\n        /* \"src/KipuBankV21.sol\":8235:8243  balances */\n      0x06\n        /* \"src/KipuBankV21.sol\":8235:8255  balances[msg.sender] */\n      0x00\n        /* \"src/KipuBankV21.sol\":8244:8254  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":8235:8255  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV21.sol\":8235:8259  balances[msg.sender].eth */\n      0x00\n      add\n      sload\n        /* \"src/KipuBankV21.sol\":8213:8259  uint256 userBalance = balances[msg.sender].eth */\n      swap1\n      pop\n        /* \"src/KipuBankV21.sol\":8344:8360  WITHDRAWAL_LIMIT */\n      immutable(\"0x49847a2314cecfe9e5127b41702adba4edb0260cff60a0a5f30c53ee5905efea\")\n        /* \"src/KipuBankV21.sol\":8334:8341  _amount */\n      dup4\n        /* \"src/KipuBankV21.sol\":8334:8360  _amount > WITHDRAWAL_LIMIT */\n      gt\n        /* \"src/KipuBankV21.sol\":8330:8394  if (_amount > WITHDRAWAL_LIMIT) revert WithdrawalLimitExceeded() */\n      iszero\n      tag_95\n      jumpi\n        /* \"src/KipuBankV21.sol\":8369:8394  WithdrawalLimitExceeded() */\n      mload(0x40)\n      0x4e6a369600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":8330:8394  if (_amount > WITHDRAWAL_LIMIT) revert WithdrawalLimitExceeded() */\n    tag_95:\n        /* \"src/KipuBankV21.sol\":8419:8430  userBalance */\n      dup1\n        /* \"src/KipuBankV21.sol\":8409:8416  _amount */\n      dup4\n        /* \"src/KipuBankV21.sol\":8409:8430  _amount > userBalance */\n      gt\n        /* \"src/KipuBankV21.sol\":8405:8460  if (_amount > userBalance) revert InsufficientBalance() */\n      iszero\n      tag_96\n      jumpi\n        /* \"src/KipuBankV21.sol\":8439:8460  InsufficientBalance() */\n      mload(0x40)\n      0xf4d678b800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":8405:8460  if (_amount > userBalance) revert InsufficientBalance() */\n    tag_96:\n        /* \"src/KipuBankV21.sol\":8542:8549  _amount */\n      dup3\n        /* \"src/KipuBankV21.sol\":8528:8539  userBalance */\n      dup2\n        /* \"src/KipuBankV21.sol\":8528:8549  userBalance - _amount */\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"src/KipuBankV21.sol\":8501:8509  balances */\n      0x06\n        /* \"src/KipuBankV21.sol\":8501:8521  balances[msg.sender] */\n      0x00\n        /* \"src/KipuBankV21.sol\":8510:8520  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":8501:8521  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV21.sol\":8501:8525  balances[msg.sender].eth */\n      0x00\n      add\n        /* \"src/KipuBankV21.sol\":8501:8549  balances[msg.sender].eth = userBalance - _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":8578:8585  _amount */\n      dup3\n        /* \"src/KipuBankV21.sol\":8560:8574  totalDeposited */\n      0x02\n      0x00\n        /* \"src/KipuBankV21.sol\":8560:8585  totalDeposited -= _amount */\n      dup3\n      dup3\n      sload\n      tag_99\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_99:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":8596:8611  withdrawalCount */\n      0x04\n      0x00\n        /* \"src/KipuBankV21.sol\":8596:8613  withdrawalCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":8658:8700  _transferEth(payable(msg.sender), _amount) */\n      tag_102\n        /* \"src/KipuBankV21.sol\":8679:8689  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":8692:8699  _amount */\n      dup5\n        /* \"src/KipuBankV21.sol\":8658:8670  _transferEth */\n      tag_103\n        /* \"src/KipuBankV21.sol\":8658:8700  _transferEth(payable(msg.sender), _amount) */\n      jump\t// in\n    tag_102:\n        /* \"src/KipuBankV21.sol\":8732:8742  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":8718:8752  WithdrawalEth(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40953fd5db732b94d86820ccd999bd4ab6da08154a115387891e8957e585fa1d\n        /* \"src/KipuBankV21.sol\":8744:8751  _amount */\n      dup5\n        /* \"src/KipuBankV21.sol\":8718:8752  WithdrawalEth(msg.sender, _amount) */\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/KipuBankV21.sol\":8202:8760  {... */\n      pop\n        /* \"src/KipuBankV21.sol\":4727:4728  _ */\n      pop\n        /* \"src/KipuBankV21.sol\":4748:4753  false */\n      0x00\n        /* \"src/KipuBankV21.sol\":4739:4745  locked */\n      0x05\n      0x00\n        /* \"src/KipuBankV21.sol\":4739:4753  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":8117:8760  function withdrawalEth(uint256 _amount) external nonReentrant nonZeroAmount(_amount) {... */\n      pop\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":1993:2038  mapping (address => Balances) public balances */\n    tag_30:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":1489:1516  uint256 public depositCount */\n    tag_35:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":6545:7172  function depositEth() external payable nonZeroAmount(msg.value) {... */\n    tag_39:\n        /* \"src/KipuBankV21.sol\":6598:6607  msg.value */\n      callvalue\n        /* \"src/KipuBankV21.sol\":4949:4950  0 */\n      0x00\n        /* \"src/KipuBankV21.sol\":4938:4945  _amount */\n      dup2\n        /* \"src/KipuBankV21.sol\":4938:4950  _amount == 0 */\n      sub\n        /* \"src/KipuBankV21.sol\":4934:4974  if (_amount == 0) revert InvalidAmount() */\n      tag_106\n      jumpi\n        /* \"src/KipuBankV21.sol\":4959:4974  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":4934:4974  if (_amount == 0) revert InvalidAmount() */\n    tag_106:\n        /* \"src/KipuBankV21.sol\":6761:6773  BANK_CAP_USD */\n      immutable(\"0xc5fad44e3727a4ce457d020cb0c6daf6b7d8f8d9551f2fa0111b8c9f86d3fe43\")\n        /* \"src/KipuBankV21.sol\":6749:6758  msg.value */\n      callvalue\n        /* \"src/KipuBankV21.sol\":6732:6746  totalDeposited */\n      sload(0x02)\n        /* \"src/KipuBankV21.sol\":6732:6758  totalDeposited + msg.value */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"src/KipuBankV21.sol\":6732:6773  totalDeposited + msg.value > BANK_CAP_USD */\n      gt\n        /* \"src/KipuBankV21.sol\":6728:6799  if (totalDeposited + msg.value > BANK_CAP_USD) revert BankCapExceeded() */\n      iszero\n      tag_110\n      jumpi\n        /* \"src/KipuBankV21.sol\":6782:6799  BankCapExceeded() */\n      mload(0x40)\n      0x448f3ca800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":6728:6799  if (totalDeposited + msg.value > BANK_CAP_USD) revert BankCapExceeded() */\n    tag_110:\n        /* \"src/KipuBankV21.sol\":6961:6970  msg.value */\n      callvalue\n        /* \"src/KipuBankV21.sol\":6943:6957  totalDeposited */\n      0x02\n      0x00\n        /* \"src/KipuBankV21.sol\":6943:6970  totalDeposited += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":7020:7029  msg.value */\n      callvalue\n        /* \"src/KipuBankV21.sol\":6992:7000  balances */\n      0x06\n        /* \"src/KipuBankV21.sol\":6992:7012  balances[msg.sender] */\n      0x00\n        /* \"src/KipuBankV21.sol\":7001:7011  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":6992:7012  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV21.sol\":6992:7016  balances[msg.sender].eth */\n      0x00\n      add\n      0x00\n        /* \"src/KipuBankV21.sol\":6992:7029  balances[msg.sender].eth += msg.value */\n      dup3\n      dup3\n      sload\n      tag_111\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_111:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":7040:7052  depositCount */\n      0x03\n      0x00\n        /* \"src/KipuBankV21.sol\":7040:7054  depositCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_112\n      swap1\n      tag_101\n      jump\t// in\n    tag_112:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":7142:7152  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":7131:7164  DepositEth(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7034bb05cfe54b0d147fc0574ed166101e7f0313eb404e113974fbe2a998ca83\n        /* \"src/KipuBankV21.sol\":7154:7163  msg.value */\n      callvalue\n        /* \"src/KipuBankV21.sol\":7131:7164  DepositEth(msg.sender, msg.value) */\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/KipuBankV21.sol\":6545:7172  function depositEth() external payable nonZeroAmount(msg.value) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":1592:1622  uint256 public withdrawalCount */\n    tag_45:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":1187:1225  AggregatorV3Interface public priceFeed */\n    tag_49:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":1032:1073  uint256 public immutable WITHDRAWAL_LIMIT */\n    tag_54:\n      immutable(\"0x49847a2314cecfe9e5127b41702adba4edb0260cff60a0a5f30c53ee5905efea\")\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":1141:1178  uint256 public immutable BANK_CAP_USD */\n    tag_58:\n      immutable(\"0xc5fad44e3727a4ce457d020cb0c6daf6b7d8f8d9551f2fa0111b8c9f86d3fe43\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":8772:9419  function withdrawalUSDC(uint256 _amount) external nonReentrant nonZeroAmount(_amount) {... */\n    tag_68:\n        /* \"src/KipuBankV21.sol\":4662:4668  locked */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/KipuBankV21.sol\":4658:4692  if (locked) revert ReentrantCall() */\n      iszero\n      tag_122\n      jumpi\n        /* \"src/KipuBankV21.sol\":4677:4692  ReentrantCall() */\n      mload(0x40)\n      0x37ed32e800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":4658:4692  if (locked) revert ReentrantCall() */\n    tag_122:\n        /* \"src/KipuBankV21.sol\":4712:4716  true */\n      0x01\n        /* \"src/KipuBankV21.sol\":4703:4709  locked */\n      0x05\n      0x00\n        /* \"src/KipuBankV21.sol\":4703:4716  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":8849:8856  _amount */\n      dup1\n        /* \"src/KipuBankV21.sol\":4949:4950  0 */\n      0x00\n        /* \"src/KipuBankV21.sol\":4938:4945  _amount */\n      dup2\n        /* \"src/KipuBankV21.sol\":4938:4950  _amount == 0 */\n      sub\n        /* \"src/KipuBankV21.sol\":4934:4974  if (_amount == 0) revert InvalidAmount() */\n      tag_124\n      jumpi\n        /* \"src/KipuBankV21.sol\":4959:4974  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":4934:4974  if (_amount == 0) revert InvalidAmount() */\n    tag_124:\n        /* \"src/KipuBankV21.sol\":8869:8888  uint256 userBalance */\n      0x00\n        /* \"src/KipuBankV21.sol\":8891:8899  balances */\n      0x06\n        /* \"src/KipuBankV21.sol\":8891:8911  balances[msg.sender] */\n      0x00\n        /* \"src/KipuBankV21.sol\":8900:8910  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":8891:8911  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV21.sol\":8891:8915  balances[msg.sender].eth */\n      0x00\n      add\n      sload\n        /* \"src/KipuBankV21.sol\":8869:8915  uint256 userBalance = balances[msg.sender].eth */\n      swap1\n      pop\n        /* \"src/KipuBankV21.sol\":9000:9016  WITHDRAWAL_LIMIT */\n      immutable(\"0x49847a2314cecfe9e5127b41702adba4edb0260cff60a0a5f30c53ee5905efea\")\n        /* \"src/KipuBankV21.sol\":8990:8997  _amount */\n      dup4\n        /* \"src/KipuBankV21.sol\":8990:9016  _amount > WITHDRAWAL_LIMIT */\n      gt\n        /* \"src/KipuBankV21.sol\":8986:9050  if (_amount > WITHDRAWAL_LIMIT) revert WithdrawalLimitExceeded() */\n      iszero\n      tag_126\n      jumpi\n        /* \"src/KipuBankV21.sol\":9025:9050  WithdrawalLimitExceeded() */\n      mload(0x40)\n      0x4e6a369600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":8986:9050  if (_amount > WITHDRAWAL_LIMIT) revert WithdrawalLimitExceeded() */\n    tag_126:\n        /* \"src/KipuBankV21.sol\":9075:9086  userBalance */\n      dup1\n        /* \"src/KipuBankV21.sol\":9065:9072  _amount */\n      dup4\n        /* \"src/KipuBankV21.sol\":9065:9086  _amount > userBalance */\n      gt\n        /* \"src/KipuBankV21.sol\":9061:9116  if (_amount > userBalance) revert InsufficientBalance() */\n      iszero\n      tag_127\n      jumpi\n        /* \"src/KipuBankV21.sol\":9095:9116  InsufficientBalance() */\n      mload(0x40)\n      0xf4d678b800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":9061:9116  if (_amount > userBalance) revert InsufficientBalance() */\n    tag_127:\n        /* \"src/KipuBankV21.sol\":9199:9206  _amount */\n      dup3\n        /* \"src/KipuBankV21.sol\":9185:9196  userBalance */\n      dup2\n        /* \"src/KipuBankV21.sol\":9185:9206  userBalance - _amount */\n      tag_128\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_128:\n        /* \"src/KipuBankV21.sol\":9157:9165  balances */\n      0x06\n        /* \"src/KipuBankV21.sol\":9157:9177  balances[msg.sender] */\n      0x00\n        /* \"src/KipuBankV21.sol\":9166:9176  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":9157:9177  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV21.sol\":9157:9182  balances[msg.sender].usdc */\n      0x01\n      add\n        /* \"src/KipuBankV21.sol\":9157:9206  balances[msg.sender].usdc = userBalance - _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":9235:9242  _amount */\n      dup3\n        /* \"src/KipuBankV21.sol\":9217:9231  totalDeposited */\n      0x02\n      0x00\n        /* \"src/KipuBankV21.sol\":9217:9242  totalDeposited -= _amount */\n      dup3\n      dup3\n      sload\n      tag_129\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_129:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":9253:9268  withdrawalCount */\n      0x04\n      0x00\n        /* \"src/KipuBankV21.sol\":9253:9270  withdrawalCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_130\n      swap1\n      tag_101\n      jump\t// in\n    tag_130:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":9315:9358  _transferUSDC(payable(msg.sender), _amount) */\n      tag_131\n        /* \"src/KipuBankV21.sol\":9337:9347  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":9350:9357  _amount */\n      dup5\n        /* \"src/KipuBankV21.sol\":9315:9328  _transferUSDC */\n      tag_132\n        /* \"src/KipuBankV21.sol\":9315:9358  _transferUSDC(payable(msg.sender), _amount) */\n      jump\t// in\n    tag_131:\n        /* \"src/KipuBankV21.sol\":9391:9401  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":9376:9411  WithdrawalUSDC(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x736dfcc39d27adad7de37e9a6f1e8252e0953ebf8f582d535672d33f8986738b\n        /* \"src/KipuBankV21.sol\":9403:9410  _amount */\n      dup5\n        /* \"src/KipuBankV21.sol\":9376:9411  WithdrawalUSDC(msg.sender, _amount) */\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/KipuBankV21.sol\":8858:9419  {... */\n      pop\n        /* \"src/KipuBankV21.sol\":4727:4728  _ */\n      pop\n        /* \"src/KipuBankV21.sol\":4748:4753  false */\n      0x00\n        /* \"src/KipuBankV21.sol\":4739:4745  locked */\n      0x05\n      0x00\n        /* \"src/KipuBankV21.sol\":4739:4753  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":8772:9419  function withdrawalUSDC(uint256 _amount) external nonReentrant nonZeroAmount(_amount) {... */\n      pop\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":9535:9642  function getBalanceEth() external view returns (uint256) {... */\n    tag_71:\n        /* \"src/KipuBankV21.sol\":9583:9590  uint256 */\n      0x00\n        /* \"src/KipuBankV21.sol\":9610:9618  balances */\n      0x06\n        /* \"src/KipuBankV21.sol\":9610:9630  balances[msg.sender] */\n      0x00\n        /* \"src/KipuBankV21.sol\":9619:9629  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":9610:9630  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV21.sol\":9610:9634  balances[msg.sender].eth */\n      0x00\n      add\n      sload\n        /* \"src/KipuBankV21.sol\":9603:9634  return balances[msg.sender].eth */\n      swap1\n      pop\n        /* \"src/KipuBankV21.sol\":9535:9642  function getBalanceEth() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":7180:7805  function depositUSDC(uint256 _amount) external nonZeroAmount(_amount) {... */\n    tag_80:\n        /* \"src/KipuBankV21.sol\":7241:7248  _amount */\n      dup1\n        /* \"src/KipuBankV21.sol\":4949:4950  0 */\n      0x00\n        /* \"src/KipuBankV21.sol\":4938:4945  _amount */\n      dup2\n        /* \"src/KipuBankV21.sol\":4938:4950  _amount == 0 */\n      sub\n        /* \"src/KipuBankV21.sol\":4934:4974  if (_amount == 0) revert InvalidAmount() */\n      tag_142\n      jumpi\n        /* \"src/KipuBankV21.sol\":4959:4974  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":4934:4974  if (_amount == 0) revert InvalidAmount() */\n    tag_142:\n        /* \"src/KipuBankV21.sol\":7400:7412  BANK_CAP_USD */\n      immutable(\"0xc5fad44e3727a4ce457d020cb0c6daf6b7d8f8d9551f2fa0111b8c9f86d3fe43\")\n        /* \"src/KipuBankV21.sol\":7390:7397  _amount */\n      dup3\n        /* \"src/KipuBankV21.sol\":7373:7387  totalDeposited */\n      sload(0x02)\n        /* \"src/KipuBankV21.sol\":7373:7397  totalDeposited + _amount */\n      tag_144\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_144:\n        /* \"src/KipuBankV21.sol\":7373:7412  totalDeposited + _amount > BANK_CAP_USD */\n      gt\n        /* \"src/KipuBankV21.sol\":7369:7438  if (totalDeposited + _amount > BANK_CAP_USD) revert BankCapExceeded() */\n      iszero\n      tag_145\n      jumpi\n        /* \"src/KipuBankV21.sol\":7421:7438  BankCapExceeded() */\n      mload(0x40)\n      0x448f3ca800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":7369:7438  if (totalDeposited + _amount > BANK_CAP_USD) revert BankCapExceeded() */\n    tag_145:\n        /* \"src/KipuBankV21.sol\":7600:7607  _amount */\n      dup2\n        /* \"src/KipuBankV21.sol\":7582:7596  totalDeposited */\n      0x02\n      0x00\n        /* \"src/KipuBankV21.sol\":7582:7607  totalDeposited += _amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":7658:7665  _amount */\n      dup2\n        /* \"src/KipuBankV21.sol\":7629:7637  balances */\n      0x06\n        /* \"src/KipuBankV21.sol\":7629:7649  balances[msg.sender] */\n      0x00\n        /* \"src/KipuBankV21.sol\":7638:7648  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":7629:7649  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV21.sol\":7629:7654  balances[msg.sender].usdc */\n      0x01\n      add\n      0x00\n        /* \"src/KipuBankV21.sol\":7629:7665  balances[msg.sender].usdc += _amount */\n      dup3\n      dup3\n      sload\n      tag_146\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_146:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":7676:7688  depositCount */\n      0x03\n      0x00\n        /* \"src/KipuBankV21.sol\":7676:7690  depositCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_147\n      swap1\n      tag_101\n      jump\t// in\n    tag_147:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV21.sol\":7777:7787  msg.sender */\n      caller\n        /* \"src/KipuBankV21.sol\":7765:7797  DepositUSDC(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe7440f6772025dec9be06ba934e6ee5289b73533ee2136ba668f6cb6ea3f56a8\n        /* \"src/KipuBankV21.sol\":7789:7796  _amount */\n      dup4\n        /* \"src/KipuBankV21.sol\":7765:7797  DepositUSDC(msg.sender, _amount) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/KipuBankV21.sol\":7180:7805  function depositUSDC(uint256 _amount) external nonZeroAmount(_amount) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":1232:1266  IERC20 public immutable USDC_TOKEN */\n    tag_83:\n      immutable(\"0xe13e22f4ea5bd10300dc6696bca2ca58b89132d8272e230e9104ae9f281888aa\")\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":1387:1416  uint256 public totalDeposited */\n    tag_88:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":10171:10412  function _transferEth(address payable _to, uint256 _amount) private {... */\n    tag_103:\n        /* \"src/KipuBankV21.sol\":10251:10263  bool success */\n      0x00\n        /* \"src/KipuBankV21.sol\":10265:10287  bytes memory errorData */\n      0x00\n        /* \"src/KipuBankV21.sol\":10291:10294  _to */\n      dup4\n        /* \"src/KipuBankV21.sol\":10291:10299  _to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV21.sol\":10307:10314  _amount */\n      dup4\n        /* \"src/KipuBankV21.sol\":10291:10319  _to.call{value: _amount}(\"\") */\n      mload(0x40)\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_154\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_153)\n    tag_154:\n      0x60\n      swap2\n      pop\n    tag_153:\n      pop\n        /* \"src/KipuBankV21.sol\":10250:10319  (bool success, bytes memory errorData) = _to.call{value: _amount}(\"\") */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/KipuBankV21.sol\":10335:10342  success */\n      dup2\n        /* \"src/KipuBankV21.sol\":10330:10405  if (!success) {... */\n      tag_155\n      jumpi\n        /* \"src/KipuBankV21.sol\":10383:10392  errorData */\n      dup1\n        /* \"src/KipuBankV21.sol\":10366:10393  WithdrawalFailed(errorData) */\n      mload(0x40)\n      0x49ba945b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV21.sol\":10330:10405  if (!success) {... */\n    tag_155:\n        /* \"src/KipuBankV21.sol\":10239:10412  {... */\n      pop\n      pop\n        /* \"src/KipuBankV21.sol\":10171:10412  function _transferEth(address payable _to, uint256 _amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"src/KipuBankV21.sol\":10420:10497  function _transferUSDC(address payable _to, uint256 _amount) private {... */\n    tag_132:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_169:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_171:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_172:\n        /* \"#utility.yul\":490:514   */\n      tag_202\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_171\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_203:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_173:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_205\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_172\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_24:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_208\n      tag_169\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":766:885   */\n    tag_207:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_209\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_173\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_174:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_175:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_212\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_174\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_176:\n        /* \"#utility.yul\":1332:1356   */\n      tag_214\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_175\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      0x00\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_215:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_177:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_217\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_176\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1861   */\n    tag_29:\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1628:1637   */\n      dup3\n        /* \"#utility.yul\":1619:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1638   */\n      sub\n        /* \"#utility.yul\":1611:1643   */\n      slt\n        /* \"#utility.yul\":1608:1727   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":1646:1725   */\n      tag_220\n      tag_169\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1608:1727   */\n    tag_219:\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1791:1844   */\n      tag_221\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_177\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":1781:1844   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:1854   */\n      pop\n        /* \"#utility.yul\":1532:1861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:1985   */\n    tag_178:\n        /* \"#utility.yul\":1954:1978   */\n      tag_223\n        /* \"#utility.yul\":1972:1977   */\n      dup2\n        /* \"#utility.yul\":1954:1978   */\n      tag_171\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1949:1952   */\n      dup3\n        /* \"#utility.yul\":1942:1979   */\n      mstore\n        /* \"#utility.yul\":1867:1985   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1991:2323   */\n    tag_32:\n        /* \"#utility.yul\":2112:2116   */\n      0x00\n        /* \"#utility.yul\":2150:2152   */\n      0x40\n        /* \"#utility.yul\":2139:2148   */\n      dup3\n        /* \"#utility.yul\":2135:2153   */\n      add\n        /* \"#utility.yul\":2127:2153   */\n      swap1\n      pop\n        /* \"#utility.yul\":2163:2234   */\n      tag_225\n        /* \"#utility.yul\":2231:2232   */\n      0x00\n        /* \"#utility.yul\":2220:2229   */\n      dup4\n        /* \"#utility.yul\":2216:2233   */\n      add\n        /* \"#utility.yul\":2207:2213   */\n      dup6\n        /* \"#utility.yul\":2163:2234   */\n      tag_178\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2244:2316   */\n      tag_226\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2301:2310   */\n      dup4\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"#utility.yul\":2288:2294   */\n      dup5\n        /* \"#utility.yul\":2244:2316   */\n      tag_178\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1991:2323   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2551   */\n    tag_37:\n        /* \"#utility.yul\":2422:2426   */\n      0x00\n        /* \"#utility.yul\":2460:2462   */\n      0x20\n        /* \"#utility.yul\":2449:2458   */\n      dup3\n        /* \"#utility.yul\":2445:2463   */\n      add\n        /* \"#utility.yul\":2437:2463   */\n      swap1\n      pop\n        /* \"#utility.yul\":2473:2544   */\n      tag_228\n        /* \"#utility.yul\":2541:2542   */\n      0x00\n        /* \"#utility.yul\":2530:2539   */\n      dup4\n        /* \"#utility.yul\":2526:2543   */\n      add\n        /* \"#utility.yul\":2517:2523   */\n      dup5\n        /* \"#utility.yul\":2473:2544   */\n      tag_178\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2329:2551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2557:2617   */\n    tag_179:\n        /* \"#utility.yul\":2585:2588   */\n      0x00\n        /* \"#utility.yul\":2606:2611   */\n      dup2\n        /* \"#utility.yul\":2599:2611   */\n      swap1\n      pop\n        /* \"#utility.yul\":2557:2617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2623:2765   */\n    tag_180:\n        /* \"#utility.yul\":2673:2682   */\n      0x00\n        /* \"#utility.yul\":2706:2759   */\n      tag_231\n        /* \"#utility.yul\":2724:2758   */\n      tag_232\n        /* \"#utility.yul\":2733:2757   */\n      tag_233\n        /* \"#utility.yul\":2751:2756   */\n      dup5\n        /* \"#utility.yul\":2733:2757   */\n      tag_174\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2724:2758   */\n      tag_179\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2706:2759   */\n      tag_174\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2693:2759   */\n      swap1\n      pop\n        /* \"#utility.yul\":2623:2765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2771:2897   */\n    tag_181:\n        /* \"#utility.yul\":2821:2830   */\n      0x00\n        /* \"#utility.yul\":2854:2891   */\n      tag_235\n        /* \"#utility.yul\":2885:2890   */\n      dup3\n        /* \"#utility.yul\":2854:2891   */\n      tag_180\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2841:2891   */\n      swap1\n      pop\n        /* \"#utility.yul\":2771:2897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2903:3057   */\n    tag_182:\n        /* \"#utility.yul\":2981:2990   */\n      0x00\n        /* \"#utility.yul\":3014:3051   */\n      tag_237\n        /* \"#utility.yul\":3045:3050   */\n      dup3\n        /* \"#utility.yul\":3014:3051   */\n      tag_181\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3001:3051   */\n      swap1\n      pop\n        /* \"#utility.yul\":2903:3057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3063:3250   */\n    tag_183:\n        /* \"#utility.yul\":3178:3243   */\n      tag_239\n        /* \"#utility.yul\":3237:3242   */\n      dup2\n        /* \"#utility.yul\":3178:3243   */\n      tag_182\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3173:3176   */\n      dup3\n        /* \"#utility.yul\":3166:3244   */\n      mstore\n        /* \"#utility.yul\":3063:3250   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3256:3534   */\n    tag_51:\n        /* \"#utility.yul\":3377:3381   */\n      0x00\n        /* \"#utility.yul\":3415:3417   */\n      0x20\n        /* \"#utility.yul\":3404:3413   */\n      dup3\n        /* \"#utility.yul\":3400:3418   */\n      add\n        /* \"#utility.yul\":3392:3418   */\n      swap1\n      pop\n        /* \"#utility.yul\":3428:3527   */\n      tag_241\n        /* \"#utility.yul\":3524:3525   */\n      0x00\n        /* \"#utility.yul\":3513:3522   */\n      dup4\n        /* \"#utility.yul\":3509:3526   */\n      add\n        /* \"#utility.yul\":3500:3506   */\n      dup5\n        /* \"#utility.yul\":3428:3527   */\n      tag_183\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3256:3534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3540:3658   */\n    tag_184:\n        /* \"#utility.yul\":3627:3651   */\n      tag_243\n        /* \"#utility.yul\":3645:3650   */\n      dup2\n        /* \"#utility.yul\":3627:3651   */\n      tag_175\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3622:3625   */\n      dup3\n        /* \"#utility.yul\":3615:3652   */\n      mstore\n        /* \"#utility.yul\":3540:3658   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3664:3886   */\n    tag_64:\n        /* \"#utility.yul\":3757:3761   */\n      0x00\n        /* \"#utility.yul\":3795:3797   */\n      0x20\n        /* \"#utility.yul\":3784:3793   */\n      dup3\n        /* \"#utility.yul\":3780:3798   */\n      add\n        /* \"#utility.yul\":3772:3798   */\n      swap1\n      pop\n        /* \"#utility.yul\":3808:3879   */\n      tag_245\n        /* \"#utility.yul\":3876:3877   */\n      0x00\n        /* \"#utility.yul\":3865:3874   */\n      dup4\n        /* \"#utility.yul\":3861:3878   */\n      add\n        /* \"#utility.yul\":3852:3858   */\n      dup5\n        /* \"#utility.yul\":3808:3879   */\n      tag_184\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3664:3886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3892:4032   */\n    tag_185:\n        /* \"#utility.yul\":3956:3965   */\n      0x00\n        /* \"#utility.yul\":3989:4026   */\n      tag_247\n        /* \"#utility.yul\":4020:4025   */\n      dup3\n        /* \"#utility.yul\":3989:4026   */\n      tag_181\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3976:4026   */\n      swap1\n      pop\n        /* \"#utility.yul\":3892:4032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4038:4197   */\n    tag_186:\n        /* \"#utility.yul\":4139:4190   */\n      tag_249\n        /* \"#utility.yul\":4184:4189   */\n      dup2\n        /* \"#utility.yul\":4139:4190   */\n      tag_185\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4134:4137   */\n      dup3\n        /* \"#utility.yul\":4127:4191   */\n      mstore\n        /* \"#utility.yul\":4038:4197   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4453   */\n    tag_85:\n        /* \"#utility.yul\":4310:4314   */\n      0x00\n        /* \"#utility.yul\":4348:4350   */\n      0x20\n        /* \"#utility.yul\":4337:4346   */\n      dup3\n        /* \"#utility.yul\":4333:4351   */\n      add\n        /* \"#utility.yul\":4325:4351   */\n      swap1\n      pop\n        /* \"#utility.yul\":4361:4446   */\n      tag_251\n        /* \"#utility.yul\":4443:4444   */\n      0x00\n        /* \"#utility.yul\":4432:4441   */\n      dup4\n        /* \"#utility.yul\":4428:4445   */\n      add\n        /* \"#utility.yul\":4419:4425   */\n      dup5\n        /* \"#utility.yul\":4361:4446   */\n      tag_186\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4203:4453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4459:4639   */\n    tag_187:\n        /* \"#utility.yul\":4507:4584   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4504:4505   */\n      0x00\n        /* \"#utility.yul\":4497:4585   */\n      mstore\n        /* \"#utility.yul\":4604:4608   */\n      0x11\n        /* \"#utility.yul\":4601:4602   */\n      0x04\n        /* \"#utility.yul\":4594:4609   */\n      mstore\n        /* \"#utility.yul\":4628:4632   */\n      0x24\n        /* \"#utility.yul\":4625:4626   */\n      0x00\n        /* \"#utility.yul\":4618:4633   */\n      revert\n        /* \"#utility.yul\":4645:4839   */\n    tag_98:\n        /* \"#utility.yul\":4685:4689   */\n      0x00\n        /* \"#utility.yul\":4705:4725   */\n      tag_254\n        /* \"#utility.yul\":4723:4724   */\n      dup3\n        /* \"#utility.yul\":4705:4725   */\n      tag_171\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4700:4725   */\n      swap2\n      pop\n        /* \"#utility.yul\":4739:4759   */\n      tag_255\n        /* \"#utility.yul\":4757:4758   */\n      dup4\n        /* \"#utility.yul\":4739:4759   */\n      tag_171\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4734:4759   */\n      swap3\n      pop\n        /* \"#utility.yul\":4783:4784   */\n      dup3\n        /* \"#utility.yul\":4780:4781   */\n      dup3\n        /* \"#utility.yul\":4776:4785   */\n      sub\n        /* \"#utility.yul\":4768:4785   */\n      swap1\n      pop\n        /* \"#utility.yul\":4807:4808   */\n      dup2\n        /* \"#utility.yul\":4801:4805   */\n      dup2\n        /* \"#utility.yul\":4798:4809   */\n      gt\n        /* \"#utility.yul\":4795:4832   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":4812:4830   */\n      tag_257\n      tag_187\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4795:4832   */\n    tag_256:\n        /* \"#utility.yul\":4645:4839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4845:5078   */\n    tag_101:\n        /* \"#utility.yul\":4884:4887   */\n      0x00\n        /* \"#utility.yul\":4907:4931   */\n      tag_259\n        /* \"#utility.yul\":4925:4930   */\n      dup3\n        /* \"#utility.yul\":4907:4931   */\n      tag_171\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4898:4931   */\n      swap2\n      pop\n        /* \"#utility.yul\":4953:5019   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4946:4951   */\n      dup3\n        /* \"#utility.yul\":4943:5020   */\n      sub\n        /* \"#utility.yul\":4940:5043   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":5023:5041   */\n      tag_261\n      tag_187\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4940:5043   */\n    tag_260:\n        /* \"#utility.yul\":5070:5071   */\n      0x01\n        /* \"#utility.yul\":5063:5068   */\n      dup3\n        /* \"#utility.yul\":5059:5072   */\n      add\n        /* \"#utility.yul\":5052:5072   */\n      swap1\n      pop\n        /* \"#utility.yul\":4845:5078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5084:5275   */\n    tag_109:\n        /* \"#utility.yul\":5124:5127   */\n      0x00\n        /* \"#utility.yul\":5143:5163   */\n      tag_263\n        /* \"#utility.yul\":5161:5162   */\n      dup3\n        /* \"#utility.yul\":5143:5163   */\n      tag_171\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5138:5163   */\n      swap2\n      pop\n        /* \"#utility.yul\":5177:5197   */\n      tag_264\n        /* \"#utility.yul\":5195:5196   */\n      dup4\n        /* \"#utility.yul\":5177:5197   */\n      tag_171\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5172:5197   */\n      swap3\n      pop\n        /* \"#utility.yul\":5220:5221   */\n      dup3\n        /* \"#utility.yul\":5217:5218   */\n      dup3\n        /* \"#utility.yul\":5213:5222   */\n      add\n        /* \"#utility.yul\":5206:5222   */\n      swap1\n      pop\n        /* \"#utility.yul\":5241:5244   */\n      dup1\n        /* \"#utility.yul\":5238:5239   */\n      dup3\n        /* \"#utility.yul\":5235:5245   */\n      gt\n        /* \"#utility.yul\":5232:5268   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":5248:5266   */\n      tag_266\n      tag_187\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5232:5268   */\n    tag_265:\n        /* \"#utility.yul\":5084:5275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5281:5428   */\n    tag_188:\n        /* \"#utility.yul\":5382:5393   */\n      0x00\n        /* \"#utility.yul\":5419:5422   */\n      dup2\n        /* \"#utility.yul\":5404:5422   */\n      swap1\n      pop\n        /* \"#utility.yul\":5281:5428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5434:5548   */\n    tag_189:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5554:5952   */\n    tag_190:\n        /* \"#utility.yul\":5713:5716   */\n      0x00\n        /* \"#utility.yul\":5734:5817   */\n      tag_270\n        /* \"#utility.yul\":5815:5816   */\n      0x00\n        /* \"#utility.yul\":5810:5813   */\n      dup4\n        /* \"#utility.yul\":5734:5817   */\n      tag_188\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5727:5817   */\n      swap2\n      pop\n        /* \"#utility.yul\":5826:5919   */\n      tag_271\n        /* \"#utility.yul\":5915:5918   */\n      dup3\n        /* \"#utility.yul\":5826:5919   */\n      tag_189\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5944:5945   */\n      0x00\n        /* \"#utility.yul\":5939:5942   */\n      dup3\n        /* \"#utility.yul\":5935:5946   */\n      add\n        /* \"#utility.yul\":5928:5946   */\n      swap1\n      pop\n        /* \"#utility.yul\":5554:5952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5958:6337   */\n    tag_151:\n        /* \"#utility.yul\":6142:6145   */\n      0x00\n        /* \"#utility.yul\":6164:6311   */\n      tag_273\n        /* \"#utility.yul\":6307:6310   */\n      dup3\n        /* \"#utility.yul\":6164:6311   */\n      tag_190\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6157:6311   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6331   */\n      dup2\n        /* \"#utility.yul\":6321:6331   */\n      swap1\n      pop\n        /* \"#utility.yul\":5958:6337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6343:6441   */\n    tag_191:\n        /* \"#utility.yul\":6394:6400   */\n      0x00\n        /* \"#utility.yul\":6428:6433   */\n      dup2\n        /* \"#utility.yul\":6422:6434   */\n      mload\n        /* \"#utility.yul\":6412:6434   */\n      swap1\n      pop\n        /* \"#utility.yul\":6343:6441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6447:6615   */\n    tag_192:\n        /* \"#utility.yul\":6530:6541   */\n      0x00\n        /* \"#utility.yul\":6564:6570   */\n      dup3\n        /* \"#utility.yul\":6559:6562   */\n      dup3\n        /* \"#utility.yul\":6552:6571   */\n      mstore\n        /* \"#utility.yul\":6604:6608   */\n      0x20\n        /* \"#utility.yul\":6599:6602   */\n      dup3\n        /* \"#utility.yul\":6595:6609   */\n      add\n        /* \"#utility.yul\":6580:6609   */\n      swap1\n      pop\n        /* \"#utility.yul\":6447:6615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6621:6760   */\n    tag_193:\n        /* \"#utility.yul\":6710:6716   */\n      dup3\n        /* \"#utility.yul\":6705:6708   */\n      dup2\n        /* \"#utility.yul\":6700:6703   */\n      dup4\n        /* \"#utility.yul\":6694:6717   */\n      mcopy\n        /* \"#utility.yul\":6751:6752   */\n      0x00\n        /* \"#utility.yul\":6742:6748   */\n      dup4\n        /* \"#utility.yul\":6737:6740   */\n      dup4\n        /* \"#utility.yul\":6733:6749   */\n      add\n        /* \"#utility.yul\":6726:6753   */\n      mstore\n        /* \"#utility.yul\":6621:6760   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6766:6868   */\n    tag_194:\n        /* \"#utility.yul\":6807:6813   */\n      0x00\n        /* \"#utility.yul\":6858:6860   */\n      0x1f\n        /* \"#utility.yul\":6854:6861   */\n      not\n        /* \"#utility.yul\":6849:6851   */\n      0x1f\n        /* \"#utility.yul\":6842:6847   */\n      dup4\n        /* \"#utility.yul\":6838:6852   */\n      add\n        /* \"#utility.yul\":6834:6862   */\n      and\n        /* \"#utility.yul\":6824:6862   */\n      swap1\n      pop\n        /* \"#utility.yul\":6766:6868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6874:7247   */\n    tag_195:\n        /* \"#utility.yul\":6960:6963   */\n      0x00\n        /* \"#utility.yul\":6988:7026   */\n      tag_279\n        /* \"#utility.yul\":7020:7025   */\n      dup3\n        /* \"#utility.yul\":6988:7026   */\n      tag_191\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7042:7112   */\n      tag_280\n        /* \"#utility.yul\":7105:7111   */\n      dup2\n        /* \"#utility.yul\":7100:7103   */\n      dup6\n        /* \"#utility.yul\":7042:7112   */\n      tag_192\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":7035:7112   */\n      swap4\n      pop\n        /* \"#utility.yul\":7121:7186   */\n      tag_281\n        /* \"#utility.yul\":7179:7185   */\n      dup2\n        /* \"#utility.yul\":7174:7177   */\n      dup6\n        /* \"#utility.yul\":7167:7171   */\n      0x20\n        /* \"#utility.yul\":7160:7165   */\n      dup7\n        /* \"#utility.yul\":7156:7172   */\n      add\n        /* \"#utility.yul\":7121:7186   */\n      tag_193\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7211:7240   */\n      tag_282\n        /* \"#utility.yul\":7233:7239   */\n      dup2\n        /* \"#utility.yul\":7211:7240   */\n      tag_194\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7206:7209   */\n      dup5\n        /* \"#utility.yul\":7202:7241   */\n      add\n        /* \"#utility.yul\":7195:7241   */\n      swap2\n      pop\n        /* \"#utility.yul\":6964:7247   */\n      pop\n        /* \"#utility.yul\":6874:7247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7253:7562   */\n    tag_157:\n        /* \"#utility.yul\":7364:7368   */\n      0x00\n        /* \"#utility.yul\":7402:7404   */\n      0x20\n        /* \"#utility.yul\":7391:7400   */\n      dup3\n        /* \"#utility.yul\":7387:7405   */\n      add\n        /* \"#utility.yul\":7379:7405   */\n      swap1\n      pop\n        /* \"#utility.yul\":7451:7460   */\n      dup2\n        /* \"#utility.yul\":7445:7449   */\n      dup2\n        /* \"#utility.yul\":7441:7461   */\n      sub\n        /* \"#utility.yul\":7437:7438   */\n      0x00\n        /* \"#utility.yul\":7426:7435   */\n      dup4\n        /* \"#utility.yul\":7422:7439   */\n      add\n        /* \"#utility.yul\":7415:7462   */\n      mstore\n        /* \"#utility.yul\":7479:7555   */\n      tag_284\n        /* \"#utility.yul\":7550:7554   */\n      dup2\n        /* \"#utility.yul\":7541:7547   */\n      dup5\n        /* \"#utility.yul\":7479:7555   */\n      tag_195\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7471:7555   */\n      swap1\n      pop\n        /* \"#utility.yul\":7253:7562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220731dbcbbe2beb737d4bd6fa5a774cf308b2ad85d7fcdad02d6ef661285d0cdef64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1025": {
									"entryPoint": null,
									"id": 1025,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 325,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2825:10",
										"nodeType": "YulBlock",
										"src": "0:2825:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "890:32:10",
													"nodeType": "YulBlock",
													"src": "890:32:10",
													"statements": [
														{
															"nativeSrc": "900:16:10",
															"nodeType": "YulAssignment",
															"src": "900:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:10",
																"nodeType": "YulIdentifier",
																"src": "911:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:10",
														"nodeType": "YulTypedName",
														"src": "872:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:10",
														"nodeType": "YulTypedName",
														"src": "882:7:10",
														"type": ""
													}
												],
												"src": "845:77:10"
											},
											{
												"body": {
													"nativeSrc": "971:79:10",
													"nodeType": "YulBlock",
													"src": "971:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:10",
																"nodeType": "YulBlock",
																"src": "1028:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:10"
																			},
																			"nativeSrc": "1030:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:10"
																		},
																		"nativeSrc": "1030:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:10"
																				},
																				"nativeSrc": "1001:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:10"
																		},
																		"nativeSrc": "991:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:10"
																},
																"nativeSrc": "984:43:10",
																"nodeType": "YulFunctionCall",
																"src": "984:43:10"
															},
															"nativeSrc": "981:63:10",
															"nodeType": "YulIf",
															"src": "981:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:10",
														"nodeType": "YulTypedName",
														"src": "964:5:10",
														"type": ""
													}
												],
												"src": "928:122:10"
											},
											{
												"body": {
													"nativeSrc": "1119:80:10",
													"nodeType": "YulBlock",
													"src": "1119:80:10",
													"statements": [
														{
															"nativeSrc": "1129:22:10",
															"nodeType": "YulAssignment",
															"src": "1129:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:10"
																},
																"nativeSrc": "1138:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:10"
																},
																"nativeSrc": "1160:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:10"
															},
															"nativeSrc": "1160:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:10",
														"nodeType": "YulTypedName",
														"src": "1097:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:10",
														"nodeType": "YulTypedName",
														"src": "1105:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:10",
														"nodeType": "YulTypedName",
														"src": "1113:5:10",
														"type": ""
													}
												],
												"src": "1056:143:10"
											},
											{
												"body": {
													"nativeSrc": "1316:552:10",
													"nodeType": "YulBlock",
													"src": "1316:552:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:10",
																"nodeType": "YulBlock",
																"src": "1362:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:10"
																			},
																			"nativeSrc": "1364:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:10"
																		},
																		"nativeSrc": "1364:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:10"
																		},
																		"nativeSrc": "1333:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:10"
																},
																"nativeSrc": "1329:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:10"
															},
															"nativeSrc": "1326:119:10",
															"nodeType": "YulIf",
															"src": "1326:119:10"
														},
														{
															"nativeSrc": "1455:128:10",
															"nodeType": "YulBlock",
															"src": "1455:128:10",
															"statements": [
																{
																	"nativeSrc": "1470:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:10"
																				},
																				"nativeSrc": "1541:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:10"
																		},
																		"nativeSrc": "1509:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:10",
															"nodeType": "YulBlock",
															"src": "1593:129:10",
															"statements": [
																{
																	"nativeSrc": "1608:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:10"
																				},
																				"nativeSrc": "1680:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:10"
																		},
																		"nativeSrc": "1648:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:10",
															"nodeType": "YulBlock",
															"src": "1732:129:10",
															"statements": [
																{
																	"nativeSrc": "1747:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:10"
																				},
																				"nativeSrc": "1819:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:10"
																		},
																		"nativeSrc": "1787:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:10",
														"nodeType": "YulTypedName",
														"src": "1270:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:10",
														"nodeType": "YulTypedName",
														"src": "1281:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:10",
														"nodeType": "YulTypedName",
														"src": "1293:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:10",
														"nodeType": "YulTypedName",
														"src": "1301:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:10",
														"nodeType": "YulTypedName",
														"src": "1309:6:10",
														"type": ""
													}
												],
												"src": "1205:663:10"
											},
											{
												"body": {
													"nativeSrc": "1939:53:10",
													"nodeType": "YulBlock",
													"src": "1939:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1956:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1979:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1961:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1961:17:10"
																		},
																		"nativeSrc": "1961:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1949:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:10"
																},
																"nativeSrc": "1949:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1949:37:10"
															},
															"nativeSrc": "1949:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1949:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1874:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1927:5:10",
														"nodeType": "YulTypedName",
														"src": "1927:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1934:3:10",
														"nodeType": "YulTypedName",
														"src": "1934:3:10",
														"type": ""
													}
												],
												"src": "1874:118:10"
											},
											{
												"body": {
													"nativeSrc": "2096:124:10",
													"nodeType": "YulBlock",
													"src": "2096:124:10",
													"statements": [
														{
															"nativeSrc": "2106:26:10",
															"nodeType": "YulAssignment",
															"src": "2106:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2118:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2129:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2114:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:10"
																},
																"nativeSrc": "2114:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2114:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2106:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2186:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2199:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2210:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2195:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:10"
																		},
																		"nativeSrc": "2195:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2142:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2142:43:10"
																},
																"nativeSrc": "2142:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2142:71:10"
															},
															"nativeSrc": "2142:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2142:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1998:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2068:9:10",
														"nodeType": "YulTypedName",
														"src": "2068:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2080:6:10",
														"nodeType": "YulTypedName",
														"src": "2080:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2091:4:10",
														"nodeType": "YulTypedName",
														"src": "2091:4:10",
														"type": ""
													}
												],
												"src": "1998:222:10"
											},
											{
												"body": {
													"nativeSrc": "2254:152:10",
													"nodeType": "YulBlock",
													"src": "2254:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2271:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2271:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2274:77:10",
																		"nodeType": "YulLiteral",
																		"src": "2274:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2264:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:10"
																},
																"nativeSrc": "2264:88:10",
																"nodeType": "YulFunctionCall",
																"src": "2264:88:10"
															},
															"nativeSrc": "2264:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "2264:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2368:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2368:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2371:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2371:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2361:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:10"
																},
																"nativeSrc": "2361:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2361:15:10"
															},
															"nativeSrc": "2361:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "2361:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2392:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2392:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2395:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2395:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2385:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2385:6:10"
																},
																"nativeSrc": "2385:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2385:15:10"
															},
															"nativeSrc": "2385:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "2385:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2226:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2226:180:10"
											},
											{
												"body": {
													"nativeSrc": "2460:362:10",
													"nodeType": "YulBlock",
													"src": "2460:362:10",
													"statements": [
														{
															"nativeSrc": "2470:25:10",
															"nodeType": "YulAssignment",
															"src": "2470:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2493:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "2493:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2475:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2475:17:10"
																},
																"nativeSrc": "2475:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2475:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2470:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "2470:1:10"
																}
															]
														},
														{
															"nativeSrc": "2504:25:10",
															"nodeType": "YulAssignment",
															"src": "2504:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2527:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "2527:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2509:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2509:17:10"
																},
																"nativeSrc": "2509:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2509:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2504:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "2504:1:10"
																}
															]
														},
														{
															"nativeSrc": "2538:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2538:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2561:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "2561:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2564:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "2564:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2557:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2557:3:10"
																},
																"nativeSrc": "2557:9:10",
																"nodeType": "YulFunctionCall",
																"src": "2557:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2542:11:10",
																	"nodeType": "YulTypedName",
																	"src": "2542:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2575:41:10",
															"nodeType": "YulAssignment",
															"src": "2575:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2604:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "2604:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2586:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2586:17:10"
																},
																"nativeSrc": "2586:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2586:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2575:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2575:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2793:22:10",
																"nodeType": "YulBlock",
																"src": "2793:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2795:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "2795:16:10"
																			},
																			"nativeSrc": "2795:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2795:18:10"
																		},
																		"nativeSrc": "2795:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2795:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2726:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "2726:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2719:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2719:6:10"
																				},
																				"nativeSrc": "2719:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2719:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2749:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "2749:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2756:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "2756:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2765:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "2765:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2752:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2752:3:10"
																						},
																						"nativeSrc": "2752:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2752:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2746:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "2746:2:10"
																				},
																				"nativeSrc": "2746:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2746:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2699:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2699:2:10"
																		},
																		"nativeSrc": "2699:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2699:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2679:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:10"
																},
																"nativeSrc": "2679:113:10",
																"nodeType": "YulFunctionCall",
																"src": "2679:113:10"
															},
															"nativeSrc": "2676:139:10",
															"nodeType": "YulIf",
															"src": "2676:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2412:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2443:1:10",
														"nodeType": "YulTypedName",
														"src": "2443:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2446:1:10",
														"nodeType": "YulTypedName",
														"src": "2446:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2452:7:10",
														"nodeType": "YulTypedName",
														"src": "2452:7:10",
														"type": ""
													}
												],
												"src": "2412:410:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e060405234801561000f575f5ffd5b5060405161168f38038061168f83398181016040528101906100319190610297565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102f6565b60405180910390fd5b6100b18161014560201b60201c565b508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250506305f5e10081610136919061033c565b60a0818152505050505061037d565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102338261020a565b9050919050565b61024381610229565b811461024d575f5ffd5b50565b5f8151905061025e8161023a565b92915050565b5f819050919050565b61027681610264565b8114610280575f5ffd5b50565b5f815190506102918161026d565b92915050565b5f5f5f606084860312156102ae576102ad610206565b5b5f6102bb86828701610250565b93505060206102cc86828701610250565b92505060406102dd86828701610283565b9150509250925092565b6102f081610229565b82525050565b5f6020820190506103095f8301846102e7565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61034682610264565b915061035183610264565b925082820261035f81610264565b915082820484148315176103765761037561030f565b5b5092915050565b60805160a05160c0516112cc6103c35f395f610cb301525f8181610634015281816107c90152610b7e01525f818161044c015281816107a501526108f101526112cc5ff3fe6080604052600436106100f2575f3560e01c8063893b7e9511610089578063f2fde38b11610058578063f2fde38b146102c9578063f688bcfb146102f1578063fa56927414610319578063ff50abdc14610343576100f2565b8063893b7e95146102235780638da5cb5b1461024d5780639b900405146102775780639caf34c41461029f576100f2565b8063715018a6116100c5578063715018a61461018f57806371706cbe146101a5578063741bef1a146101cf57806382ee0d1d146101f9576100f2565b80631edc8f03146100f657806327e235e31461011e5780632dfdf0b51461015b578063439370b114610185575b5f5ffd5b348015610101575f5ffd5b5061011c60048036038101906101179190610f17565b61036d565b005b348015610129575f5ffd5b50610144600480360381019061013f9190610f9c565b6105d2565b604051610152929190610fd6565b60405180910390f35b348015610166575f5ffd5b5061016f6105f2565b60405161017c9190610ffd565b60405180910390f35b61018d6105f8565b005b34801561019a575f5ffd5b506101a3610765565b005b3480156101b0575f5ffd5b506101b9610778565b6040516101c69190610ffd565b60405180910390f35b3480156101da575f5ffd5b506101e361077e565b6040516101f09190611071565b60405180910390f35b348015610204575f5ffd5b5061020d6107a3565b60405161021a9190610ffd565b60405180910390f35b34801561022e575f5ffd5b506102376107c7565b6040516102449190610ffd565b60405180910390f35b348015610258575f5ffd5b506102616107eb565b60405161026e9190611099565b60405180910390f35b348015610282575f5ffd5b5061029d60048036038101906102989190610f17565b610812565b005b3480156102aa575f5ffd5b506102b3610a78565b6040516102c09190610ffd565b60405180910390f35b3480156102d4575f5ffd5b506102ef60048036038101906102ea9190610f9c565b610abe565b005b3480156102fc575f5ffd5b5061031760048036038101906103129190610f17565b610b42565b005b348015610324575f5ffd5b5061032d610cb1565b60405161033a91906110d2565b60405180910390f35b34801561034e575f5ffd5b50610357610cd5565b6040516103649190610ffd565b60405180910390f35b60055f9054906101000a900460ff16156103b3576040517f37ed32e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160055f6101000a81548160ff021916908315150217905550805f8103610407576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015490507f00000000000000000000000000000000000000000000000000000000000000008311156104a4576040517f4e6a369600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808311156104de576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82816104ea9190611118565b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055508260025f82825461053e9190611118565b9250508190555060045f8154809291906105579061114b565b91905055506105663384610cdb565b3373ffffffffffffffffffffffffffffffffffffffff167f40953fd5db732b94d86820ccd999bd4ab6da08154a115387891e8957e585fa1d846040516105ac9190610ffd565b60405180910390a250505f60055f6101000a81548160ff02191690831515021790555050565b6006602052805f5260405f205f91509050805f0154908060010154905082565b60035481565b345f8103610632576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000346002546106619190611192565b1115610699576040517f448f3ca800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460025f82825401925050819055503460065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546106f69190611192565b9250508190555060035f81548092919061070f9061114b565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f7034bb05cfe54b0d147fc0574ed166101e7f0313eb404e113974fbe2a998ca833460405161075a9190610ffd565b60405180910390a250565b61076d610d8d565b6107765f610e14565b565b60045481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055f9054906101000a900460ff1615610858576040517f37ed32e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160055f6101000a81548160ff021916908315150217905550805f81036108ac576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015490507f0000000000000000000000000000000000000000000000000000000000000000831115610949576040517f4e6a369600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80831115610983576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828161098f9190611118565b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055508260025f8282546109e49190611118565b9250508190555060045f8154809291906109fd9061114b565b9190505550610a0c3384610ed5565b3373ffffffffffffffffffffffffffffffffffffffff167f736dfcc39d27adad7de37e9a6f1e8252e0953ebf8f582d535672d33f8986738b84604051610a529190610ffd565b60405180910390a250505f60055f6101000a81548160ff02191690831515021790555050565b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154905090565b610ac6610d8d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b36575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b2d9190611099565b60405180910390fd5b610b3f81610e14565b50565b805f8103610b7c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000082600254610bab9190611192565b1115610be3576040517f448f3ca800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160025f82825401925050819055508160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f828254610c419190611192565b9250508190555060035f815480929190610c5a9061114b565b91905055503373ffffffffffffffffffffffffffffffffffffffff167fe7440f6772025dec9be06ba934e6ee5289b73533ee2136ba668f6cb6ea3f56a883604051610ca59190610ffd565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b5f5f8373ffffffffffffffffffffffffffffffffffffffff1683604051610d01906111f2565b5f6040518083038185875af1925050503d805f8114610d3b576040519150601f19603f3d011682016040523d82523d5f602084013e610d40565b606091505b509150915081610d8757806040517f49ba945b000000000000000000000000000000000000000000000000000000008152600401610d7e9190611276565b60405180910390fd5b50505050565b610d95610ed9565b73ffffffffffffffffffffffffffffffffffffffff16610db36107eb565b73ffffffffffffffffffffffffffffffffffffffff1614610e1257610dd6610ed9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e099190611099565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5050565b5f33905090565b5f5ffd5b5f819050919050565b610ef681610ee4565b8114610f00575f5ffd5b50565b5f81359050610f1181610eed565b92915050565b5f60208284031215610f2c57610f2b610ee0565b5b5f610f3984828501610f03565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f6b82610f42565b9050919050565b610f7b81610f61565b8114610f85575f5ffd5b50565b5f81359050610f9681610f72565b92915050565b5f60208284031215610fb157610fb0610ee0565b5b5f610fbe84828501610f88565b91505092915050565b610fd081610ee4565b82525050565b5f604082019050610fe95f830185610fc7565b610ff66020830184610fc7565b9392505050565b5f6020820190506110105f830184610fc7565b92915050565b5f819050919050565b5f61103961103461102f84610f42565b611016565b610f42565b9050919050565b5f61104a8261101f565b9050919050565b5f61105b82611040565b9050919050565b61106b81611051565b82525050565b5f6020820190506110845f830184611062565b92915050565b61109381610f61565b82525050565b5f6020820190506110ac5f83018461108a565b92915050565b5f6110bc82611040565b9050919050565b6110cc816110b2565b82525050565b5f6020820190506110e55f8301846110c3565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61112282610ee4565b915061112d83610ee4565b9250828203905081811115611145576111446110eb565b5b92915050565b5f61115582610ee4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611187576111866110eb565b5b600182019050919050565b5f61119c82610ee4565b91506111a783610ee4565b92508282019050808211156111bf576111be6110eb565b5b92915050565b5f81905092915050565b50565b5f6111dd5f836111c5565b91506111e8826111cf565b5f82019050919050565b5f6111fc826111d2565b9150819050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61124882611206565b6112528185611210565b9350611262818560208601611220565b61126b8161122e565b840191505092915050565b5f6020820190508181035f83015261128e818461123e565b90509291505056fea2646970667358221220731dbcbbe2beb737d4bd6fa5a774cf308b2ad85d7fcdad02d6ef661285d0cdef64736f6c634300081b0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x168F CODESIZE SUB DUP1 PUSH2 0x168F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x297 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x145 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH4 0x5F5E100 DUP2 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP POP POP POP PUSH2 0x37D JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x233 DUP3 PUSH2 0x20A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x243 DUP2 PUSH2 0x229 JUMP JUMPDEST DUP2 EQ PUSH2 0x24D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25E DUP2 PUSH2 0x23A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH2 0x264 JUMP JUMPDEST DUP2 EQ PUSH2 0x280 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x291 DUP2 PUSH2 0x26D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AE JUMPI PUSH2 0x2AD PUSH2 0x206 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BB DUP7 DUP3 DUP8 ADD PUSH2 0x250 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2CC DUP7 DUP3 DUP8 ADD PUSH2 0x250 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2DD DUP7 DUP3 DUP8 ADD PUSH2 0x283 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2F0 DUP2 PUSH2 0x229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x309 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x346 DUP3 PUSH2 0x264 JUMP JUMPDEST SWAP2 POP PUSH2 0x351 DUP4 PUSH2 0x264 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x35F DUP2 PUSH2 0x264 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x376 JUMPI PUSH2 0x375 PUSH2 0x30F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x12CC PUSH2 0x3C3 PUSH0 CODECOPY PUSH0 PUSH2 0xCB3 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x634 ADD MSTORE DUP2 DUP2 PUSH2 0x7C9 ADD MSTORE PUSH2 0xB7E ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x44C ADD MSTORE DUP2 DUP2 PUSH2 0x7A5 ADD MSTORE PUSH2 0x8F1 ADD MSTORE PUSH2 0x12CC PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893B7E95 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xF688BCFB EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xFA569274 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xFF50ABDC EQ PUSH2 0x343 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x893B7E95 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x9B900405 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x9CAF34C4 EQ PUSH2 0x29F JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x71706CBE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x82EE0D1D EQ PUSH2 0x1F9 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x1EDC8F03 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2DFDF0B5 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x439370B1 EQ PUSH2 0x185 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP3 SWAP2 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x5F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x765 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x237 PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x261 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0xABE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x357 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH0 DUP2 SUB PUSH2 0x407 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH32 0x0 DUP4 GT ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E6A369600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x1118 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x557 SWAP1 PUSH2 0x114B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x566 CALLER DUP5 PUSH2 0xCDB JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40953FD5DB732B94D86820CCD999BD4AB6DA08154A115387891E8957E585FA1D DUP5 PUSH1 0x40 MLOAD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE PUSH0 DUP2 SUB PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 CALLVALUE PUSH1 0x2 SLOAD PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST GT ISZERO PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH32 0x448F3CA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x70F SWAP1 PUSH2 0x114B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7034BB05CFE54B0D147FC0574ED166101E7F0313EB404E113974FBE2A998CA83 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x75A SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x76D PUSH2 0xD8D JUMP JUMPDEST PUSH2 0x776 PUSH0 PUSH2 0xE14 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH0 DUP2 SUB PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH32 0x0 DUP4 GT ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E6A369600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0x1118 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x9FD SWAP1 PUSH2 0x114B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xA0C CALLER DUP5 PUSH2 0xED5 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x736DFCC39D27ADAD7DE37E9A6F1E8252E0953EBF8F582D535672D33F8986738B DUP5 PUSH1 0x40 MLOAD PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAC6 PUSH2 0xD8D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB3F DUP2 PUSH2 0xE14 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 PUSH1 0x2 SLOAD PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST GT ISZERO PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x448F3CA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC5A SWAP1 PUSH2 0x114B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7440F6772025DEC9BE06BA934E6EE5289B73533EE2136BA668F6CB6EA3F56A8 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xD01 SWAP1 PUSH2 0x11F2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xD87 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x49BA945B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD95 PUSH2 0xED9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDB3 PUSH2 0x7EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE12 JUMPI PUSH2 0xDD6 PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF6 DUP2 PUSH2 0xEE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xF00 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF11 DUP2 PUSH2 0xEED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2B PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF39 DUP5 DUP3 DUP6 ADD PUSH2 0xF03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF6B DUP3 PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7B DUP2 PUSH2 0xF61 JUMP JUMPDEST DUP2 EQ PUSH2 0xF85 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF96 DUP2 PUSH2 0xF72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB1 JUMPI PUSH2 0xFB0 PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFBE DUP5 DUP3 DUP6 ADD PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFD0 DUP2 PUSH2 0xEE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFE9 PUSH0 DUP4 ADD DUP6 PUSH2 0xFC7 JUMP JUMPDEST PUSH2 0xFF6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1010 PUSH0 DUP4 ADD DUP5 PUSH2 0xFC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1039 PUSH2 0x1034 PUSH2 0x102F DUP5 PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x1016 JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x105B DUP3 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106B DUP2 PUSH2 0x1051 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1084 PUSH0 DUP4 ADD DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1093 DUP2 PUSH2 0xF61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AC PUSH0 DUP4 ADD DUP5 PUSH2 0x108A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10BC DUP3 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CC DUP2 PUSH2 0x10B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E5 PUSH0 DUP4 ADD DUP5 PUSH2 0x10C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1122 DUP3 PUSH2 0xEE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x112D DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x10EB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1155 DUP3 PUSH2 0xEE4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1187 JUMPI PUSH2 0x1186 PUSH2 0x10EB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x119C DUP3 PUSH2 0xEE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A7 DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11BF JUMPI PUSH2 0x11BE PUSH2 0x10EB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x11DD PUSH0 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x11E8 DUP3 PUSH2 0x11CF JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11FC DUP3 PUSH2 0x11D2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1248 DUP3 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x1252 DUP2 DUP6 PUSH2 0x1210 JUMP JUMPDEST SWAP4 POP PUSH2 0x1262 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x126B DUP2 PUSH2 0x122E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x128E DUP2 DUP5 PUSH2 0x123E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x1DBCBBE2BEB737D4BD6FA5A774CF308B2AD85D7F 0xCD 0xAD MUL 0xD6 0xEF PUSH7 0x1285D0CDEF6473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "572:9932:9:-:0;;;5622:365;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5751:10;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;5808:17:9::1;5774:9;;:52;;;;;;;;;;;;;;;;;;5857:17;5837:38;;;;;;;;::::0;::::1;5973:5;5958:11;:21;;;;:::i;:::-;5943:36;;;;::::0;::::1;5622:365:::0;;;572:9932;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:118::-;1961:24;1979:5;1961:24;:::i;:::-;1956:3;1949:37;1874:118;;:::o;1998:222::-;2091:4;2129:2;2118:9;2114:18;2106:26;;2142:71;2210:1;2199:9;2195:17;2186:6;2142:71;:::i;:::-;1998:222;;;;:::o;2226:180::-;2274:77;2271:1;2264:88;2371:4;2368:1;2361:15;2395:4;2392:1;2385:15;2412:410;2452:7;2475:20;2493:1;2475:20;:::i;:::-;2470:25;;2509:20;2527:1;2509:20;:::i;:::-;2504:25;;2564:1;2561;2557:9;2586:30;2604:11;2586:30;:::i;:::-;2575:41;;2765:1;2756:7;2752:15;2749:1;2746:22;2726:1;2719:9;2699:83;2676:139;;2795:18;;:::i;:::-;2676:139;2460:362;2412:410;;;;:::o;572:9932:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BANK_CAP_USD_881": {
									"entryPoint": 1991,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_TOKEN_887": {
									"entryPoint": 3249,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WITHDRAWAL_LIMIT_878": {
									"entryPoint": 1955,
									"id": 878,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 3469,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_837": {
									"entryPoint": 3801,
									"id": 837,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferEth_1281": {
									"entryPoint": 3291,
									"id": 1281,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 3604,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferUSDC_1289": {
									"entryPoint": 3797,
									"id": 1289,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balances_910": {
									"entryPoint": 1490,
									"id": 910,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositCount_893": {
									"entryPoint": 1522,
									"id": 893,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositEth_1069": {
									"entryPoint": 1528,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositUSDC_1109": {
									"entryPoint": 2882,
									"id": 1109,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getBalanceEth_1253": {
									"entryPoint": 2680,
									"id": 1253,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_113": {
									"entryPoint": 2027,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceFeed_884": {
									"entryPoint": 1918,
									"id": 884,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_144": {
									"entryPoint": 1893,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalDeposited_890": {
									"entryPoint": 3285,
									"id": 890,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_172": {
									"entryPoint": 2750,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawalCount_896": {
									"entryPoint": 1912,
									"id": 896,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawalEth_1175": {
									"entryPoint": 877,
									"id": 1175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawalUSDC_1240": {
									"entryPoint": 2066,
									"id": 1240,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$361_to_t_address_fromStack": {
									"entryPoint": 4291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$361__to_t_address__fromStack_reversed": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4054,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorV3Interface_$45_to_t_address": {
									"entryPoint": 4177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$361_to_t_address": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3808,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7565:10",
										"nodeType": "YulBlock",
										"src": "0:7565:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:32:10",
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nativeSrc": "389:16:10",
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:10",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nativeSrc": "460:79:10",
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:10",
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nativeSrc": "519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nativeSrc": "519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nativeSrc": "490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nativeSrc": "480:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nativeSrc": "473:43:10",
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nativeSrc": "470:63:10",
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:10",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nativeSrc": "597:87:10",
													"nodeType": "YulBlock",
													"src": "597:87:10",
													"statements": [
														{
															"nativeSrc": "607:29:10",
															"nodeType": "YulAssignment",
															"src": "607:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:10"
																},
																"nativeSrc": "616:20:10",
																"nodeType": "YulFunctionCall",
																"src": "616:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:10"
																},
																"nativeSrc": "645:33:10",
																"nodeType": "YulFunctionCall",
																"src": "645:33:10"
															},
															"nativeSrc": "645:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:10",
														"nodeType": "YulTypedName",
														"src": "575:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:10",
														"nodeType": "YulTypedName",
														"src": "583:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:10",
														"nodeType": "YulTypedName",
														"src": "591:5:10",
														"type": ""
													}
												],
												"src": "545:139:10"
											},
											{
												"body": {
													"nativeSrc": "756:263:10",
													"nodeType": "YulBlock",
													"src": "756:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:10",
																"nodeType": "YulBlock",
																"src": "802:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:10"
																			},
																			"nativeSrc": "804:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:10"
																		},
																		"nativeSrc": "804:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:10"
																		},
																		"nativeSrc": "773:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "798:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:10"
																},
																"nativeSrc": "769:32:10",
																"nodeType": "YulFunctionCall",
																"src": "769:32:10"
															},
															"nativeSrc": "766:119:10",
															"nodeType": "YulIf",
															"src": "766:119:10"
														},
														{
															"nativeSrc": "895:117:10",
															"nodeType": "YulBlock",
															"src": "895:117:10",
															"statements": [
																{
																	"nativeSrc": "910:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:10",
																		"nodeType": "YulLiteral",
																		"src": "924:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:10",
																			"nodeType": "YulTypedName",
																			"src": "914:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:10",
																	"nodeType": "YulAssignment",
																	"src": "939:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:10"
																				},
																				"nativeSrc": "970:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:10"
																		},
																		"nativeSrc": "949:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:10",
														"nodeType": "YulTypedName",
														"src": "726:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:10",
														"nodeType": "YulTypedName",
														"src": "737:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:10",
														"nodeType": "YulTypedName",
														"src": "749:6:10",
														"type": ""
													}
												],
												"src": "690:329:10"
											},
											{
												"body": {
													"nativeSrc": "1070:81:10",
													"nodeType": "YulBlock",
													"src": "1070:81:10",
													"statements": [
														{
															"nativeSrc": "1080:65:10",
															"nodeType": "YulAssignment",
															"src": "1080:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:10"
																},
																"nativeSrc": "1091:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:10",
														"nodeType": "YulTypedName",
														"src": "1052:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:10",
														"nodeType": "YulTypedName",
														"src": "1062:7:10",
														"type": ""
													}
												],
												"src": "1025:126:10"
											},
											{
												"body": {
													"nativeSrc": "1202:51:10",
													"nodeType": "YulBlock",
													"src": "1202:51:10",
													"statements": [
														{
															"nativeSrc": "1212:35:10",
															"nodeType": "YulAssignment",
															"src": "1212:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:10"
																},
																"nativeSrc": "1223:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:10",
														"nodeType": "YulTypedName",
														"src": "1184:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:10",
														"nodeType": "YulTypedName",
														"src": "1194:7:10",
														"type": ""
													}
												],
												"src": "1157:96:10"
											},
											{
												"body": {
													"nativeSrc": "1302:79:10",
													"nodeType": "YulBlock",
													"src": "1302:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1359:16:10",
																"nodeType": "YulBlock",
																"src": "1359:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1368:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1371:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1361:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:10"
																			},
																			"nativeSrc": "1361:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:10"
																		},
																		"nativeSrc": "1361:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1325:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1350:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1332:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:10"
																				},
																				"nativeSrc": "1332:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1322:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:10"
																		},
																		"nativeSrc": "1322:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1315:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:10"
																},
																"nativeSrc": "1315:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1315:43:10"
															},
															"nativeSrc": "1312:63:10",
															"nodeType": "YulIf",
															"src": "1312:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1259:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1295:5:10",
														"nodeType": "YulTypedName",
														"src": "1295:5:10",
														"type": ""
													}
												],
												"src": "1259:122:10"
											},
											{
												"body": {
													"nativeSrc": "1439:87:10",
													"nodeType": "YulBlock",
													"src": "1439:87:10",
													"statements": [
														{
															"nativeSrc": "1449:29:10",
															"nodeType": "YulAssignment",
															"src": "1449:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1471:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1458:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:10"
																},
																"nativeSrc": "1458:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1458:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1449:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1514:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1487:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:10"
																},
																"nativeSrc": "1487:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1487:33:10"
															},
															"nativeSrc": "1487:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1387:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1417:6:10",
														"nodeType": "YulTypedName",
														"src": "1417:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1425:3:10",
														"nodeType": "YulTypedName",
														"src": "1425:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1433:5:10",
														"nodeType": "YulTypedName",
														"src": "1433:5:10",
														"type": ""
													}
												],
												"src": "1387:139:10"
											},
											{
												"body": {
													"nativeSrc": "1598:263:10",
													"nodeType": "YulBlock",
													"src": "1598:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1644:83:10",
																"nodeType": "YulBlock",
																"src": "1644:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1646:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1646:77:10"
																			},
																			"nativeSrc": "1646:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1646:79:10"
																		},
																		"nativeSrc": "1646:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1619:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1619:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1628:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1615:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:10"
																		},
																		"nativeSrc": "1615:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1615:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1640:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1611:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1611:3:10"
																},
																"nativeSrc": "1611:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1611:32:10"
															},
															"nativeSrc": "1608:119:10",
															"nodeType": "YulIf",
															"src": "1608:119:10"
														},
														{
															"nativeSrc": "1737:117:10",
															"nodeType": "YulBlock",
															"src": "1737:117:10",
															"statements": [
																{
																	"nativeSrc": "1752:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1752:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1766:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1756:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1756:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1781:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1781:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1816:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1827:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1812:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:10"
																				},
																				"nativeSrc": "1812:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1836:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1791:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:10"
																		},
																		"nativeSrc": "1791:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1781:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1532:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1568:9:10",
														"nodeType": "YulTypedName",
														"src": "1568:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1579:7:10",
														"nodeType": "YulTypedName",
														"src": "1579:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1591:6:10",
														"nodeType": "YulTypedName",
														"src": "1591:6:10",
														"type": ""
													}
												],
												"src": "1532:329:10"
											},
											{
												"body": {
													"nativeSrc": "1932:53:10",
													"nodeType": "YulBlock",
													"src": "1932:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1949:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1972:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1972:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1954:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1954:17:10"
																		},
																		"nativeSrc": "1954:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1954:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1942:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:10"
																},
																"nativeSrc": "1942:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1942:37:10"
															},
															"nativeSrc": "1942:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1942:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1867:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1920:5:10",
														"nodeType": "YulTypedName",
														"src": "1920:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1927:3:10",
														"nodeType": "YulTypedName",
														"src": "1927:3:10",
														"type": ""
													}
												],
												"src": "1867:118:10"
											},
											{
												"body": {
													"nativeSrc": "2117:206:10",
													"nodeType": "YulBlock",
													"src": "2117:206:10",
													"statements": [
														{
															"nativeSrc": "2127:26:10",
															"nodeType": "YulAssignment",
															"src": "2127:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2139:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2139:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2150:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2150:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2135:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2135:3:10"
																},
																"nativeSrc": "2135:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2135:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2127:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2127:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2207:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2207:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2220:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2220:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2231:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2216:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2216:3:10"
																		},
																		"nativeSrc": "2216:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2216:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2163:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2163:43:10"
																},
																"nativeSrc": "2163:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2163:71:10"
															},
															"nativeSrc": "2163:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2163:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2288:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2288:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2301:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2301:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2312:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2312:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2297:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2297:3:10"
																		},
																		"nativeSrc": "2297:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2297:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2244:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2244:43:10"
																},
																"nativeSrc": "2244:72:10",
																"nodeType": "YulFunctionCall",
																"src": "2244:72:10"
															},
															"nativeSrc": "2244:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "2244:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1991:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2081:9:10",
														"nodeType": "YulTypedName",
														"src": "2081:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2093:6:10",
														"nodeType": "YulTypedName",
														"src": "2093:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2101:6:10",
														"nodeType": "YulTypedName",
														"src": "2101:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2112:4:10",
														"nodeType": "YulTypedName",
														"src": "2112:4:10",
														"type": ""
													}
												],
												"src": "1991:332:10"
											},
											{
												"body": {
													"nativeSrc": "2427:124:10",
													"nodeType": "YulBlock",
													"src": "2427:124:10",
													"statements": [
														{
															"nativeSrc": "2437:26:10",
															"nodeType": "YulAssignment",
															"src": "2437:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2449:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2449:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2460:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2460:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2445:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2445:3:10"
																},
																"nativeSrc": "2445:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2445:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2437:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2437:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2517:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2517:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2530:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2530:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2541:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2541:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2526:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2526:3:10"
																		},
																		"nativeSrc": "2526:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2526:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2473:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2473:43:10"
																},
																"nativeSrc": "2473:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2473:71:10"
															},
															"nativeSrc": "2473:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2473:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2329:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2399:9:10",
														"nodeType": "YulTypedName",
														"src": "2399:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2411:6:10",
														"nodeType": "YulTypedName",
														"src": "2411:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2422:4:10",
														"nodeType": "YulTypedName",
														"src": "2422:4:10",
														"type": ""
													}
												],
												"src": "2329:222:10"
											},
											{
												"body": {
													"nativeSrc": "2589:28:10",
													"nodeType": "YulBlock",
													"src": "2589:28:10",
													"statements": [
														{
															"nativeSrc": "2599:12:10",
															"nodeType": "YulAssignment",
															"src": "2599:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "2606:5:10",
																"nodeType": "YulIdentifier",
																"src": "2606:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2599:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2599:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2557:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2575:5:10",
														"nodeType": "YulTypedName",
														"src": "2575:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2585:3:10",
														"nodeType": "YulTypedName",
														"src": "2585:3:10",
														"type": ""
													}
												],
												"src": "2557:60:10"
											},
											{
												"body": {
													"nativeSrc": "2683:82:10",
													"nodeType": "YulBlock",
													"src": "2683:82:10",
													"statements": [
														{
															"nativeSrc": "2693:66:10",
															"nodeType": "YulAssignment",
															"src": "2693:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2751:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2751:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2733:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2733:17:10"
																				},
																				"nativeSrc": "2733:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2733:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2724:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "2724:8:10"
																		},
																		"nativeSrc": "2724:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2724:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2706:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2706:17:10"
																},
																"nativeSrc": "2706:53:10",
																"nodeType": "YulFunctionCall",
																"src": "2706:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2693:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2693:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2623:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2663:5:10",
														"nodeType": "YulTypedName",
														"src": "2663:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2673:9:10",
														"nodeType": "YulTypedName",
														"src": "2673:9:10",
														"type": ""
													}
												],
												"src": "2623:142:10"
											},
											{
												"body": {
													"nativeSrc": "2831:66:10",
													"nodeType": "YulBlock",
													"src": "2831:66:10",
													"statements": [
														{
															"nativeSrc": "2841:50:10",
															"nodeType": "YulAssignment",
															"src": "2841:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2885:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2885:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2854:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2854:30:10"
																},
																"nativeSrc": "2854:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2854:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2841:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2841:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2771:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2811:5:10",
														"nodeType": "YulTypedName",
														"src": "2811:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2821:9:10",
														"nodeType": "YulTypedName",
														"src": "2821:9:10",
														"type": ""
													}
												],
												"src": "2771:126:10"
											},
											{
												"body": {
													"nativeSrc": "2991:66:10",
													"nodeType": "YulBlock",
													"src": "2991:66:10",
													"statements": [
														{
															"nativeSrc": "3001:50:10",
															"nodeType": "YulAssignment",
															"src": "3001:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3045:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3045:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3014:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3014:30:10"
																},
																"nativeSrc": "3014:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3014:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3001:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3001:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
												"nativeSrc": "2903:154:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2971:5:10",
														"nodeType": "YulTypedName",
														"src": "2971:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2981:9:10",
														"nodeType": "YulTypedName",
														"src": "2981:9:10",
														"type": ""
													}
												],
												"src": "2903:154:10"
											},
											{
												"body": {
													"nativeSrc": "3156:94:10",
													"nodeType": "YulBlock",
													"src": "3156:94:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3173:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3173:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3237:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3237:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
																			"nativeSrc": "3178:58:10",
																			"nodeType": "YulIdentifier",
																			"src": "3178:58:10"
																		},
																		"nativeSrc": "3178:65:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3178:65:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3166:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3166:6:10"
																},
																"nativeSrc": "3166:78:10",
																"nodeType": "YulFunctionCall",
																"src": "3166:78:10"
															},
															"nativeSrc": "3166:78:10",
															"nodeType": "YulExpressionStatement",
															"src": "3166:78:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
												"nativeSrc": "3063:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3144:5:10",
														"nodeType": "YulTypedName",
														"src": "3144:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3151:3:10",
														"nodeType": "YulTypedName",
														"src": "3151:3:10",
														"type": ""
													}
												],
												"src": "3063:187:10"
											},
											{
												"body": {
													"nativeSrc": "3382:152:10",
													"nodeType": "YulBlock",
													"src": "3382:152:10",
													"statements": [
														{
															"nativeSrc": "3392:26:10",
															"nodeType": "YulAssignment",
															"src": "3392:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3404:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3404:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3415:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3415:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3400:3:10"
																},
																"nativeSrc": "3400:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3400:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3392:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3392:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3500:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3500:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3513:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3513:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3524:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3524:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3509:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3509:3:10"
																		},
																		"nativeSrc": "3509:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3509:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
																	"nativeSrc": "3428:71:10",
																	"nodeType": "YulIdentifier",
																	"src": "3428:71:10"
																},
																"nativeSrc": "3428:99:10",
																"nodeType": "YulFunctionCall",
																"src": "3428:99:10"
															},
															"nativeSrc": "3428:99:10",
															"nodeType": "YulExpressionStatement",
															"src": "3428:99:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "3256:278:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3354:9:10",
														"nodeType": "YulTypedName",
														"src": "3354:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3366:6:10",
														"nodeType": "YulTypedName",
														"src": "3366:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3377:4:10",
														"nodeType": "YulTypedName",
														"src": "3377:4:10",
														"type": ""
													}
												],
												"src": "3256:278:10"
											},
											{
												"body": {
													"nativeSrc": "3605:53:10",
													"nodeType": "YulBlock",
													"src": "3605:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3622:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3622:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3645:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3645:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3627:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3627:17:10"
																		},
																		"nativeSrc": "3627:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3627:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3615:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3615:6:10"
																},
																"nativeSrc": "3615:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3615:37:10"
															},
															"nativeSrc": "3615:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3615:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3540:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3593:5:10",
														"nodeType": "YulTypedName",
														"src": "3593:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3600:3:10",
														"nodeType": "YulTypedName",
														"src": "3600:3:10",
														"type": ""
													}
												],
												"src": "3540:118:10"
											},
											{
												"body": {
													"nativeSrc": "3762:124:10",
													"nodeType": "YulBlock",
													"src": "3762:124:10",
													"statements": [
														{
															"nativeSrc": "3772:26:10",
															"nodeType": "YulAssignment",
															"src": "3772:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3784:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3784:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3795:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3795:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3780:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3780:3:10"
																},
																"nativeSrc": "3780:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3780:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3772:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3772:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3852:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3852:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3865:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3865:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3876:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3876:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3861:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3861:3:10"
																		},
																		"nativeSrc": "3861:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3861:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3808:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3808:43:10"
																},
																"nativeSrc": "3808:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3808:71:10"
															},
															"nativeSrc": "3808:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3808:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3664:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3734:9:10",
														"nodeType": "YulTypedName",
														"src": "3734:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3746:6:10",
														"nodeType": "YulTypedName",
														"src": "3746:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3757:4:10",
														"nodeType": "YulTypedName",
														"src": "3757:4:10",
														"type": ""
													}
												],
												"src": "3664:222:10"
											},
											{
												"body": {
													"nativeSrc": "3966:66:10",
													"nodeType": "YulBlock",
													"src": "3966:66:10",
													"statements": [
														{
															"nativeSrc": "3976:50:10",
															"nodeType": "YulAssignment",
															"src": "3976:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4020:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4020:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3989:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3989:30:10"
																},
																"nativeSrc": "3989:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3989:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3976:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3976:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$361_to_t_address",
												"nativeSrc": "3892:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3946:5:10",
														"nodeType": "YulTypedName",
														"src": "3946:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3956:9:10",
														"nodeType": "YulTypedName",
														"src": "3956:9:10",
														"type": ""
													}
												],
												"src": "3892:140:10"
											},
											{
												"body": {
													"nativeSrc": "4117:80:10",
													"nodeType": "YulBlock",
													"src": "4117:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4134:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4184:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4184:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$361_to_t_address",
																			"nativeSrc": "4139:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "4139:44:10"
																		},
																		"nativeSrc": "4139:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4139:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4127:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4127:6:10"
																},
																"nativeSrc": "4127:64:10",
																"nodeType": "YulFunctionCall",
																"src": "4127:64:10"
															},
															"nativeSrc": "4127:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "4127:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$361_to_t_address_fromStack",
												"nativeSrc": "4038:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4105:5:10",
														"nodeType": "YulTypedName",
														"src": "4105:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4112:3:10",
														"nodeType": "YulTypedName",
														"src": "4112:3:10",
														"type": ""
													}
												],
												"src": "4038:159:10"
											},
											{
												"body": {
													"nativeSrc": "4315:138:10",
													"nodeType": "YulBlock",
													"src": "4315:138:10",
													"statements": [
														{
															"nativeSrc": "4325:26:10",
															"nodeType": "YulAssignment",
															"src": "4325:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4337:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4337:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4348:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4348:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4333:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4333:3:10"
																},
																"nativeSrc": "4333:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4333:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4325:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4325:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4419:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4419:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4432:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4432:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4443:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4443:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4428:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:10"
																		},
																		"nativeSrc": "4428:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4428:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$361_to_t_address_fromStack",
																	"nativeSrc": "4361:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "4361:57:10"
																},
																"nativeSrc": "4361:85:10",
																"nodeType": "YulFunctionCall",
																"src": "4361:85:10"
															},
															"nativeSrc": "4361:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "4361:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$361__to_t_address__fromStack_reversed",
												"nativeSrc": "4203:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4287:9:10",
														"nodeType": "YulTypedName",
														"src": "4287:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4299:6:10",
														"nodeType": "YulTypedName",
														"src": "4299:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4310:4:10",
														"nodeType": "YulTypedName",
														"src": "4310:4:10",
														"type": ""
													}
												],
												"src": "4203:250:10"
											},
											{
												"body": {
													"nativeSrc": "4487:152:10",
													"nodeType": "YulBlock",
													"src": "4487:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4504:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4504:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4507:77:10",
																		"nodeType": "YulLiteral",
																		"src": "4507:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4497:6:10"
																},
																"nativeSrc": "4497:88:10",
																"nodeType": "YulFunctionCall",
																"src": "4497:88:10"
															},
															"nativeSrc": "4497:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "4497:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4601:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4601:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4604:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4604:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4594:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4594:6:10"
																},
																"nativeSrc": "4594:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4594:15:10"
															},
															"nativeSrc": "4594:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4594:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4625:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4625:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4628:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4628:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4618:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4618:6:10"
																},
																"nativeSrc": "4618:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4618:15:10"
															},
															"nativeSrc": "4618:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4618:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4459:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4459:180:10"
											},
											{
												"body": {
													"nativeSrc": "4690:149:10",
													"nodeType": "YulBlock",
													"src": "4690:149:10",
													"statements": [
														{
															"nativeSrc": "4700:25:10",
															"nodeType": "YulAssignment",
															"src": "4700:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4723:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4723:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4705:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4705:17:10"
																},
																"nativeSrc": "4705:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4705:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4700:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "4700:1:10"
																}
															]
														},
														{
															"nativeSrc": "4734:25:10",
															"nodeType": "YulAssignment",
															"src": "4734:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4757:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4757:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4739:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4739:17:10"
																},
																"nativeSrc": "4739:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4739:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4734:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "4734:1:10"
																}
															]
														},
														{
															"nativeSrc": "4768:17:10",
															"nodeType": "YulAssignment",
															"src": "4768:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4780:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4780:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4783:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4783:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4776:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4776:3:10"
																},
																"nativeSrc": "4776:9:10",
																"nodeType": "YulFunctionCall",
																"src": "4776:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4768:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4768:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4810:22:10",
																"nodeType": "YulBlock",
																"src": "4810:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4812:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4812:16:10"
																			},
																			"nativeSrc": "4812:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4812:18:10"
																		},
																		"nativeSrc": "4812:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4812:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4801:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4801:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4807:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4807:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4798:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4798:2:10"
																},
																"nativeSrc": "4798:11:10",
																"nodeType": "YulFunctionCall",
																"src": "4798:11:10"
															},
															"nativeSrc": "4795:37:10",
															"nodeType": "YulIf",
															"src": "4795:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4645:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4676:1:10",
														"nodeType": "YulTypedName",
														"src": "4676:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4679:1:10",
														"nodeType": "YulTypedName",
														"src": "4679:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4685:4:10",
														"nodeType": "YulTypedName",
														"src": "4685:4:10",
														"type": ""
													}
												],
												"src": "4645:194:10"
											},
											{
												"body": {
													"nativeSrc": "4888:190:10",
													"nodeType": "YulBlock",
													"src": "4888:190:10",
													"statements": [
														{
															"nativeSrc": "4898:33:10",
															"nodeType": "YulAssignment",
															"src": "4898:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4925:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4925:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4907:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4907:17:10"
																},
																"nativeSrc": "4907:24:10",
																"nodeType": "YulFunctionCall",
																"src": "4907:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4898:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4898:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5021:22:10",
																"nodeType": "YulBlock",
																"src": "5021:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5023:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5023:16:10"
																			},
																			"nativeSrc": "5023:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5023:18:10"
																		},
																		"nativeSrc": "5023:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5023:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4946:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4946:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4953:66:10",
																		"nodeType": "YulLiteral",
																		"src": "4953:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4943:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4943:2:10"
																},
																"nativeSrc": "4943:77:10",
																"nodeType": "YulFunctionCall",
																"src": "4943:77:10"
															},
															"nativeSrc": "4940:103:10",
															"nodeType": "YulIf",
															"src": "4940:103:10"
														},
														{
															"nativeSrc": "5052:20:10",
															"nodeType": "YulAssignment",
															"src": "5052:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5063:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5063:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5070:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5070:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:10"
																},
																"nativeSrc": "5059:13:10",
																"nodeType": "YulFunctionCall",
																"src": "5059:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5052:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5052:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "4845:233:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4874:5:10",
														"nodeType": "YulTypedName",
														"src": "4874:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4884:3:10",
														"nodeType": "YulTypedName",
														"src": "4884:3:10",
														"type": ""
													}
												],
												"src": "4845:233:10"
											},
											{
												"body": {
													"nativeSrc": "5128:147:10",
													"nodeType": "YulBlock",
													"src": "5128:147:10",
													"statements": [
														{
															"nativeSrc": "5138:25:10",
															"nodeType": "YulAssignment",
															"src": "5138:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5161:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5161:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5143:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:10"
																},
																"nativeSrc": "5143:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5143:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5138:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5138:1:10"
																}
															]
														},
														{
															"nativeSrc": "5172:25:10",
															"nodeType": "YulAssignment",
															"src": "5172:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5195:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5195:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5177:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5177:17:10"
																},
																"nativeSrc": "5177:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5177:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5172:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5172:1:10"
																}
															]
														},
														{
															"nativeSrc": "5206:16:10",
															"nodeType": "YulAssignment",
															"src": "5206:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5217:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5217:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5220:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5220:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5213:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5213:3:10"
																},
																"nativeSrc": "5213:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5213:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5206:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5206:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5246:22:10",
																"nodeType": "YulBlock",
																"src": "5246:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5248:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5248:16:10"
																			},
																			"nativeSrc": "5248:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5248:18:10"
																		},
																		"nativeSrc": "5248:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5248:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5238:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5238:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5241:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5241:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5235:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5235:2:10"
																},
																"nativeSrc": "5235:10:10",
																"nodeType": "YulFunctionCall",
																"src": "5235:10:10"
															},
															"nativeSrc": "5232:36:10",
															"nodeType": "YulIf",
															"src": "5232:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5084:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5115:1:10",
														"nodeType": "YulTypedName",
														"src": "5115:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5118:1:10",
														"nodeType": "YulTypedName",
														"src": "5118:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5124:3:10",
														"nodeType": "YulTypedName",
														"src": "5124:3:10",
														"type": ""
													}
												],
												"src": "5084:191:10"
											},
											{
												"body": {
													"nativeSrc": "5394:34:10",
													"nodeType": "YulBlock",
													"src": "5394:34:10",
													"statements": [
														{
															"nativeSrc": "5404:18:10",
															"nodeType": "YulAssignment",
															"src": "5404:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "5419:3:10",
																"nodeType": "YulIdentifier",
																"src": "5419:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5404:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "5404:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5281:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5366:3:10",
														"nodeType": "YulTypedName",
														"src": "5366:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5371:6:10",
														"nodeType": "YulTypedName",
														"src": "5371:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5382:11:10",
														"nodeType": "YulTypedName",
														"src": "5382:11:10",
														"type": ""
													}
												],
												"src": "5281:147:10"
											},
											{
												"body": {
													"nativeSrc": "5540:8:10",
													"nodeType": "YulBlock",
													"src": "5540:8:10",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "5434:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5532:6:10",
														"nodeType": "YulTypedName",
														"src": "5532:6:10",
														"type": ""
													}
												],
												"src": "5434:114:10"
											},
											{
												"body": {
													"nativeSrc": "5717:235:10",
													"nodeType": "YulBlock",
													"src": "5717:235:10",
													"statements": [
														{
															"nativeSrc": "5727:90:10",
															"nodeType": "YulAssignment",
															"src": "5727:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5810:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5810:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5815:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5815:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "5734:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "5734:75:10"
																},
																"nativeSrc": "5734:83:10",
																"nodeType": "YulFunctionCall",
																"src": "5734:83:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5727:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5915:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "5826:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5826:88:10"
																},
																"nativeSrc": "5826:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5826:93:10"
															},
															"nativeSrc": "5826:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5826:93:10"
														},
														{
															"nativeSrc": "5928:18:10",
															"nodeType": "YulAssignment",
															"src": "5928:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5939:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5939:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5944:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5944:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5935:3:10"
																},
																"nativeSrc": "5935:11:10",
																"nodeType": "YulFunctionCall",
																"src": "5935:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5928:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5928:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5554:398:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5705:3:10",
														"nodeType": "YulTypedName",
														"src": "5705:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5713:3:10",
														"nodeType": "YulTypedName",
														"src": "5713:3:10",
														"type": ""
													}
												],
												"src": "5554:398:10"
											},
											{
												"body": {
													"nativeSrc": "6146:191:10",
													"nodeType": "YulBlock",
													"src": "6146:191:10",
													"statements": [
														{
															"nativeSrc": "6157:154:10",
															"nodeType": "YulAssignment",
															"src": "6157:154:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6307:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6307:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6164:141:10",
																	"nodeType": "YulIdentifier",
																	"src": "6164:141:10"
																},
																"nativeSrc": "6164:147:10",
																"nodeType": "YulFunctionCall",
																"src": "6164:147:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6157:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6157:3:10"
																}
															]
														},
														{
															"nativeSrc": "6321:10:10",
															"nodeType": "YulAssignment",
															"src": "6321:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "6328:3:10",
																"nodeType": "YulIdentifier",
																"src": "6328:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6321:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5958:379:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6133:3:10",
														"nodeType": "YulTypedName",
														"src": "6133:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6142:3:10",
														"nodeType": "YulTypedName",
														"src": "6142:3:10",
														"type": ""
													}
												],
												"src": "5958:379:10"
											},
											{
												"body": {
													"nativeSrc": "6401:40:10",
													"nodeType": "YulBlock",
													"src": "6401:40:10",
													"statements": [
														{
															"nativeSrc": "6412:22:10",
															"nodeType": "YulAssignment",
															"src": "6412:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6428:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6428:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6422:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6422:5:10"
																},
																"nativeSrc": "6422:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6422:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6412:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6412:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "6343:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6384:5:10",
														"nodeType": "YulTypedName",
														"src": "6384:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6394:6:10",
														"nodeType": "YulTypedName",
														"src": "6394:6:10",
														"type": ""
													}
												],
												"src": "6343:98:10"
											},
											{
												"body": {
													"nativeSrc": "6542:73:10",
													"nodeType": "YulBlock",
													"src": "6542:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6559:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6559:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6564:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6564:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6552:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6552:6:10"
																},
																"nativeSrc": "6552:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6552:19:10"
															},
															"nativeSrc": "6552:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "6552:19:10"
														},
														{
															"nativeSrc": "6580:29:10",
															"nodeType": "YulAssignment",
															"src": "6580:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6599:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6599:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6604:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6604:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6595:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6595:3:10"
																},
																"nativeSrc": "6595:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6595:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6580:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "6580:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "6447:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6514:3:10",
														"nodeType": "YulTypedName",
														"src": "6514:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6519:6:10",
														"nodeType": "YulTypedName",
														"src": "6519:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6530:11:10",
														"nodeType": "YulTypedName",
														"src": "6530:11:10",
														"type": ""
													}
												],
												"src": "6447:168:10"
											},
											{
												"body": {
													"nativeSrc": "6683:77:10",
													"nodeType": "YulBlock",
													"src": "6683:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6700:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6700:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6705:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6705:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6710:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6710:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6694:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6694:5:10"
																},
																"nativeSrc": "6694:23:10",
																"nodeType": "YulFunctionCall",
																"src": "6694:23:10"
															},
															"nativeSrc": "6694:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "6694:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6737:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6737:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6742:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6742:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6733:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6733:3:10"
																		},
																		"nativeSrc": "6733:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6733:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6751:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6751:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6726:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6726:6:10"
																},
																"nativeSrc": "6726:27:10",
																"nodeType": "YulFunctionCall",
																"src": "6726:27:10"
															},
															"nativeSrc": "6726:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "6726:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6621:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6665:3:10",
														"nodeType": "YulTypedName",
														"src": "6665:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6670:3:10",
														"nodeType": "YulTypedName",
														"src": "6670:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6675:6:10",
														"nodeType": "YulTypedName",
														"src": "6675:6:10",
														"type": ""
													}
												],
												"src": "6621:139:10"
											},
											{
												"body": {
													"nativeSrc": "6814:54:10",
													"nodeType": "YulBlock",
													"src": "6814:54:10",
													"statements": [
														{
															"nativeSrc": "6824:38:10",
															"nodeType": "YulAssignment",
															"src": "6824:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6842:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6842:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6849:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6849:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6838:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6838:3:10"
																		},
																		"nativeSrc": "6838:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6838:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6858:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6858:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6854:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6854:3:10"
																		},
																		"nativeSrc": "6854:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6854:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6834:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6834:3:10"
																},
																"nativeSrc": "6834:28:10",
																"nodeType": "YulFunctionCall",
																"src": "6834:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6824:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6824:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "6766:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6797:5:10",
														"nodeType": "YulTypedName",
														"src": "6797:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6807:6:10",
														"nodeType": "YulTypedName",
														"src": "6807:6:10",
														"type": ""
													}
												],
												"src": "6766:102:10"
											},
											{
												"body": {
													"nativeSrc": "6964:283:10",
													"nodeType": "YulBlock",
													"src": "6964:283:10",
													"statements": [
														{
															"nativeSrc": "6974:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6974:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7020:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7020:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "6988:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "6988:31:10"
																},
																"nativeSrc": "6988:38:10",
																"nodeType": "YulFunctionCall",
																"src": "6988:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6978:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6978:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7035:77:10",
															"nodeType": "YulAssignment",
															"src": "7035:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7100:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7100:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7105:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7105:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "7042:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "7042:57:10"
																},
																"nativeSrc": "7042:70:10",
																"nodeType": "YulFunctionCall",
																"src": "7042:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7035:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7035:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7160:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7160:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7167:4:10",
																				"nodeType": "YulLiteral",
																				"src": "7167:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7156:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7156:3:10"
																		},
																		"nativeSrc": "7156:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7156:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7174:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7174:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7179:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7179:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7121:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "7121:34:10"
																},
																"nativeSrc": "7121:65:10",
																"nodeType": "YulFunctionCall",
																"src": "7121:65:10"
															},
															"nativeSrc": "7121:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "7121:65:10"
														},
														{
															"nativeSrc": "7195:46:10",
															"nodeType": "YulAssignment",
															"src": "7195:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7206:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7206:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7233:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7233:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7211:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "7211:21:10"
																		},
																		"nativeSrc": "7211:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7211:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7202:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7202:3:10"
																},
																"nativeSrc": "7202:39:10",
																"nodeType": "YulFunctionCall",
																"src": "7202:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7195:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "6874:373:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6945:5:10",
														"nodeType": "YulTypedName",
														"src": "6945:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6952:3:10",
														"nodeType": "YulTypedName",
														"src": "6952:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6960:3:10",
														"nodeType": "YulTypedName",
														"src": "6960:3:10",
														"type": ""
													}
												],
												"src": "6874:373:10"
											},
											{
												"body": {
													"nativeSrc": "7369:193:10",
													"nodeType": "YulBlock",
													"src": "7369:193:10",
													"statements": [
														{
															"nativeSrc": "7379:26:10",
															"nodeType": "YulAssignment",
															"src": "7379:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7391:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7391:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7402:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7402:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7387:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7387:3:10"
																},
																"nativeSrc": "7387:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7387:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7379:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7379:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7426:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7426:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7437:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7437:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7422:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7422:3:10"
																		},
																		"nativeSrc": "7422:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7422:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7445:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7445:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7451:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7451:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7441:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7441:3:10"
																		},
																		"nativeSrc": "7441:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7441:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7415:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7415:6:10"
																},
																"nativeSrc": "7415:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7415:47:10"
															},
															"nativeSrc": "7415:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7415:47:10"
														},
														{
															"nativeSrc": "7471:84:10",
															"nodeType": "YulAssignment",
															"src": "7471:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7541:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7541:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7550:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7550:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "7479:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "7479:61:10"
																},
																"nativeSrc": "7479:76:10",
																"nodeType": "YulFunctionCall",
																"src": "7479:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7471:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7471:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "7253:309:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7341:9:10",
														"nodeType": "YulTypedName",
														"src": "7341:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7353:6:10",
														"nodeType": "YulTypedName",
														"src": "7353:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7364:4:10",
														"nodeType": "YulTypedName",
														"src": "7364:4:10",
														"type": ""
													}
												],
												"src": "7253:309:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$361_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$361_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$361_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$361__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$361_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"878": [
									{
										"length": 32,
										"start": 1100
									},
									{
										"length": 32,
										"start": 1957
									},
									{
										"length": 32,
										"start": 2289
									}
								],
								"881": [
									{
										"length": 32,
										"start": 1588
									},
									{
										"length": 32,
										"start": 1993
									},
									{
										"length": 32,
										"start": 2942
									}
								],
								"887": [
									{
										"length": 32,
										"start": 3251
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100f2575f3560e01c8063893b7e9511610089578063f2fde38b11610058578063f2fde38b146102c9578063f688bcfb146102f1578063fa56927414610319578063ff50abdc14610343576100f2565b8063893b7e95146102235780638da5cb5b1461024d5780639b900405146102775780639caf34c41461029f576100f2565b8063715018a6116100c5578063715018a61461018f57806371706cbe146101a5578063741bef1a146101cf57806382ee0d1d146101f9576100f2565b80631edc8f03146100f657806327e235e31461011e5780632dfdf0b51461015b578063439370b114610185575b5f5ffd5b348015610101575f5ffd5b5061011c60048036038101906101179190610f17565b61036d565b005b348015610129575f5ffd5b50610144600480360381019061013f9190610f9c565b6105d2565b604051610152929190610fd6565b60405180910390f35b348015610166575f5ffd5b5061016f6105f2565b60405161017c9190610ffd565b60405180910390f35b61018d6105f8565b005b34801561019a575f5ffd5b506101a3610765565b005b3480156101b0575f5ffd5b506101b9610778565b6040516101c69190610ffd565b60405180910390f35b3480156101da575f5ffd5b506101e361077e565b6040516101f09190611071565b60405180910390f35b348015610204575f5ffd5b5061020d6107a3565b60405161021a9190610ffd565b60405180910390f35b34801561022e575f5ffd5b506102376107c7565b6040516102449190610ffd565b60405180910390f35b348015610258575f5ffd5b506102616107eb565b60405161026e9190611099565b60405180910390f35b348015610282575f5ffd5b5061029d60048036038101906102989190610f17565b610812565b005b3480156102aa575f5ffd5b506102b3610a78565b6040516102c09190610ffd565b60405180910390f35b3480156102d4575f5ffd5b506102ef60048036038101906102ea9190610f9c565b610abe565b005b3480156102fc575f5ffd5b5061031760048036038101906103129190610f17565b610b42565b005b348015610324575f5ffd5b5061032d610cb1565b60405161033a91906110d2565b60405180910390f35b34801561034e575f5ffd5b50610357610cd5565b6040516103649190610ffd565b60405180910390f35b60055f9054906101000a900460ff16156103b3576040517f37ed32e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160055f6101000a81548160ff021916908315150217905550805f8103610407576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015490507f00000000000000000000000000000000000000000000000000000000000000008311156104a4576040517f4e6a369600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808311156104de576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82816104ea9190611118565b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055508260025f82825461053e9190611118565b9250508190555060045f8154809291906105579061114b565b91905055506105663384610cdb565b3373ffffffffffffffffffffffffffffffffffffffff167f40953fd5db732b94d86820ccd999bd4ab6da08154a115387891e8957e585fa1d846040516105ac9190610ffd565b60405180910390a250505f60055f6101000a81548160ff02191690831515021790555050565b6006602052805f5260405f205f91509050805f0154908060010154905082565b60035481565b345f8103610632576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000346002546106619190611192565b1115610699576040517f448f3ca800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460025f82825401925050819055503460065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546106f69190611192565b9250508190555060035f81548092919061070f9061114b565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f7034bb05cfe54b0d147fc0574ed166101e7f0313eb404e113974fbe2a998ca833460405161075a9190610ffd565b60405180910390a250565b61076d610d8d565b6107765f610e14565b565b60045481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055f9054906101000a900460ff1615610858576040517f37ed32e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160055f6101000a81548160ff021916908315150217905550805f81036108ac576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015490507f0000000000000000000000000000000000000000000000000000000000000000831115610949576040517f4e6a369600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80831115610983576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828161098f9190611118565b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055508260025f8282546109e49190611118565b9250508190555060045f8154809291906109fd9061114b565b9190505550610a0c3384610ed5565b3373ffffffffffffffffffffffffffffffffffffffff167f736dfcc39d27adad7de37e9a6f1e8252e0953ebf8f582d535672d33f8986738b84604051610a529190610ffd565b60405180910390a250505f60055f6101000a81548160ff02191690831515021790555050565b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154905090565b610ac6610d8d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b36575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b2d9190611099565b60405180910390fd5b610b3f81610e14565b50565b805f8103610b7c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000082600254610bab9190611192565b1115610be3576040517f448f3ca800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160025f82825401925050819055508160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f828254610c419190611192565b9250508190555060035f815480929190610c5a9061114b565b91905055503373ffffffffffffffffffffffffffffffffffffffff167fe7440f6772025dec9be06ba934e6ee5289b73533ee2136ba668f6cb6ea3f56a883604051610ca59190610ffd565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b5f5f8373ffffffffffffffffffffffffffffffffffffffff1683604051610d01906111f2565b5f6040518083038185875af1925050503d805f8114610d3b576040519150601f19603f3d011682016040523d82523d5f602084013e610d40565b606091505b509150915081610d8757806040517f49ba945b000000000000000000000000000000000000000000000000000000008152600401610d7e9190611276565b60405180910390fd5b50505050565b610d95610ed9565b73ffffffffffffffffffffffffffffffffffffffff16610db36107eb565b73ffffffffffffffffffffffffffffffffffffffff1614610e1257610dd6610ed9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e099190611099565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5050565b5f33905090565b5f5ffd5b5f819050919050565b610ef681610ee4565b8114610f00575f5ffd5b50565b5f81359050610f1181610eed565b92915050565b5f60208284031215610f2c57610f2b610ee0565b5b5f610f3984828501610f03565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f6b82610f42565b9050919050565b610f7b81610f61565b8114610f85575f5ffd5b50565b5f81359050610f9681610f72565b92915050565b5f60208284031215610fb157610fb0610ee0565b5b5f610fbe84828501610f88565b91505092915050565b610fd081610ee4565b82525050565b5f604082019050610fe95f830185610fc7565b610ff66020830184610fc7565b9392505050565b5f6020820190506110105f830184610fc7565b92915050565b5f819050919050565b5f61103961103461102f84610f42565b611016565b610f42565b9050919050565b5f61104a8261101f565b9050919050565b5f61105b82611040565b9050919050565b61106b81611051565b82525050565b5f6020820190506110845f830184611062565b92915050565b61109381610f61565b82525050565b5f6020820190506110ac5f83018461108a565b92915050565b5f6110bc82611040565b9050919050565b6110cc816110b2565b82525050565b5f6020820190506110e55f8301846110c3565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61112282610ee4565b915061112d83610ee4565b9250828203905081811115611145576111446110eb565b5b92915050565b5f61115582610ee4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611187576111866110eb565b5b600182019050919050565b5f61119c82610ee4565b91506111a783610ee4565b92508282019050808211156111bf576111be6110eb565b5b92915050565b5f81905092915050565b50565b5f6111dd5f836111c5565b91506111e8826111cf565b5f82019050919050565b5f6111fc826111d2565b9150819050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61124882611206565b6112528185611210565b9350611262818560208601611220565b61126b8161122e565b840191505092915050565b5f6020820190508181035f83015261128e818461123e565b90509291505056fea2646970667358221220731dbcbbe2beb737d4bd6fa5a774cf308b2ad85d7fcdad02d6ef661285d0cdef64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893B7E95 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xF688BCFB EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xFA569274 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xFF50ABDC EQ PUSH2 0x343 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x893B7E95 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x9B900405 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x9CAF34C4 EQ PUSH2 0x29F JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x71706CBE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x82EE0D1D EQ PUSH2 0x1F9 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x1EDC8F03 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2DFDF0B5 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x439370B1 EQ PUSH2 0x185 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP3 SWAP2 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x5F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x765 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x237 PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x261 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0xABE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x357 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH0 DUP2 SUB PUSH2 0x407 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH32 0x0 DUP4 GT ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E6A369600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x1118 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x557 SWAP1 PUSH2 0x114B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x566 CALLER DUP5 PUSH2 0xCDB JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40953FD5DB732B94D86820CCD999BD4AB6DA08154A115387891E8957E585FA1D DUP5 PUSH1 0x40 MLOAD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE PUSH0 DUP2 SUB PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 CALLVALUE PUSH1 0x2 SLOAD PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST GT ISZERO PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH32 0x448F3CA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x70F SWAP1 PUSH2 0x114B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7034BB05CFE54B0D147FC0574ED166101E7F0313EB404E113974FBE2A998CA83 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x75A SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x76D PUSH2 0xD8D JUMP JUMPDEST PUSH2 0x776 PUSH0 PUSH2 0xE14 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH0 DUP2 SUB PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH32 0x0 DUP4 GT ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E6A369600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0x1118 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x9FD SWAP1 PUSH2 0x114B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xA0C CALLER DUP5 PUSH2 0xED5 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x736DFCC39D27ADAD7DE37E9A6F1E8252E0953EBF8F582D535672D33F8986738B DUP5 PUSH1 0x40 MLOAD PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAC6 PUSH2 0xD8D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB3F DUP2 PUSH2 0xE14 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 PUSH1 0x2 SLOAD PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST GT ISZERO PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x448F3CA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC5A SWAP1 PUSH2 0x114B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7440F6772025DEC9BE06BA934E6EE5289B73533EE2136BA668F6CB6EA3F56A8 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xD01 SWAP1 PUSH2 0x11F2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xD87 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x49BA945B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD95 PUSH2 0xED9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDB3 PUSH2 0x7EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE12 JUMPI PUSH2 0xDD6 PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF6 DUP2 PUSH2 0xEE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xF00 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF11 DUP2 PUSH2 0xEED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2B PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF39 DUP5 DUP3 DUP6 ADD PUSH2 0xF03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF6B DUP3 PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7B DUP2 PUSH2 0xF61 JUMP JUMPDEST DUP2 EQ PUSH2 0xF85 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF96 DUP2 PUSH2 0xF72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB1 JUMPI PUSH2 0xFB0 PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFBE DUP5 DUP3 DUP6 ADD PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFD0 DUP2 PUSH2 0xEE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFE9 PUSH0 DUP4 ADD DUP6 PUSH2 0xFC7 JUMP JUMPDEST PUSH2 0xFF6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1010 PUSH0 DUP4 ADD DUP5 PUSH2 0xFC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1039 PUSH2 0x1034 PUSH2 0x102F DUP5 PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x1016 JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x105B DUP3 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106B DUP2 PUSH2 0x1051 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1084 PUSH0 DUP4 ADD DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1093 DUP2 PUSH2 0xF61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AC PUSH0 DUP4 ADD DUP5 PUSH2 0x108A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10BC DUP3 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CC DUP2 PUSH2 0x10B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E5 PUSH0 DUP4 ADD DUP5 PUSH2 0x10C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1122 DUP3 PUSH2 0xEE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x112D DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x10EB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1155 DUP3 PUSH2 0xEE4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1187 JUMPI PUSH2 0x1186 PUSH2 0x10EB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x119C DUP3 PUSH2 0xEE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A7 DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11BF JUMPI PUSH2 0x11BE PUSH2 0x10EB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x11DD PUSH0 DUP4 PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x11E8 DUP3 PUSH2 0x11CF JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11FC DUP3 PUSH2 0x11D2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1248 DUP3 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x1252 DUP2 DUP6 PUSH2 0x1210 JUMP JUMPDEST SWAP4 POP PUSH2 0x1262 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x126B DUP2 PUSH2 0x122E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x128E DUP2 DUP5 PUSH2 0x123E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x1DBCBBE2BEB737D4BD6FA5A774CF308B2AD85D7F 0xCD 0xAD MUL 0xD6 0xEF PUSH7 0x1285D0CDEF6473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "572:9932:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8117:643;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1993:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1489:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6545:627;;;:::i;:::-;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;1592:30:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1187:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1032:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1141:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8772:647:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9535:107;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7180:625:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1232:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1387:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8117:643;4662:6;;;;;;;;;;;4658:34;;;4677:15;;;;;;;;;;;;;;4658:34;4712:4;4703:6;;:13;;;;;;;;;;;;;;;;;;8193:7:::1;4949:1;4938:7;:12:::0;4934:40:::1;;4959:15;;;;;;;;;;;;;;4934:40;8213:19:::2;8235:8;:20;8244:10;8235:20;;;;;;;;;;;;;;;:24;;;8213:46;;8344:16;8334:7;:26;8330:64;;;8369:25;;;;;;;;;;;;;;8330:64;8419:11;8409:7;:21;8405:55;;;8439:21;;;;;;;;;;;;;;8405:55;8542:7;8528:11;:21;;;;:::i;:::-;8501:8;:20;8510:10;8501:20;;;;;;;;;;;;;;;:24;;:48;;;;8578:7;8560:14;;:25;;;;;;;:::i;:::-;;;;;;;;8596:15;;:17;;;;;;;;;:::i;:::-;;;;;;8658:42;8679:10;8692:7;8658:12;:42::i;:::-;8732:10;8718:34;;;8744:7;8718:34;;;;;;:::i;:::-;;;;;;;;8202:558;4727:1:::1;4748:5:::0;4739:6;;:14;;;;;;;;;;;;;;;;;;8117:643;:::o;1993:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1489:27::-;;;;:::o;6545:627::-;6598:9;4949:1;4938:7;:12;4934:40;;4959:15;;;;;;;;;;;;;;4934:40;6761:12:::1;6749:9;6732:14;;:26;;;;:::i;:::-;:41;6728:71;;;6782:17;;;;;;;;;;;;;;6728:71;6961:9;6943:14;;:27;;;;;;;;;;;7020:9;6992:8;:20;7001:10;6992:20;;;;;;;;;;;;;;;:24;;;:37;;;;;;;:::i;:::-;;;;;;;;7040:12;;:14;;;;;;;;;:::i;:::-;;;;;;7142:10;7131:33;;;7154:9;7131:33;;;;;;:::i;:::-;;;;;;;;6545:627:::0;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1592:30:9:-;;;;:::o;1187:38::-;;;;;;;;;;;;;:::o;1032:41::-;;;:::o;1141:37::-;;;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;8772:647:9:-;4662:6;;;;;;;;;;;4658:34;;;4677:15;;;;;;;;;;;;;;4658:34;4712:4;4703:6;;:13;;;;;;;;;;;;;;;;;;8849:7:::1;4949:1;4938:7;:12:::0;4934:40:::1;;4959:15;;;;;;;;;;;;;;4934:40;8869:19:::2;8891:8;:20;8900:10;8891:20;;;;;;;;;;;;;;;:24;;;8869:46;;9000:16;8990:7;:26;8986:64;;;9025:25;;;;;;;;;;;;;;8986:64;9075:11;9065:7;:21;9061:55;;;9095:21;;;;;;;;;;;;;;9061:55;9199:7;9185:11;:21;;;;:::i;:::-;9157:8;:20;9166:10;9157:20;;;;;;;;;;;;;;;:25;;:49;;;;9235:7;9217:14;;:25;;;;;;;:::i;:::-;;;;;;;;9253:15;;:17;;;;;;;;;:::i;:::-;;;;;;9315:43;9337:10;9350:7;9315:13;:43::i;:::-;9391:10;9376:35;;;9403:7;9376:35;;;;;;:::i;:::-;;;;;;;;8858:561;4727:1:::1;4748:5:::0;4739:6;;:14;;;;;;;;;;;;;;;;;;8772:647;:::o;9535:107::-;9583:7;9610:8;:20;9619:10;9610:20;;;;;;;;;;;;;;;:24;;;9603:31;;9535:107;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;7180:625:9:-;7241:7;4949:1;4938:7;:12;4934:40;;4959:15;;;;;;;;;;;;;;4934:40;7400:12:::1;7390:7;7373:14;;:24;;;;:::i;:::-;:39;7369:69;;;7421:17;;;;;;;;;;;;;;7369:69;7600:7;7582:14;;:25;;;;;;;;;;;7658:7;7629:8;:20;7638:10;7629:20;;;;;;;;;;;;;;;:25;;;:36;;;;;;;:::i;:::-;;;;;;;;7676:12;;:14;;;;;;;;;:::i;:::-;;;;;;7777:10;7765:32;;;7789:7;7765:32;;;;;;:::i;:::-;;;;;;;;7180:625:::0;;:::o;1232:34::-;;;:::o;1387:29::-;;;;:::o;10171:241::-;10251:12;10265:22;10291:3;:8;;10307:7;10291:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10250:69;;;;10335:7;10330:75;;10383:9;10366:27;;;;;;;;;;;:::i;:::-;;;;;;;;10330:75;10239:173;;10171:241;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;10420:77:9:-;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:10:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:332::-;2112:4;2150:2;2139:9;2135:18;2127:26;;2163:71;2231:1;2220:9;2216:17;2207:6;2163:71;:::i;:::-;2244:72;2312:2;2301:9;2297:18;2288:6;2244:72;:::i;:::-;1991:332;;;;;:::o;2329:222::-;2422:4;2460:2;2449:9;2445:18;2437:26;;2473:71;2541:1;2530:9;2526:17;2517:6;2473:71;:::i;:::-;2329:222;;;;:::o;2557:60::-;2585:3;2606:5;2599:12;;2557:60;;;:::o;2623:142::-;2673:9;2706:53;2724:34;2733:24;2751:5;2733:24;:::i;:::-;2724:34;:::i;:::-;2706:53;:::i;:::-;2693:66;;2623:142;;;:::o;2771:126::-;2821:9;2854:37;2885:5;2854:37;:::i;:::-;2841:50;;2771:126;;;:::o;2903:154::-;2981:9;3014:37;3045:5;3014:37;:::i;:::-;3001:50;;2903:154;;;:::o;3063:187::-;3178:65;3237:5;3178:65;:::i;:::-;3173:3;3166:78;3063:187;;:::o;3256:278::-;3377:4;3415:2;3404:9;3400:18;3392:26;;3428:99;3524:1;3513:9;3509:17;3500:6;3428:99;:::i;:::-;3256:278;;;;:::o;3540:118::-;3627:24;3645:5;3627:24;:::i;:::-;3622:3;3615:37;3540:118;;:::o;3664:222::-;3757:4;3795:2;3784:9;3780:18;3772:26;;3808:71;3876:1;3865:9;3861:17;3852:6;3808:71;:::i;:::-;3664:222;;;;:::o;3892:140::-;3956:9;3989:37;4020:5;3989:37;:::i;:::-;3976:50;;3892:140;;;:::o;4038:159::-;4139:51;4184:5;4139:51;:::i;:::-;4134:3;4127:64;4038:159;;:::o;4203:250::-;4310:4;4348:2;4337:9;4333:18;4325:26;;4361:85;4443:1;4432:9;4428:17;4419:6;4361:85;:::i;:::-;4203:250;;;;:::o;4459:180::-;4507:77;4504:1;4497:88;4604:4;4601:1;4594:15;4628:4;4625:1;4618:15;4645:194;4685:4;4705:20;4723:1;4705:20;:::i;:::-;4700:25;;4739:20;4757:1;4739:20;:::i;:::-;4734:25;;4783:1;4780;4776:9;4768:17;;4807:1;4801:4;4798:11;4795:37;;;4812:18;;:::i;:::-;4795:37;4645:194;;;;:::o;4845:233::-;4884:3;4907:24;4925:5;4907:24;:::i;:::-;4898:33;;4953:66;4946:5;4943:77;4940:103;;5023:18;;:::i;:::-;4940:103;5070:1;5063:5;5059:13;5052:20;;4845:233;;;:::o;5084:191::-;5124:3;5143:20;5161:1;5143:20;:::i;:::-;5138:25;;5177:20;5195:1;5177:20;:::i;:::-;5172:25;;5220:1;5217;5213:9;5206:16;;5241:3;5238:1;5235:10;5232:36;;;5248:18;;:::i;:::-;5232:36;5084:191;;;;:::o;5281:147::-;5382:11;5419:3;5404:18;;5281:147;;;;:::o;5434:114::-;;:::o;5554:398::-;5713:3;5734:83;5815:1;5810:3;5734:83;:::i;:::-;5727:90;;5826:93;5915:3;5826:93;:::i;:::-;5944:1;5939:3;5935:11;5928:18;;5554:398;;;:::o;5958:379::-;6142:3;6164:147;6307:3;6164:147;:::i;:::-;6157:154;;6328:3;6321:10;;5958:379;;;:::o;6343:98::-;6394:6;6428:5;6422:12;6412:22;;6343:98;;;:::o;6447:168::-;6530:11;6564:6;6559:3;6552:19;6604:4;6599:3;6595:14;6580:29;;6447:168;;;;:::o;6621:139::-;6710:6;6705:3;6700;6694:23;6751:1;6742:6;6737:3;6733:16;6726:27;6621:139;;;:::o;6766:102::-;6807:6;6858:2;6854:7;6849:2;6842:5;6838:14;6834:28;6824:38;;6766:102;;;:::o;6874:373::-;6960:3;6988:38;7020:5;6988:38;:::i;:::-;7042:70;7105:6;7100:3;7042:70;:::i;:::-;7035:77;;7121:65;7179:6;7174:3;7167:4;7160:5;7156:16;7121:65;:::i;:::-;7211:29;7233:6;7211:29;:::i;:::-;7206:3;7202:39;7195:46;;6964:283;6874:373;;;;:::o;7253:309::-;7364:4;7402:2;7391:9;7387:18;7379:26;;7451:9;7445:4;7441:20;7437:1;7426:9;7422:17;7415:47;7479:76;7550:4;7541:6;7479:76;:::i;:::-;7471:84;;7253:309;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "962400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BANK_CAP_USD()": "infinite",
								"USDC_TOKEN()": "infinite",
								"WITHDRAWAL_LIMIT()": "infinite",
								"balances(address)": "infinite",
								"depositCount()": "2493",
								"depositEth()": "infinite",
								"depositUSDC(uint256)": "infinite",
								"getBalanceEth()": "2613",
								"owner()": "2559",
								"priceFeed()": "infinite",
								"renounceOwnership()": "infinite",
								"totalDeposited()": "2513",
								"transferOwnership(address)": "infinite",
								"withdrawalCount()": "2470",
								"withdrawalEth(uint256)": "infinite",
								"withdrawalUSDC(uint256)": "infinite"
							},
							"internal": {
								"_transferEth(address payable,uint256)": "infinite",
								"_transferUSDC(address payable,uint256)": "13"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 5622,
									"end": 5987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5751,
									"end": 5761,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5808,
									"end": 5825,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5783,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5774,
									"end": 5783,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 5826,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5857,
									"end": 5874,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5837,
									"end": 5875,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5837,
									"end": 5875,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5837,
									"end": 5875,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 5837,
									"end": 5875,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5837,
									"end": 5875,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5837,
									"end": 5875,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5837,
									"end": 5875,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5837,
									"end": 5875,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5837,
									"end": 5875,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5837,
									"end": 5875,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5973,
									"end": 5978,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "5F5E100"
								},
								{
									"begin": 5958,
									"end": 5969,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5958,
									"end": 5979,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 5958,
									"end": 5979,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5958,
									"end": 5979,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5958,
									"end": 5979,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 5958,
									"end": 5979,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5958,
									"end": 5979,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 5958,
									"end": 5979,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5943,
									"end": 5979,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 5943,
									"end": 5979,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5943,
									"end": 5979,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5943,
									"end": 5979,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5943,
									"end": 5979,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5943,
									"end": 5979,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5987,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1979,
									"end": 1984,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1961,
									"end": 1985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1986,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2118,
									"end": 2127,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2208,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2195,
									"end": 2212,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2142,
									"end": 2213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2406,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2226,
									"end": 2406,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2274,
									"end": 2351,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2271,
									"end": 2272,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2264,
									"end": 2352,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2371,
									"end": 2375,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2368,
									"end": 2369,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2361,
									"end": 2376,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2395,
									"end": 2399,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2392,
									"end": 2393,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2385,
									"end": 2400,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2412,
									"end": 2822,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2412,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2452,
									"end": 2459,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2475,
									"end": 2495,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 2493,
									"end": 2494,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2475,
									"end": 2495,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2475,
									"end": 2495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2475,
									"end": 2495,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 2475,
									"end": 2495,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 2495,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 2495,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2529,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2527,
									"end": 2528,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2529,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2509,
									"end": 2529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2529,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2509,
									"end": 2529,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2504,
									"end": 2529,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2504,
									"end": 2529,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2564,
									"end": 2565,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2561,
									"end": 2562,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2557,
									"end": 2566,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2586,
									"end": 2616,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2604,
									"end": 2615,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2586,
									"end": 2616,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2586,
									"end": 2616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2586,
									"end": 2616,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2586,
									"end": 2616,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2616,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2616,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2756,
									"end": 2763,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2752,
									"end": 2767,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 2749,
									"end": 2750,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2746,
									"end": 2768,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2726,
									"end": 2727,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2719,
									"end": 2728,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2699,
									"end": 2782,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2676,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2676,
									"end": 2815,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2795,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2795,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2795,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2795,
									"end": 2813,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2795,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2676,
									"end": 2815,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2676,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2460,
									"end": 2822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2412,
									"end": 2822,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2412,
									"end": 2822,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2412,
									"end": 2822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2412,
									"end": 2822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2412,
									"end": 2822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "887"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "881"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "878"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 572,
									"end": 10504,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220731dbcbbe2beb737d4bd6fa5a774cf308b2ad85d7fcdad02d6ef661285d0cdef64736f6c634300081b0033",
									".code": [
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "893B7E95"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "F688BCFB"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "FA569274"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "FF50ABDC"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "893B7E95"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "9B900405"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "9CAF34C4"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "71706CBE"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "741BEF1A"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "82EE0D1D"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "1EDC8F03"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "27E235E3"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "2DFDF0B5"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "439370B1"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 10504,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8117,
											"end": 8760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 8117,
											"end": 8760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1489,
											"end": 1516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1489,
											"end": 1516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6545,
											"end": 7172,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6545,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6545,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 6545,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 6545,
											"end": 7172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6545,
											"end": 7172,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 6545,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6545,
											"end": 7172,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1592,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1592,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1187,
											"end": 1225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1187,
											"end": 1225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1032,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1032,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1141,
											"end": 1178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1141,
											"end": 1178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8772,
											"end": 9419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 8772,
											"end": 9419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 9535,
											"end": 9642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 9535,
											"end": 9642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7180,
											"end": 7805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7180,
											"end": 7805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1232,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1232,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1387,
											"end": 1416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1387,
											"end": 1416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4692,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 4658,
											"end": 4692,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "PUSH",
											"source": 9,
											"value": "37ED32E800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4692,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 4658,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4716,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4703,
											"end": 4709,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4703,
											"end": 4709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8193,
											"end": 8200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 4950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 4950,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 4934,
											"end": 4974,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 4934,
											"end": 4974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8232,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8243,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8244,
											"end": 8254,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8255,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8259,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8259,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8259,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8259,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8259,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8344,
											"end": 8360,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "878"
										},
										{
											"begin": 8334,
											"end": 8341,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8334,
											"end": 8360,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8394,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8394,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 8330,
											"end": 8394,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4E6A369600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8394,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 8330,
											"end": 8394,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8419,
											"end": 8430,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8409,
											"end": 8416,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8409,
											"end": 8430,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 8460,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 8460,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 8405,
											"end": 8460,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "F4D678B800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8460,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 8460,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 8405,
											"end": 8460,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8549,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8528,
											"end": 8539,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8528,
											"end": 8549,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 8528,
											"end": 8549,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8528,
											"end": 8549,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8528,
											"end": 8549,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 8528,
											"end": 8549,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8528,
											"end": 8549,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 8528,
											"end": 8549,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8510,
											"end": 8520,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8501,
											"end": 8521,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8501,
											"end": 8525,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8549,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8549,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8549,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8549,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8578,
											"end": 8585,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8574,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8560,
											"end": 8574,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 8560,
											"end": 8585,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8611,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8596,
											"end": 8611,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 8596,
											"end": 8613,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8613,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8658,
											"end": 8700,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 8679,
											"end": 8689,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8692,
											"end": 8699,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8658,
											"end": 8670,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 8658,
											"end": 8700,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8658,
											"end": 8700,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 8658,
											"end": 8700,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8742,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40953FD5DB732B94D86820CCD999BD4AB6DA08154A115387891E8957E585FA1D"
										},
										{
											"begin": 8744,
											"end": 8751,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 8718,
											"end": 8752,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8752,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 8202,
											"end": 8760,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4727,
											"end": 4728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4745,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4739,
											"end": 4745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6545,
											"end": 7172,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 6545,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6598,
											"end": 6607,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 4950,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4934,
											"end": 4974,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "PUSH",
											"source": 9,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4974,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4934,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6761,
											"end": 6773,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "881"
										},
										{
											"begin": 6749,
											"end": 6758,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6732,
											"end": 6746,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 6732,
											"end": 6758,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 6732,
											"end": 6758,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 6732,
											"end": 6758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6773,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6728,
											"end": 6799,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6728,
											"end": 6799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 6728,
											"end": 6799,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "448F3CA800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6799,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6728,
											"end": 6799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 6728,
											"end": 6799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6961,
											"end": 6970,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6943,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 6970,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6970,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6970,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6970,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6970,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6970,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6970,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6970,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6970,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7020,
											"end": 7029,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7011,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7012,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7016,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 6992,
											"end": 7029,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6992,
											"end": 7029,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7040,
											"end": 7052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7040,
											"end": 7054,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7054,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7142,
											"end": 7152,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7034BB05CFE54B0D147FC0574ED166101E7F0313EB404E113974FBE2A998CA83"
										},
										{
											"begin": 7154,
											"end": 7163,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 7131,
											"end": 7164,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7164,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6545,
											"end": 7172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6545,
											"end": 7172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "878"
										},
										{
											"begin": 1032,
											"end": 1073,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "881"
										},
										{
											"begin": 1141,
											"end": 1178,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4692,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4658,
											"end": 4692,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "PUSH",
											"source": 9,
											"value": "37ED32E800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4692,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4658,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4716,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4703,
											"end": 4709,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4703,
											"end": 4709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8849,
											"end": 8856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 4950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 4950,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4934,
											"end": 4974,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4934,
											"end": 4974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 8888,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8891,
											"end": 8899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8910,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8891,
											"end": 8911,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8891,
											"end": 8915,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8915,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 8915,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 8915,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9000,
											"end": 9016,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "878"
										},
										{
											"begin": 8990,
											"end": 8997,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8990,
											"end": 9016,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9050,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9050,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 8986,
											"end": 9050,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4E6A369600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9050,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9050,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 8986,
											"end": 9050,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9075,
											"end": 9086,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9072,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9086,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9116,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9116,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9061,
											"end": 9116,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "F4D678B800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9116,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9116,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9061,
											"end": 9116,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9206,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9196,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9206,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 9185,
											"end": 9206,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9206,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9206,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 9185,
											"end": 9206,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9206,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 9185,
											"end": 9206,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9165,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9176,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9157,
											"end": 9177,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9182,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9157,
											"end": 9182,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9206,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9206,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9206,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9206,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9235,
											"end": 9242,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9217,
											"end": 9231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 9217,
											"end": 9242,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9217,
											"end": 9242,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9268,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9253,
											"end": 9268,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 9253,
											"end": 9270,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9270,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 9337,
											"end": 9347,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9350,
											"end": 9357,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9315,
											"end": 9328,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 9315,
											"end": 9358,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9401,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "736DFCC39D27ADAD7DE37E9A6F1E8252E0953EBF8F582D535672D33F8986738B"
										},
										{
											"begin": 9403,
											"end": 9410,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 9376,
											"end": 9411,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9411,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 8858,
											"end": 9419,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4727,
											"end": 4728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4745,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4739,
											"end": 4745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 9419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9583,
											"end": 9590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9618,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9619,
											"end": 9629,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9634,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9603,
											"end": 9634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9603,
											"end": 9634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7241,
											"end": 7248,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 4950,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4934,
											"end": 4974,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "PUSH",
											"source": 9,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4974,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4934,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7400,
											"end": 7412,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "881"
										},
										{
											"begin": 7390,
											"end": 7397,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7373,
											"end": 7387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7373,
											"end": 7387,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7373,
											"end": 7397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 7373,
											"end": 7397,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7373,
											"end": 7397,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7373,
											"end": 7397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 7373,
											"end": 7397,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7373,
											"end": 7397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 7373,
											"end": 7397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7373,
											"end": 7412,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7369,
											"end": 7438,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7369,
											"end": 7438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 7369,
											"end": 7438,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "448F3CA800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7438,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7369,
											"end": 7438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 7369,
											"end": 7438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7582,
											"end": 7596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7607,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7607,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7607,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7582,
											"end": 7607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7658,
											"end": 7665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7638,
											"end": 7648,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7649,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7629,
											"end": 7654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 7629,
											"end": 7665,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7665,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7676,
											"end": 7688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7676,
											"end": 7690,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7690,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7777,
											"end": 7787,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E7440F6772025DEC9BE06BA934E6EE5289B73533EE2136BA668F6CB6EA3F56A8"
										},
										{
											"begin": 7789,
											"end": 7796,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 7765,
											"end": 7797,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7797,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "887"
										},
										{
											"begin": 1232,
											"end": 1266,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10412,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 10171,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10251,
											"end": 10263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10265,
											"end": 10287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10291,
											"end": 10294,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10307,
											"end": 10314,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 10291,
											"end": 10319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10250,
											"end": 10319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10250,
											"end": 10319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10250,
											"end": 10319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10250,
											"end": 10319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10330,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10330,
											"end": 10405,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10383,
											"end": 10392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "PUSH",
											"source": 9,
											"value": "49BA945B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 10366,
											"end": 10393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10393,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10330,
											"end": 10405,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10330,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10497,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 10420,
											"end": 10497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1638,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1646,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1791,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1737,
											"end": 1854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1954,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 1979,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2148,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2127,
											"end": 2153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2127,
											"end": 2153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2229,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2207,
											"end": 2213,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2163,
											"end": 2234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2234,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2163,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2244,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2316,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2244,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2437,
											"end": 2463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2437,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2541,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2473,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2588,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2557,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2751,
											"end": 2756,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 2733,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2724,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 2706,
											"end": 2759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2759,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2759,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2885,
											"end": 2890,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2854,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 3057,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2903,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2981,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3045,
											"end": 3050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3014,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3001,
											"end": 3051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3001,
											"end": 3051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 3057,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 3057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 3057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 3057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3250,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3063,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3178,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3243,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3178,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3176,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3166,
											"end": 3244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3534,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3256,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3417,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3413,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3392,
											"end": 3418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3392,
											"end": 3418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3524,
											"end": 3525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3522,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3526,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3428,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3527,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3428,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3534,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3658,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 3540,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 3645,
											"end": 3650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3627,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3651,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 3627,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3625,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3615,
											"end": 3652,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3886,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3664,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3797,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3793,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3780,
											"end": 3798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3874,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3852,
											"end": 3858,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 3808,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3879,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 3808,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3886,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3886,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 4032,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3892,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 3965,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 4020,
											"end": 4025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3989,
											"end": 4026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 4026,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3989,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 4032,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 4032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 4032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 4032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4197,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4038,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 4184,
											"end": 4189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4139,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4190,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 4139,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4453,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 4203,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4310,
											"end": 4314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4350,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4337,
											"end": 4346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4325,
											"end": 4351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4325,
											"end": 4351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4361,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 4443,
											"end": 4444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4428,
											"end": 4445,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4419,
											"end": 4425,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4361,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4361,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4361,
											"end": 4446,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 4361,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4453,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4639,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4459,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4584,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4504,
											"end": 4505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4497,
											"end": 4585,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4604,
											"end": 4608,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 4601,
											"end": 4602,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4594,
											"end": 4609,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4625,
											"end": 4626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4839,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 4645,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4685,
											"end": 4689,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4705,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4705,
											"end": 4725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4725,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4705,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4725,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4739,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4739,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4739,
											"end": 4759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4739,
											"end": 4759,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 4739,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4759,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4759,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4783,
											"end": 4784,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4785,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4807,
											"end": 4808,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4801,
											"end": 4805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4809,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4832,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 4795,
											"end": 4832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4812,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4832,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 4795,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4839,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4845,
											"end": 5078,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4845,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4884,
											"end": 4887,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4925,
											"end": 4930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4907,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 4931,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 4931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 5019,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4946,
											"end": 4951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4943,
											"end": 5020,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 4940,
											"end": 5043,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5023,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 5023,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 5023,
											"end": 5041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5023,
											"end": 5041,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 5023,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 5043,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 4940,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5070,
											"end": 5071,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5063,
											"end": 5068,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4845,
											"end": 5078,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4845,
											"end": 5078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4845,
											"end": 5078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4845,
											"end": 5078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5275,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 5084,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5124,
											"end": 5127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5143,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5143,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5143,
											"end": 5163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5143,
											"end": 5163,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 5143,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5138,
											"end": 5163,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5138,
											"end": 5163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 5195,
											"end": 5196,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5177,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5197,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 5177,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5172,
											"end": 5197,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5172,
											"end": 5197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5221,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5217,
											"end": 5218,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5222,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5244,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5239,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5245,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5268,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 5232,
											"end": 5268,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 5248,
											"end": 5266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5268,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 5232,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5275,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5428,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5281,
											"end": 5428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5422,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5428,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5428,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5548,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 5434,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5554,
											"end": 5952,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 5554,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 5716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5734,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5815,
											"end": 5816,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5810,
											"end": 5813,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5734,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5817,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5734,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5727,
											"end": 5817,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5727,
											"end": 5817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5826,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5915,
											"end": 5918,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5826,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 5826,
											"end": 5919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5826,
											"end": 5919,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5826,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5944,
											"end": 5945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5554,
											"end": 5952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5554,
											"end": 5952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5554,
											"end": 5952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5554,
											"end": 5952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 6337,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5958,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6142,
											"end": 6145,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6307,
											"end": 6310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6164,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 6164,
											"end": 6311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6164,
											"end": 6311,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6164,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6157,
											"end": 6311,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6157,
											"end": 6311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6331,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 6337,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 6337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 6337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 6337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6343,
											"end": 6441,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6343,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6422,
											"end": 6434,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6412,
											"end": 6434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6412,
											"end": 6434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6343,
											"end": 6441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6343,
											"end": 6441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6343,
											"end": 6441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6343,
											"end": 6441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6447,
											"end": 6615,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 6447,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6530,
											"end": 6541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6564,
											"end": 6570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6559,
											"end": 6562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6552,
											"end": 6571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6604,
											"end": 6608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6595,
											"end": 6609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6580,
											"end": 6609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6580,
											"end": 6609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6447,
											"end": 6615,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6447,
											"end": 6615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6447,
											"end": 6615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6447,
											"end": 6615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6447,
											"end": 6615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6621,
											"end": 6760,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 6621,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6710,
											"end": 6716,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6717,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 6751,
											"end": 6752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6742,
											"end": 6748,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6737,
											"end": 6740,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6753,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6621,
											"end": 6760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6621,
											"end": 6760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6621,
											"end": 6760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6621,
											"end": 6760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6766,
											"end": 6868,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 6766,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6807,
											"end": 6813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6858,
											"end": 6860,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6854,
											"end": 6861,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6849,
											"end": 6851,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6842,
											"end": 6847,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 6852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6834,
											"end": 6862,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6824,
											"end": 6862,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6824,
											"end": 6862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6766,
											"end": 6868,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6766,
											"end": 6868,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6766,
											"end": 6868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6766,
											"end": 6868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 7247,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 6874,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 6963,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6988,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 7020,
											"end": 7025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6988,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6988,
											"end": 7026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6988,
											"end": 7026,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 6988,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7042,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 7105,
											"end": 7111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7100,
											"end": 7103,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7042,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 7042,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7042,
											"end": 7112,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 7042,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7035,
											"end": 7112,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7035,
											"end": 7112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 7179,
											"end": 7185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7174,
											"end": 7177,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7171,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7160,
											"end": 7165,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7156,
											"end": 7172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 7121,
											"end": 7186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7186,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 7121,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7211,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 7233,
											"end": 7239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7211,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 7211,
											"end": 7240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7211,
											"end": 7240,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 7211,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7202,
											"end": 7241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7195,
											"end": 7241,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7195,
											"end": 7241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6964,
											"end": 7247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 7247,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 7247,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 7247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 7247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 7247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7253,
											"end": 7562,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 7253,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7364,
											"end": 7368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7404,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7391,
											"end": 7400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7379,
											"end": 7405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7379,
											"end": 7405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7437,
											"end": 7438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7426,
											"end": 7435,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7462,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7479,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7550,
											"end": 7554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7479,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 7479,
											"end": 7555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7479,
											"end": 7555,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7479,
											"end": 7555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7253,
											"end": 7562,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7253,
											"end": 7562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7253,
											"end": 7562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7253,
											"end": 7562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7253,
											"end": 7562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/KipuBankV21.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BANK_CAP_USD()": "893b7e95",
							"USDC_TOKEN()": "fa569274",
							"WITHDRAWAL_LIMIT()": "82ee0d1d",
							"balances(address)": "27e235e3",
							"depositCount()": "2dfdf0b5",
							"depositEth()": "439370b1",
							"depositUSDC(uint256)": "f688bcfb",
							"getBalanceEth()": "9caf34c4",
							"owner()": "8da5cb5b",
							"priceFeed()": "741bef1a",
							"renounceOwnership()": "715018a6",
							"totalDeposited()": "ff50abdc",
							"transferOwnership(address)": "f2fde38b",
							"withdrawalCount()": "71706cbe",
							"withdrawalEth(uint256)": "1edc8f03",
							"withdrawalUSDC(uint256)": "9b900405"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bankCapUSD\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BankCapExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"errorData\",\"type\":\"bytes\"}],\"name\":\"WithdrawalFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalLimitExceeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositUSDC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalUSDC\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BANK_CAP_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWAL_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdc\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawalEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawalUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"WithdrawalFailed(bytes)\":[{\"params\":{\"errorData\":\"The data returned by the failed call.\"}}]},\"events\":{\"DepositEth(address,uint256)\":{\"params\":{\"amount\":\"The amount deposited in wei.\",\"user\":\"The address of the user who deposited.\"}},\"DepositUSDC(address,uint256)\":{\"params\":{\"amount\":\"The amount deposited in USDC.\",\"user\":\"The address of the user who deposited.\"}},\"WithdrawalEth(address,uint256)\":{\"params\":{\"amount\":\"The amount withdrawn in wei.\",\"user\":\"The address of the user who withdrew.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_bankCapUSD\":\"The total deposit cap for ETH, in whole USD (e.g., 10000 for $10,000).\",\"_priceFeedAddress\":\"The Chainlink ETH/USD price feed address.\",\"_usdcTokenAddress\":\"The address of the USDC token contract.\"}},\"depositEth()\":{\"details\":\"Reverts if the amount is zero or if the deposit would exceed the global bank cap.Follows the checks-effects-interactions pattern.\"},\"getBalanceEth()\":{\"returns\":{\"_0\":\"The balance in wei.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawalEth(uint256)\":{\"details\":\"Reverts if the amount is zero, exceeds the withdrawal limit, or if the user has insufficient balance.Follows the checks-effects-interactions pattern.\",\"params\":{\"_amount\":\"The amount to withdraw in wei.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"BankCapExceeded()\":[{\"notice\":\"Error thrown when the total deposits would exceed the bank's global cap.\"}],\"InsufficientBalance()\":[{\"notice\":\"Error thrown when a user tries to withdraw more than their balance.\"}],\"InvalidAmount()\":[{\"notice\":\"Error thrown when the provided amount is invalid (e.g., 0).\"}],\"ReentrantCall()\":[{\"notice\":\"Error for reentrancy guard, thrown when a reentrant call is detected.\"}],\"WithdrawalFailed(bytes)\":[{\"notice\":\"Error thrown when a withdrawal transfer fails.\"}],\"WithdrawalLimitExceeded()\":[{\"notice\":\"Error thrown when a withdrawal amount exceeds the per-transaction limit.\"}]},\"events\":{\"DepositEth(address,uint256)\":{\"notice\":\"Emitted when a user deposits ETH.\"},\"DepositUSDC(address,uint256)\":{\"notice\":\"Emitted when a user deposits USDC.\"},\"WithdrawalEth(address,uint256)\":{\"notice\":\"Emitted when a user withdraws ETH.\"}},\"kind\":\"user\",\"methods\":{\"BANK_CAP_USD()\":{\"notice\":\"The global deposit cap for the entire bank.\"},\"WITHDRAWAL_LIMIT()\":{\"notice\":\"The per-transaction withdrawal limit.\"},\"balances(address)\":{\"notice\":\"Mapping from address to user balance.\"},\"constructor\":{\"notice\":\"Initializes the contract.\"},\"depositCount()\":{\"notice\":\"A counter for the total number of deposits made.\"},\"depositEth()\":{\"notice\":\"Deposits ETH into the user's balance.\"},\"getBalanceEth()\":{\"notice\":\"Gets the balance of the message sender.\"},\"totalDeposited()\":{\"notice\":\"The total amount of ETH currently deposited in the contract.\"},\"withdrawalCount()\":{\"notice\":\"A counter for the total number of withdrawals made.\"},\"withdrawalEth(uint256)\":{\"notice\":\"Withdraws ETH from the user's balance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/KipuBankV21.sol\":\"KipuBank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/KipuBankV21.sol\":{\"keccak256\":\"0x9ae03a1e572a254cee6091386bece3a8380baeb4480b5ecd48c6b3d913f9efc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://555fe0e95aace70900b5931fe8bf1fb1bcd1c0d63131b991eced2d50628adc3f\",\"dweb:/ipfs/QmRwqaR2w29dZQAbLanAiAVgTDTaGLH8H4y7w4kNgY4soQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "src/KipuBankV21.sol:KipuBank",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 884,
								"contract": "src/KipuBankV21.sol:KipuBank",
								"label": "priceFeed",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 890,
								"contract": "src/KipuBankV21.sol:KipuBank",
								"label": "totalDeposited",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 893,
								"contract": "src/KipuBankV21.sol:KipuBank",
								"label": "depositCount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 896,
								"contract": "src/KipuBankV21.sol:KipuBank",
								"label": "withdrawalCount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 899,
								"contract": "src/KipuBankV21.sol:KipuBank",
								"label": "locked",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 910,
								"contract": "src/KipuBankV21.sol:KipuBank",
								"label": "balances",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Balances)904_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Balances)904_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct KipuBank.Balances)",
								"numberOfBytes": "32",
								"value": "t_struct(Balances)904_storage"
							},
							"t_struct(Balances)904_storage": {
								"encoding": "inplace",
								"label": "struct KipuBank.Balances",
								"members": [
									{
										"astId": 901,
										"contract": "src/KipuBankV21.sol:KipuBank",
										"label": "eth",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 903,
										"contract": "src/KipuBankV21.sol:KipuBank",
										"label": "usdc",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"BankCapExceeded()": [
								{
									"notice": "Error thrown when the total deposits would exceed the bank's global cap."
								}
							],
							"InsufficientBalance()": [
								{
									"notice": "Error thrown when a user tries to withdraw more than their balance."
								}
							],
							"InvalidAmount()": [
								{
									"notice": "Error thrown when the provided amount is invalid (e.g., 0)."
								}
							],
							"ReentrantCall()": [
								{
									"notice": "Error for reentrancy guard, thrown when a reentrant call is detected."
								}
							],
							"WithdrawalFailed(bytes)": [
								{
									"notice": "Error thrown when a withdrawal transfer fails."
								}
							],
							"WithdrawalLimitExceeded()": [
								{
									"notice": "Error thrown when a withdrawal amount exceeds the per-transaction limit."
								}
							]
						},
						"events": {
							"DepositEth(address,uint256)": {
								"notice": "Emitted when a user deposits ETH."
							},
							"DepositUSDC(address,uint256)": {
								"notice": "Emitted when a user deposits USDC."
							},
							"WithdrawalEth(address,uint256)": {
								"notice": "Emitted when a user withdraws ETH."
							}
						},
						"kind": "user",
						"methods": {
							"BANK_CAP_USD()": {
								"notice": "The global deposit cap for the entire bank."
							},
							"WITHDRAWAL_LIMIT()": {
								"notice": "The per-transaction withdrawal limit."
							},
							"balances(address)": {
								"notice": "Mapping from address to user balance."
							},
							"constructor": {
								"notice": "Initializes the contract."
							},
							"depositCount()": {
								"notice": "A counter for the total number of deposits made."
							},
							"depositEth()": {
								"notice": "Deposits ETH into the user's balance."
							},
							"getBalanceEth()": {
								"notice": "Gets the balance of the message sender."
							},
							"totalDeposited()": {
								"notice": "The total amount of ETH currently deposited in the contract."
							},
							"withdrawalCount()": {
								"notice": "A counter for the total number of withdrawals made."
							},
							"withdrawalEth(uint256)": {
								"notice": "Withdraws ETH from the user's balance."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							855
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 856,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 855,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 855,
										"src": "692:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								855
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 193,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 193,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 193,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 193,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 193,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 193,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "663:2438:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC165": [
							867
						],
						"IERC20": [
							361
						]
					},
					"id": 276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 284,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 196,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 280,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 198,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 867,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 201,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 361,
										"src": "590:6:2"
									},
									"id": 202,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 203,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 867,
										"src": "598:7:2"
									},
									"id": 204,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 200,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 275,
							"linearizedBaseContracts": [
								275,
								867,
								361
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 275,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 275,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 275,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 275,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 275,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 275,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 276,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								304
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							867
						]
					},
					"id": 280,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 277,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 280,
							"sourceUnit": 868,
							"src": "133:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 278,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 867,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							361
						]
					},
					"id": 284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 281,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 284,
							"sourceUnit": 362,
							"src": "132:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 282,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "140:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							361
						]
					},
					"id": 362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 285,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 361,
							"linearizedBaseContracts": [
								361
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 295,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 304,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 361,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 361,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 361,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 361,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 361,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 361,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 362,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								295,
								304
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC20": [
							361
						],
						"SafeERC20": [
							825
						]
					},
					"id": 826,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 826,
							"sourceUnit": 362,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 364,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 826,
							"sourceUnit": 276,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 366,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 275,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 368,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 825,
							"linearizedBaseContracts": [
								825
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 373,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 382,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 394,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 397,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 328,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 399,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 400,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 401,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 395,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 393,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 384,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 361,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 825,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 420,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 423,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 425,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 426,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 414,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 427,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 416,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 428,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 421,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 419,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 409,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 408,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 361,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 825,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 450,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 328,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 452,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 441,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 448,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 446,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 445,
												"id": 457,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 361,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 825,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 478,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 480,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 465,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 481,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 482,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 469,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 483,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 476,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 474,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 473,
												"id": 486,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 361,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 825,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													500
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 499,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 505,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$825",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$825",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 503,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 501,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 512,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 514,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 510,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 490,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 361,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 825,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															531
														],
														"declarations": [
															{
																"constant": false,
																"id": 531,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 560,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 540,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 536,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$825",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$825",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 534,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 538,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 532,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 338,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 541,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 542,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 551,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 550,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 546,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 547,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 527,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 544,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 382,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 549,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 554,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 552,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 559,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 521,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 361,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 825,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 573,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 577,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 348,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 579,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 580,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 581,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 575,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 585,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 586,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 584,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 593,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$361",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 348,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 595,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 568,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 596,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 591,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 600,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 602,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 603,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 601,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 564,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 361,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 825,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 622,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 638,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 226,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 649,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 648,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 644,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 642,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 641,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 647,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 650,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 627,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 612,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 611,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 275,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 825,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 667,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 682,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 683,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 684,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 685,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 680,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 252,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 696,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 695,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 691,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 656,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 689,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 688,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 694,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 673,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 656,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 674,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 675,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 676,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 672,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 678,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 655,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 654,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 275,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 825,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 712,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 726,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 727,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 728,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 724,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 274,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 739,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 738,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 734,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 703,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 732,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 731,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 737,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 740,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 718,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 719,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 720,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 717,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 722,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 702,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 701,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 275,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 708,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 825,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 748,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 748,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 746,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 758,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 769,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 763,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 746,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$361",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$361",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 761,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 776,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 746,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$361",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$361",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 745,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 744,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 361,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 825,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 794,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 797,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 799,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 789,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 789,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 798,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 801,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 795,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 787,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 803,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 804,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 805,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 816,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 810,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 787,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$361",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$361",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 809,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 808,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 820,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 793,
												"id": 822,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 786,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 785,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 361,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 788,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 825,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 826,
							"src": "698:9376:6",
							"usedErrors": [
								373,
								382
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							855
						]
					},
					"id": 856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 827,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 828,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 855,
							"linearizedBaseContracts": [
								855
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 833,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 835,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 855,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 842,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 841,
												"id": 844,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 855,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 850,
												"id": 852,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 855,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 856,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							867
						]
					},
					"id": 868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 857,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 858,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 867,
							"linearizedBaseContracts": [
								867
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 860,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 867,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 868,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"src/KipuBankV21.sol": {
				"ast": {
					"absolutePath": "src/KipuBankV21.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							855
						],
						"IERC1363": [
							275
						],
						"IERC20": [
							361
						],
						"KipuBank": [
							1290
						],
						"Ownable": [
							193
						],
						"SafeERC20": [
							825
						]
					},
					"id": 1291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 869,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 870,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1291,
							"sourceUnit": 194,
							"src": "313:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1291,
							"sourceUnit": 362,
							"src": "367:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 872,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1291,
							"sourceUnit": 826,
							"src": "425:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 873,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1291,
							"sourceUnit": 46,
							"src": "492:76:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 874,
										"name": "Ownable",
										"nameLocations": [
											"593:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "593:7:9"
									},
									"id": 875,
									"nodeType": "InheritanceSpecifier",
									"src": "593:7:9"
								}
							],
							"canonicalName": "KipuBank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1290,
							"linearizedBaseContracts": [
								1290,
								193,
								855
							],
							"name": "KipuBank",
							"nameLocation": "581:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "977:49:9",
										"text": "@notice The per-transaction withdrawal limit."
									},
									"functionSelector": "82ee0d1d",
									"id": 878,
									"mutability": "immutable",
									"name": "WITHDRAWAL_LIMIT",
									"nameLocation": "1057:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1290,
									"src": "1032:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 877,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1032:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "1080:55:9",
										"text": "@notice The global deposit cap for the entire bank."
									},
									"functionSelector": "893b7e95",
									"id": 881,
									"mutability": "immutable",
									"name": "BANK_CAP_USD",
									"nameLocation": "1166:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1290,
									"src": "1141:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 880,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1141:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "741bef1a",
									"id": 884,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "1216:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1290,
									"src": "1187:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 883,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 882,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"1187:21:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "1187:21:9"
										},
										"referencedDeclaration": 45,
										"src": "1187:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fa569274",
									"id": 887,
									"mutability": "immutable",
									"name": "USDC_TOKEN",
									"nameLocation": "1256:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1290,
									"src": "1232:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$361",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 886,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 885,
											"name": "IERC20",
											"nameLocations": [
												"1232:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 361,
											"src": "1232:6:9"
										},
										"referencedDeclaration": 361,
										"src": "1232:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$361",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "1309:72:9",
										"text": "@notice The total amount of ETH currently deposited in the contract."
									},
									"functionSelector": "ff50abdc",
									"id": 890,
									"mutability": "mutable",
									"name": "totalDeposited",
									"nameLocation": "1402:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1290,
									"src": "1387:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 889,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1387:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "1423:60:9",
										"text": "@notice A counter for the total number of deposits made."
									},
									"functionSelector": "2dfdf0b5",
									"id": 893,
									"mutability": "mutable",
									"name": "depositCount",
									"nameLocation": "1504:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1290,
									"src": "1489:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 892,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1489:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "1523:63:9",
										"text": "@notice A counter for the total number of withdrawals made."
									},
									"functionSelector": "71706cbe",
									"id": 896,
									"mutability": "mutable",
									"name": "withdrawalCount",
									"nameLocation": "1607:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1290,
									"src": "1592:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 895,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1592:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "1629:34:9",
										"text": "@notice Reentrancy guard flag."
									},
									"id": 899,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "1682:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1290,
									"src": "1669:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 898,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1669:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "KipuBank.Balances",
									"id": 904,
									"members": [
										{
											"constant": false,
											"id": 901,
											"mutability": "mutable",
											"name": "eth",
											"nameLocation": "1789:3:9",
											"nodeType": "VariableDeclaration",
											"scope": 904,
											"src": "1781:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 900,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1781:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 903,
											"mutability": "mutable",
											"name": "usdc",
											"nameLocation": "1811:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 904,
											"src": "1803:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 902,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1803:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Balances",
									"nameLocation": "1761:8:9",
									"nodeType": "StructDefinition",
									"scope": 1290,
									"src": "1754:69:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "1854:49:9",
										"text": "@notice Mapping from address to user balance."
									},
									"functionSelector": "27e235e3",
									"id": 910,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "2030:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1290,
									"src": "1993:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$904_storage_$",
										"typeString": "mapping(address => struct KipuBank.Balances)"
									},
									"typeName": {
										"id": 909,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 906,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2002:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1993:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$904_storage_$",
											"typeString": "mapping(address => struct KipuBank.Balances)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 908,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 907,
												"name": "Balances",
												"nameLocations": [
													"2013:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 904,
												"src": "2013:8:9"
											},
											"referencedDeclaration": 904,
											"src": "2013:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Balances_$904_storage_ptr",
												"typeString": "struct KipuBank.Balances"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "2364:157:9",
										"text": "@notice Emitted when a user deposits ETH.\n @param user The address of the user who deposited.\n @param amount The amount deposited in wei."
									},
									"eventSelector": "7034bb05cfe54b0d147fc0574ed166101e7f0313eb404e113974fbe2a998ca83",
									"id": 917,
									"name": "DepositEth",
									"nameLocation": "2533:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2560:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "2544:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2574:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "2566:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2543:38:9"
									},
									"src": "2527:55:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "2594:159:9",
										"text": "@notice Emitted when a user deposits USDC.\n @param user The address of the user who deposited.\n @param amount The amount deposited in USDC."
									},
									"eventSelector": "e7440f6772025dec9be06ba934e6ee5289b73533ee2136ba668f6cb6ea3f56a8",
									"id": 924,
									"name": "DepositUSDC",
									"nameLocation": "2765:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2793:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2777:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2807:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2799:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2776:38:9"
									},
									"src": "2759:56:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "2823:157:9",
										"text": "@notice Emitted when a user withdraws ETH.\n @param user The address of the user who withdrew.\n @param amount The amount withdrawn in wei."
									},
									"eventSelector": "40953fd5db732b94d86820ccd999bd4ab6da08154a115387891e8957e585fa1d",
									"id": 931,
									"name": "WithdrawalEth",
									"nameLocation": "2992:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3022:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "3006:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3036:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "3028:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:38:9"
									},
									"src": "2986:58:9"
								},
								{
									"anonymous": false,
									"eventSelector": "736dfcc39d27adad7de37e9a6f1e8252e0953ebf8f582d535672d33f8986738b",
									"id": 937,
									"name": "WithdrawalUSDC",
									"nameLocation": "3068:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3099:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3083:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3083:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3113:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3105:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3082:38:9"
									},
									"src": "3062:59:9"
								},
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "3443:84:9",
										"text": "@notice Error thrown when the total deposits would exceed the bank's global cap."
									},
									"errorSelector": "448f3ca8",
									"id": 940,
									"name": "BankCapExceeded",
									"nameLocation": "3539:15:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3554:2:9"
									},
									"src": "3533:24:9"
								},
								{
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "3563:84:9",
										"text": "@notice Error thrown when a withdrawal amount exceeds the per-transaction limit."
									},
									"errorSelector": "4e6a3696",
									"id": 943,
									"name": "WithdrawalLimitExceeded",
									"nameLocation": "3659:23:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3682:2:9"
									},
									"src": "3653:32:9"
								},
								{
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "3691:79:9",
										"text": "@notice Error thrown when a user tries to withdraw more than their balance."
									},
									"errorSelector": "f4d678b8",
									"id": 946,
									"name": "InsufficientBalance",
									"nameLocation": "3782:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3801:2:9"
									},
									"src": "3776:28:9"
								},
								{
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "3810:71:9",
										"text": "@notice Error thrown when the provided amount is invalid (e.g., 0)."
									},
									"errorSelector": "2c5211c6",
									"id": 949,
									"name": "InvalidAmount",
									"nameLocation": "3893:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3906:2:9"
									},
									"src": "3887:22:9"
								},
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "3915:122:9",
										"text": "@notice Error thrown when a withdrawal transfer fails.\n @param errorData The data returned by the failed call."
									},
									"errorSelector": "49ba945b",
									"id": 954,
									"name": "WithdrawalFailed",
									"nameLocation": "4049:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "errorData",
												"nameLocation": "4072:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "4066:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4066:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4065:17:9"
									},
									"src": "4043:40:9"
								},
								{
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "4089:81:9",
										"text": "@notice Error for reentrancy guard, thrown when a reentrant call is detected."
									},
									"errorSelector": "37ed32e8",
									"id": 957,
									"name": "ReentrantCall",
									"nameLocation": "4182:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4195:2:9"
									},
									"src": "4176:22:9"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "4647:114:9",
										"statements": [
											{
												"condition": {
													"id": 960,
													"name": "locked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 899,
													"src": "4662:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 964,
												"nodeType": "IfStatement",
												"src": "4658:34:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 961,
															"name": "ReentrantCall",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "4677:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4677:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 963,
													"nodeType": "RevertStatement",
													"src": "4670:22:9"
												}
											},
											{
												"expression": {
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 965,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "4703:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4712:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4703:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "4703:13:9"
											},
											{
												"id": 969,
												"nodeType": "PlaceholderStatement",
												"src": "4727:1:9"
											},
											{
												"expression": {
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 970,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "4739:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4748:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4739:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "4739:14:9"
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "4523:94:9",
										"text": "@notice Prevents reentrancy attacks by locking the contract during a function's execution."
									},
									"id": 975,
									"name": "nonReentrant",
									"nameLocation": "4632:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:2:9"
									},
									"src": "4623:138:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "4923:71:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 980,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "4938:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4949:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4938:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 986,
												"nodeType": "IfStatement",
												"src": "4934:40:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 983,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "4959:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4959:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 985,
													"nodeType": "RevertStatement",
													"src": "4952:22:9"
												}
											},
											{
												"id": 987,
												"nodeType": "PlaceholderStatement",
												"src": "4985:1:9"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "4769:108:9",
										"text": "@notice Checks if the provided amount is greater than zero.\n @param _amount The amount to check."
									},
									"id": 989,
									"name": "nonZeroAmount",
									"nameLocation": "4892:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4914:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "4906:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4906:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4905:17:9"
									},
									"src": "4883:111:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "5763:224:9",
										"statements": [
											{
												"expression": {
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1003,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "5774:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1005,
																"name": "_priceFeedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "5808:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1004,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "5786:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5786:40:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "5774:52:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "5774:52:9"
											},
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "USDC_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "5837:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$361",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1011,
																"name": "_usdcTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "5857:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1010,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "5850:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$361_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5850:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$361",
															"typeString": "contract IERC20"
														}
													},
													"src": "5837:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "5837:38:9"
											},
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1015,
														"name": "BANK_CAP_USD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "5943:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1016,
															"name": "_bankCapUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "5958:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	},
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5973:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5977:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "5973:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	}
																}
															],
															"id": 1020,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5972:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000_by_1",
																"typeString": "int_const 100000000"
															}
														},
														"src": "5958:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5943:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "5943:36:9"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "5321:295:9",
										"text": " @notice Initializes the contract.\n @param _priceFeedAddress The Chainlink ETH/USD price feed address.\n @param _usdcTokenAddress The address of the USDC token contract.\n @param _bankCapUSD The total deposit cap for ETH, in whole USD (e.g., 10000 for $10,000)."
									},
									"id": 1025,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 999,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5751:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5755:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5751:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1001,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 998,
												"name": "Ownable",
												"nameLocations": [
													"5743:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "5743:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5743:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "_priceFeedAddress",
												"nameLocation": "5652:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5644:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5644:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "_usdcTokenAddress",
												"nameLocation": "5688:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5680:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5680:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "_bankCapUSD",
												"nameLocation": "5724:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5716:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5716:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:109:9"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5763:0:9"
									},
									"scope": 1290,
									"src": "5622:365:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "6609:563:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1033,
															"name": "totalDeposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "6732:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 1034,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6749:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6753:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6749:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6732:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1037,
														"name": "BANK_CAP_USD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "6761:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6732:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1042,
												"nodeType": "IfStatement",
												"src": "6728:71:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1039,
															"name": "BankCapExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "6782:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6782:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1041,
													"nodeType": "RevertStatement",
													"src": "6775:24:9"
												}
											},
											{
												"id": 1048,
												"nodeType": "UncheckedBlock",
												"src": "6918:64:9",
												"statements": [
													{
														"expression": {
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1043,
																"name": "totalDeposited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "6943:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"expression": {
																	"id": 1044,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6961:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6965:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "6961:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6943:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1047,
														"nodeType": "ExpressionStatement",
														"src": "6943:27:9"
													}
												]
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1049,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "6992:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$904_storage_$",
																	"typeString": "mapping(address => struct KipuBank.Balances storage ref)"
																}
															},
															"id": 1052,
															"indexExpression": {
																"expression": {
																	"id": 1050,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7001:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7005:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7001:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6992:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balances_$904_storage",
																"typeString": "struct KipuBank.Balances storage ref"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7013:3:9",
														"memberName": "eth",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "6992:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1054,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7020:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7024:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "7020:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6992:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "6992:37:9"
											},
											{
												"expression": {
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7040:14:9",
													"subExpression": {
														"id": 1058,
														"name": "depositCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "7040:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "7040:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1062,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7142:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7146:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7142:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1064,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7154:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7158:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "7154:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "DepositEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "7131:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7131:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "EmitStatement",
												"src": "7126:38:9"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "6316:223:9",
										"text": " @notice Deposits ETH into the user's balance.\n @dev Reverts if the amount is zero or if the deposit would exceed the global bank cap.\n @dev Follows the checks-effects-interactions pattern."
									},
									"functionSelector": "439370b1",
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1029,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6598:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6602:5:9",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "6598:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1031,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1028,
												"name": "nonZeroAmount",
												"nameLocations": [
													"6584:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 989,
												"src": "6584:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6584:24:9"
										}
									],
									"name": "depositEth",
									"nameLocation": "6554:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6564:2:9"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6609:0:9"
									},
									"scope": 1290,
									"src": "6545:627:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "7250:555:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1077,
															"name": "totalDeposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "7373:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1078,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "7390:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7373:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1080,
														"name": "BANK_CAP_USD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "7400:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7373:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1085,
												"nodeType": "IfStatement",
												"src": "7369:69:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1082,
															"name": "BankCapExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "7421:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7421:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1084,
													"nodeType": "RevertStatement",
													"src": "7414:24:9"
												}
											},
											{
												"id": 1090,
												"nodeType": "UncheckedBlock",
												"src": "7557:62:9",
												"statements": [
													{
														"expression": {
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1086,
																"name": "totalDeposited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "7582:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1087,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "7600:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7582:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1089,
														"nodeType": "ExpressionStatement",
														"src": "7582:25:9"
													}
												]
											},
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1091,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "7629:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$904_storage_$",
																	"typeString": "mapping(address => struct KipuBank.Balances storage ref)"
																}
															},
															"id": 1094,
															"indexExpression": {
																"expression": {
																	"id": 1092,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7638:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7642:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7638:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7629:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balances_$904_storage",
																"typeString": "struct KipuBank.Balances storage ref"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7650:4:9",
														"memberName": "usdc",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 903,
														"src": "7629:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1096,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "7658:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7629:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "7629:36:9"
											},
											{
												"expression": {
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7676:14:9",
													"subExpression": {
														"id": 1099,
														"name": "depositCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "7676:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "7676:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1103,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7777:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7781:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7777:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "7789:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "DepositUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "7765:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7765:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "EmitStatement",
												"src": "7760:37:9"
											}
										]
									},
									"functionSelector": "f688bcfb",
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1074,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1071,
													"src": "7241:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1075,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1073,
												"name": "nonZeroAmount",
												"nameLocations": [
													"7227:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 989,
												"src": "7227:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7227:22:9"
										}
									],
									"name": "depositUSDC",
									"nameLocation": "7189:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7209:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "7201:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7201:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7200:17:9"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7250:0:9"
									},
									"scope": 1290,
									"src": "7180:625:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "8202:558:9",
										"statements": [
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "userBalance",
														"nameLocation": "8221:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1174,
														"src": "8213:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8213:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1122,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "8235:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$904_storage_$",
																"typeString": "mapping(address => struct KipuBank.Balances storage ref)"
															}
														},
														"id": 1125,
														"indexExpression": {
															"expression": {
																"id": 1123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8244:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8248:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8244:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8235:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Balances_$904_storage",
															"typeString": "struct KipuBank.Balances storage ref"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8256:3:9",
													"memberName": "eth",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 901,
													"src": "8235:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8213:46:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1128,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "8334:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1129,
														"name": "WITHDRAWAL_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "8344:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8334:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1134,
												"nodeType": "IfStatement",
												"src": "8330:64:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1131,
															"name": "WithdrawalLimitExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "8369:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8369:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1133,
													"nodeType": "RevertStatement",
													"src": "8362:32:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1135,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "8409:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1136,
														"name": "userBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "8419:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8409:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "8405:55:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1138,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "8439:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8439:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1140,
													"nodeType": "RevertStatement",
													"src": "8432:28:9"
												}
											},
											{
												"expression": {
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1142,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "8501:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$904_storage_$",
																	"typeString": "mapping(address => struct KipuBank.Balances storage ref)"
																}
															},
															"id": 1145,
															"indexExpression": {
																"expression": {
																	"id": 1143,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8510:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8514:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8510:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8501:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balances_$904_storage",
																"typeString": "struct KipuBank.Balances storage ref"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8522:3:9",
														"memberName": "eth",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "8501:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1147,
															"name": "userBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "8528:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1148,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "8542:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8528:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8501:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "8501:48:9"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1152,
														"name": "totalDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "8560:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1153,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "8578:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8560:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "8560:25:9"
											},
											{
												"expression": {
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "8596:17:9",
													"subExpression": {
														"id": 1156,
														"name": "withdrawalCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "8596:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "8596:17:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1162,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8679:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8683:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8679:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8671:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1160,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8671:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8671:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1165,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "8692:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1159,
														"name": "_transferEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "8658:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8658:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "8658:42:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1169,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8732:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8736:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8732:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "8744:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1168,
														"name": "WithdrawalEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "8718:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "EmitStatement",
												"src": "8713:39:9"
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "7813:298:9",
										"text": " @notice Withdraws ETH from the user's balance.\n @param _amount The amount to withdraw in wei.\n @dev Reverts if the amount is zero, exceeds the withdrawal limit, or if the user has insufficient balance.\n @dev Follows the checks-effects-interactions pattern."
									},
									"functionSelector": "1edc8f03",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1114,
												"name": "nonReentrant",
												"nameLocations": [
													"8166:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 975,
												"src": "8166:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8166:12:9"
										},
										{
											"arguments": [
												{
													"id": 1117,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1112,
													"src": "8193:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1118,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1116,
												"name": "nonZeroAmount",
												"nameLocations": [
													"8179:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 989,
												"src": "8179:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8179:22:9"
										}
									],
									"name": "withdrawalEth",
									"nameLocation": "8126:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8148:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "8140:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8140:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8139:17:9"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8202:0:9"
									},
									"scope": 1290,
									"src": "8117:643:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "8858:561:9",
										"statements": [
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "userBalance",
														"nameLocation": "8877:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "8869:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1185,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8869:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1187,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "8891:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$904_storage_$",
																"typeString": "mapping(address => struct KipuBank.Balances storage ref)"
															}
														},
														"id": 1190,
														"indexExpression": {
															"expression": {
																"id": 1188,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8900:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8904:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8900:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8891:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Balances_$904_storage",
															"typeString": "struct KipuBank.Balances storage ref"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8912:3:9",
													"memberName": "eth",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 901,
													"src": "8891:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8869:46:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1193,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "8990:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1194,
														"name": "WITHDRAWAL_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "9000:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8990:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1199,
												"nodeType": "IfStatement",
												"src": "8986:64:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1196,
															"name": "WithdrawalLimitExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "9025:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9025:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1198,
													"nodeType": "RevertStatement",
													"src": "9018:32:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "9065:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1201,
														"name": "userBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "9075:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9065:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"nodeType": "IfStatement",
												"src": "9061:55:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1203,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "9095:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9095:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1205,
													"nodeType": "RevertStatement",
													"src": "9088:28:9"
												}
											},
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1207,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "9157:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$904_storage_$",
																	"typeString": "mapping(address => struct KipuBank.Balances storage ref)"
																}
															},
															"id": 1210,
															"indexExpression": {
																"expression": {
																	"id": 1208,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9166:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9170:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9166:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9157:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balances_$904_storage",
																"typeString": "struct KipuBank.Balances storage ref"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9178:4:9",
														"memberName": "usdc",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 903,
														"src": "9157:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1212,
															"name": "userBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "9185:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1213,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "9199:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9185:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9157:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "9157:49:9"
											},
											{
												"expression": {
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1217,
														"name": "totalDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "9217:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1218,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "9235:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9217:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "9217:25:9"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "9253:17:9",
													"subExpression": {
														"id": 1221,
														"name": "withdrawalCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "9253:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "9253:17:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1227,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9337:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9341:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9337:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9329:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1225,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9329:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9329:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1230,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "9350:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1224,
														"name": "_transferUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "9315:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9315:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "9315:43:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1234,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9391:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9395:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9391:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "9403:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1233,
														"name": "WithdrawalUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "9376:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9376:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "EmitStatement",
												"src": "9371:40:9"
											}
										]
									},
									"functionSelector": "9b900405",
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1180,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1179,
												"name": "nonReentrant",
												"nameLocations": [
													"8822:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 975,
												"src": "8822:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8822:12:9"
										},
										{
											"arguments": [
												{
													"id": 1182,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1177,
													"src": "8849:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1181,
												"name": "nonZeroAmount",
												"nameLocations": [
													"8835:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 989,
												"src": "8835:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8835:22:9"
										}
									],
									"name": "withdrawalUSDC",
									"nameLocation": "8781:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8804:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "8796:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8796:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8795:17:9"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8858:0:9"
									},
									"scope": 1290,
									"src": "8772:647:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "9592:50:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1246,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "9610:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$904_storage_$",
																"typeString": "mapping(address => struct KipuBank.Balances storage ref)"
															}
														},
														"id": 1249,
														"indexExpression": {
															"expression": {
																"id": 1247,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9619:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9623:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9619:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9610:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Balances_$904_storage",
															"typeString": "struct KipuBank.Balances storage ref"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9631:3:9",
													"memberName": "eth",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 901,
													"src": "9610:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1245,
												"id": 1251,
												"nodeType": "Return",
												"src": "9603:31:9"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "9425:104:9",
										"text": " @notice Gets the balance of the message sender.\n @return The balance in wei."
									},
									"functionSelector": "9caf34c4",
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceEth",
									"nameLocation": "9544:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9557:2:9"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "9583:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9583:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9582:9:9"
									},
									"scope": 1290,
									"src": "9535:107:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "10239:173:9",
										"statements": [
											{
												"assignments": [
													1262,
													1264
												],
												"declarations": [
													{
														"constant": false,
														"id": 1262,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10256:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "10251:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1261,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10251:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1264,
														"mutability": "mutable",
														"name": "errorData",
														"nameLocation": "10278:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "10265:22:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1263,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10265:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1271,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10316:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1265,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "10291:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10295:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10291:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1267,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "10307:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10291:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10291:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10250:69:9"
											},
											{
												"condition": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10334:8:9",
													"subExpression": {
														"id": 1272,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "10335:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1279,
												"nodeType": "IfStatement",
												"src": "10330:75:9",
												"trueBody": {
													"id": 1278,
													"nodeType": "Block",
													"src": "10344:61:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1275,
																		"name": "errorData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "10383:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1274,
																	"name": "WithdrawalFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "10366:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (bytes memory) pure returns (error)"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10366:27:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1277,
															"nodeType": "RevertStatement",
															"src": "10359:34:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "9970:195:9",
										"text": " @notice Internal function that performs a safe ETH transfer using the .call method.\n @param _to The recipient's address.\n @param _amount The amount to transfer."
									},
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferEth",
									"nameLocation": "10180:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "10209:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "10193:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10193:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10222:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "10214:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10214:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10192:38:9"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10239:0:9"
									},
									"scope": 1290,
									"src": "10171:241:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "10489:8:9",
										"statements": []
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferUSDC",
									"nameLocation": "10429:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "10459:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "10443:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10443:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10472:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "10464:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10464:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10442:38:9"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10489:0:9"
									},
									"scope": 1290,
									"src": "10420:77:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1291,
							"src": "572:9932:9",
							"usedErrors": [
								59,
								64,
								940,
								943,
								946,
								949,
								954,
								957
							],
							"usedEvents": [
								70,
								917,
								924,
								931,
								937
							]
						}
					],
					"src": "33:10471:9"
				},
				"id": 9
			}
		}
	}
}